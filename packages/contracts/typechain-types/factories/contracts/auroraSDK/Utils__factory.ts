/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Utils, UtilsInterface } from "../../../contracts/auroraSDK/Utils";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "buffer",
        type: "bytes",
      },
    ],
    name: "bytesToHex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6106a1610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063451d89fa1461003a575b600080fd5b610054600480360381019061004f91906103ca565b61006a565b6040516100619190610492565b60405180910390f35b606060006002835161007c91906104ed565b67ffffffffffffffff8111156100955761009461029f565b5b6040519080825280601f01601f1916602001820160405280156100c75781602001600182028036833780820191505090505b50905060006040518060400160405280601081526020017f3031323334353637383961626364656600000000000000000000000000000000815250905060005b8451811015610265578182518683815181106101265761012561052f565b5b602001015160f81c60f81b60f81c60ff16610141919061058d565b815181106101525761015161052f565b5b602001015160f81c60f81b8360028361016b91906104ed565b8151811061017c5761017b61052f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508182518683815181106101c1576101c061052f565b5b602001015160f81c60f81b60f81c60ff166101dc91906105be565b815181106101ed576101ec61052f565b5b602001015160f81c60f81b83600160028461020891906104ed565b61021291906105ef565b815181106102235761022261052f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061025d90610623565b915050610107565b508192505050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102d78261028e565b810181811067ffffffffffffffff821117156102f6576102f561029f565b5b80604052505050565b6000610309610270565b905061031582826102ce565b919050565b600067ffffffffffffffff8211156103355761033461029f565b5b61033e8261028e565b9050602081019050919050565b82818337600083830152505050565b600061036d6103688461031a565b6102ff565b90508281526020810184848401111561038957610388610289565b5b61039484828561034b565b509392505050565b600082601f8301126103b1576103b0610284565b5b81356103c184826020860161035a565b91505092915050565b6000602082840312156103e0576103df61027a565b5b600082013567ffffffffffffffff8111156103fe576103fd61027f565b5b61040a8482850161039c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561044d578082015181840152602081019050610432565b60008484015250505050565b600061046482610413565b61046e818561041e565b935061047e81856020860161042f565b6104878161028e565b840191505092915050565b600060208201905081810360008301526104ac8184610459565b905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104f8826104b4565b9150610503836104b4565b9250828202610511816104b4565b91508282048414831517610528576105276104be565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610598826104b4565b91506105a3836104b4565b9250826105b3576105b261055e565b5b828204905092915050565b60006105c9826104b4565b91506105d4836104b4565b9250826105e4576105e361055e565b5b828206905092915050565b60006105fa826104b4565b9150610605836104b4565b925082820190508082111561061d5761061c6104be565b5b92915050565b600061062e826104b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106605761065f6104be565b5b60018201905091905056fea2646970667358221220361bc44f91da410d5acc346318ecd9e39c11fe8ba69a3ce2660c4f5a7c4b569764736f6c63430008110033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Utils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Utils__factory {
    return super.connect(runner) as Utils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Utils {
    return new Contract(address, _abi, runner) as unknown as Utils;
  }
}
