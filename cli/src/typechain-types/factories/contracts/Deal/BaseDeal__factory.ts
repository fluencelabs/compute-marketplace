/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BaseDeal,
  BaseDealInterface,
} from "../../../contracts/Deal/BaseDeal";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "airScriptHash_",
        type: "bytes32",
      },
      {
        internalType: "contract Core",
        name: "core_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "airScriptHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aquaProxy",
    outputs: [
      {
        internalType: "contract AquaProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "core",
    outputs: [
      {
        internalType: "contract Core",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fluenceToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000ece38038062000ece833981810160405281019062000037919062000439565b620000576200004b620000ee60201b60201c565b620000f660201b60201c565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508260028190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000e481620001ba60201b60201c565b50505050620005c6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001ca6200025060201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200023c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002339062000532565b60405180910390fd5b6200024d81620000f660201b60201c565b50565b62000260620000ee60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1662000286620002e160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620002df576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002d690620005a4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200033c826200030f565b9050919050565b600062000350826200032f565b9050919050565b620003628162000343565b81146200036e57600080fd5b50565b600081519050620003828162000357565b92915050565b6000819050919050565b6200039d8162000388565b8114620003a957600080fd5b50565b600081519050620003bd8162000392565b92915050565b6000620003d0826200032f565b9050919050565b620003e281620003c3565b8114620003ee57600080fd5b50565b6000815190506200040281620003d7565b92915050565b62000413816200032f565b81146200041f57600080fd5b50565b600081519050620004338162000408565b92915050565b600080600080608085870312156200045657620004556200030a565b5b6000620004668782880162000371565b94505060206200047987828801620003ac565b93505060406200048c87828801620003f1565b92505060606200049f8782880162000422565b91505092959194509250565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006200051a602683620004ab565b91506200052782620004bc565b604082019050919050565b600060208201905081810360008301526200054d816200050b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200058c602083620004ab565b9150620005998262000554565b602082019050919050565b60006020820190508181036000830152620005bf816200057d565b9050919050565b6080516108ec620005e2600039600061016901526108ec6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ac027f971161005b578063ac027f97146100f1578063f2f4eb261461010f578063f2fde38b1461012d578063f890ab041461014957610088565b80633013ce291461008d578063715018a6146100ab57806385079cd7146100b55780638da5cb5b146100d3575b600080fd5b610095610167565b6040516100a29190610570565b60405180910390f35b6100b361018b565b005b6100bd61019f565b6040516100ca91906105ac565b60405180910390f35b6100db610237565b6040516100e891906105e8565b60405180910390f35b6100f9610260565b6040516101069190610570565b60405180910390f35b6101176102f8565b6040516101249190610624565b60405180910390f35b61014760048036038101906101429190610670565b61031e565b005b6101516103a1565b60405161015e91906106b6565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6101936103a7565b61019d6000610425565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166385079cd76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610232919061070f565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac027f976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f3919061077a565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103266103a7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c9061082a565b60405180910390fd5b61039e81610425565b50565b60025481565b6103af6104e9565b73ffffffffffffffffffffffffffffffffffffffff166103cd610237565b73ffffffffffffffffffffffffffffffffffffffff1614610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a90610896565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061053661053161052c846104f1565b610511565b6104f1565b9050919050565b60006105488261051b565b9050919050565b600061055a8261053d565b9050919050565b61056a8161054f565b82525050565b60006020820190506105856000830184610561565b92915050565b60006105968261053d565b9050919050565b6105a68161058b565b82525050565b60006020820190506105c1600083018461059d565b92915050565b60006105d2826104f1565b9050919050565b6105e2816105c7565b82525050565b60006020820190506105fd60008301846105d9565b92915050565b600061060e8261053d565b9050919050565b61061e81610603565b82525050565b60006020820190506106396000830184610615565b92915050565b600080fd5b61064d816105c7565b811461065857600080fd5b50565b60008135905061066a81610644565b92915050565b6000602082840312156106865761068561063f565b5b60006106948482850161065b565b91505092915050565b6000819050919050565b6106b08161069d565b82525050565b60006020820190506106cb60008301846106a7565b92915050565b60006106dc826105c7565b9050919050565b6106ec816106d1565b81146106f757600080fd5b50565b600081519050610709816106e3565b92915050565b6000602082840312156107255761072461063f565b5b6000610733848285016106fa565b91505092915050565b6000610747826105c7565b9050919050565b6107578161073c565b811461076257600080fd5b50565b6000815190506107748161074e565b92915050565b6000602082840312156107905761078f61063f565b5b600061079e84828501610765565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108146026836107a7565b915061081f826107b8565b604082019050919050565b6000602082019050818103600083015261084381610807565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108806020836107a7565b915061088b8261084a565b602082019050919050565b600060208201905081810360008301526108af81610873565b905091905056fea2646970667358221220c1a20a669291edf9c35a970a2fc5a9a9b94c8c339811a97c325cf2e6b25478d964736f6c63430008110033";

type BaseDealConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseDealConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseDeal__factory extends ContractFactory {
  constructor(...args: BaseDealConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    paymentToken_: PromiseOrValue<string>,
    airScriptHash_: PromiseOrValue<BytesLike>,
    core_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaseDeal> {
    return super.deploy(
      paymentToken_,
      airScriptHash_,
      core_,
      owner_,
      overrides || {}
    ) as Promise<BaseDeal>;
  }
  override getDeployTransaction(
    paymentToken_: PromiseOrValue<string>,
    airScriptHash_: PromiseOrValue<BytesLike>,
    core_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      paymentToken_,
      airScriptHash_,
      core_,
      owner_,
      overrides || {}
    );
  }
  override attach(address: string): BaseDeal {
    return super.attach(address) as BaseDeal;
  }
  override connect(signer: Signer): BaseDeal__factory {
    return super.connect(signer) as BaseDeal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseDealInterface {
    return new utils.Interface(_abi) as BaseDealInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseDeal {
    return new Contract(address, _abi, signerOrProvider) as BaseDeal;
  }
}
