/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RoleManager,
  RoleManagerInterface,
} from "../../../contracts/Deal/RoleManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getRole",
    outputs: [
      {
        internalType: "enum RoleManagerState.Role",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631aa3a0081461003b5780634427673314610045575b600080fd5b610043610075565b005b61005f600480360381019061005a919061025f565b610082565b60405161006c9190610303565b60405180910390f35b6100803360016100da565b565b60008060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600060018111156100ee576100ed61028c565b5b6000800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600181111561014f5761014e61028c565b5b1461018f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101869061037b565b60405180910390fd5b806000800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360018111156101f3576101f261028c565b5b02179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022c82610201565b9050919050565b61023c81610221565b811461024757600080fd5b50565b60008135905061025981610233565b92915050565b600060208284031215610275576102746101fc565b5b60006102838482850161024a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106102cc576102cb61028c565b5b50565b60008190506102dd826102bb565b919050565b60006102ed826102cf565b9050919050565b6102fd816102e2565b82525050565b600060208201905061031860008301846102f4565b92915050565b600082825260208201905092915050565b7f5061727469636970616e7420616c726561647920657869737400000000000000600082015250565b600061036560198361031e565b91506103708261032f565b602082019050919050565b6000602082019050818103600083015261039481610358565b905091905056fea26469706673582212202ef39dd4e5e0662f4b8bd8a60a89c05672aae21ea774d2d0c40e3ff91214cffd64736f6c63430008110033";

type RoleManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoleManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoleManager__factory extends ContractFactory {
  constructor(...args: RoleManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoleManager> {
    return super.deploy(overrides || {}) as Promise<RoleManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoleManager {
    return super.attach(address) as RoleManager;
  }
  override connect(signer: Signer): RoleManager__factory {
    return super.connect(signer) as RoleManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoleManagerInterface {
    return new utils.Interface(_abi) as RoleManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoleManager {
    return new Contract(address, _abi, signerOrProvider) as RoleManager;
  }
}
