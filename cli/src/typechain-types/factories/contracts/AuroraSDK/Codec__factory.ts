/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Codec, CodecInterface } from "../../../contracts/AuroraSDK/Codec";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ptr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
        ],
        internalType: "struct Borsh.Data",
        name: "data",
        type: "tuple",
      },
    ],
    name: "decodePromiseResult",
    outputs: [
      {
        components: [
          {
            internalType: "enum PromiseResultStatus",
            name: "status",
            type: "PromiseResultStatus",
          },
          {
            internalType: "bytes",
            name: "output",
            type: "bytes",
          },
        ],
        internalType: "struct PromiseResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "targetAccountId",
            type: "string",
          },
          {
            internalType: "string",
            name: "method",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "args",
            type: "bytes",
          },
          {
            internalType: "uint128",
            name: "nearBalance",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "nearGas",
            type: "uint64",
          },
        ],
        internalType: "struct PromiseCreateArgs",
        name: "nearPromise",
        type: "tuple",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "targetAccountId",
                type: "string",
              },
              {
                internalType: "string",
                name: "method",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "args",
                type: "bytes",
              },
              {
                internalType: "uint128",
                name: "nearBalance",
                type: "uint128",
              },
              {
                internalType: "uint64",
                name: "nearGas",
                type: "uint64",
              },
            ],
            internalType: "struct PromiseCreateArgs",
            name: "base",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "targetAccountId",
                type: "string",
              },
              {
                internalType: "string",
                name: "method",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "args",
                type: "bytes",
              },
              {
                internalType: "uint128",
                name: "nearBalance",
                type: "uint128",
              },
              {
                internalType: "uint64",
                name: "nearGas",
                type: "uint64",
              },
            ],
            internalType: "struct PromiseCreateArgs",
            name: "callback",
            type: "tuple",
          },
        ],
        internalType: "struct PromiseWithCallback",
        name: "nearPromise",
        type: "tuple",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "targetAccountId",
                type: "string",
              },
              {
                internalType: "string",
                name: "method",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "args",
                type: "bytes",
              },
              {
                internalType: "uint128",
                name: "nearBalance",
                type: "uint128",
              },
              {
                internalType: "uint64",
                name: "nearGas",
                type: "uint64",
              },
            ],
            internalType: "struct PromiseCreateArgs",
            name: "base",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "targetAccountId",
                type: "string",
              },
              {
                internalType: "string",
                name: "method",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "args",
                type: "bytes",
              },
              {
                internalType: "uint128",
                name: "nearBalance",
                type: "uint128",
              },
              {
                internalType: "uint64",
                name: "nearGas",
                type: "uint64",
              },
            ],
            internalType: "struct PromiseCreateArgs",
            name: "callback",
            type: "tuple",
          },
        ],
        internalType: "struct PromiseWithCallback",
        name: "nearPromise",
        type: "tuple",
      },
      {
        internalType: "enum ExecutionMode",
        name: "mode",
        type: "ExecutionMode",
      },
    ],
    name: "encodeCrossContractCallArgs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "targetAccountId",
            type: "string",
          },
          {
            internalType: "string",
            name: "method",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "args",
            type: "bytes",
          },
          {
            internalType: "uint128",
            name: "nearBalance",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "nearGas",
            type: "uint64",
          },
        ],
        internalType: "struct PromiseCreateArgs",
        name: "nearPromise",
        type: "tuple",
      },
      {
        internalType: "enum ExecutionMode",
        name: "mode",
        type: "ExecutionMode",
      },
    ],
    name: "encodeCrossContractCallArgs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "v",
        type: "uint128",
      },
    ],
    name: "encodeU128",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "v",
        type: "uint32",
      },
    ],
    name: "encodeU32",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "v",
        type: "uint64",
      },
    ],
    name: "encodeU64",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ptr",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
        ],
        internalType: "struct Borsh.Data",
        name: "data",
        type: "tuple",
      },
    ],
    name: "skipPromiseResult",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6116a7610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100b35760003560e01c80635e2eab261161007b5780635e2eab26146101a85780637c8b7bce146101d85780637d7436f5146102085780637f08bf9714610224578063b1038e7114610254578063c733ea9714610284576100b3565b806308c0b37c146100b857806312496a1b146100e85780631f42468a14610118578063231be07714610148578063377c7a8c14610178575b600080fd5b6100d260048036038101906100cd9190610a0a565b6102b4565b6040516100df9190610a72565b60405180910390f35b61010260048036038101906100fd9190610bd3565b6102c9565b60405161010f9190610c9b565b60405180910390f35b610132600480360381019061012d9190610f7d565b6102fd565b60405161013f9190610c9b565b60405180910390f35b610162600480360381019061015d9190610fd9565b610368565b60405161016f9190610c9b565b60405180910390f35b610192600480360381019061018d919061105b565b6103d5565b60405161019f91906110c3565b60405180910390f35b6101c260048036038101906101bd9190611164565b6103e2565b6040516101cf919061128f565b60405180910390f35b6101f260048036038101906101ed91906112b1565b61047e565b6040516101ff9190610c9b565b60405180910390f35b610222600480360381019061021d9190611164565b6104c1565b005b61023e600480360381019061023991906112fa565b61051d565b60405161024b9190611362565b60405180910390f35b61026e6004803603810190610269919061137d565b610532565b60405161027b9190610c9b565b60405180910390f35b61029e600480360381019061029991906113d9565b61059d565b6040516102ab9190611441565b60405180910390f35b60006102bf826105b2565b60e01b9050919050565b60606102d582516102b4565b826040516020016102e79291906114b9565b6040516020818303038152906040529050919050565b606061031a82600181111561031557610314611191565b5b6103d5565b6103366001600281111561033157610330611191565b5b6103d5565b61033f8561047e565b60405160200161035193929190611502565b604051602081830303815290604052905092915050565b606061037782600001516102c9565b61038483602001516102c9565b61039184604001516102c9565b61039e856060015161059d565b6103ab866080015161051d565b6040516020016103bf95949392919061157d565b6040516020818303038152906040529050919050565b60008160f81b9050919050565b6103ea61098e565b6103f3826105f6565b60ff16600281111561040857610407611191565b5b8160000190600281111561041f5761041e611191565b5b9081600281111561043357610432611191565b5b815250506001600281111561044b5761044a611191565b5b8160000151600281111561046257610461611191565b5b036104795761047082610616565b81602001819052505b919050565b606061048d8260000151610368565b61049a8360200151610368565b6040516020016104ab9291906115d0565b6040516020818303038152906040529050919050565b60006104cc826105f6565b60ff1660028111156104e1576104e0611191565b5b9050600160028111156104f7576104f6611191565b5b81600281111561050a57610509611191565b5b036105195761051882610664565b5b5050565b60006105288261069e565b60c01b9050919050565b606061054f82600181111561054a57610549611191565b5b6103d5565b61056b6000600281111561056657610565611191565b5b6103d5565b61057485610368565b60405160200161058693929190611502565b604051602081830303815290604052905092915050565b60006105a88261072d565b60801b9050919050565b6000600863ff00ff00831663ffffffff16901c600862ff00ff841663ffffffff16901b17915060108263ffffffff16901c60108363ffffffff16901b179050919050565b600061060c60018361085d90919063ffffffff16565b60f81c9050919050565b606060006106238361089a565b63ffffffff16905061063e81846108c290919063ffffffff16565b61064c836000015182610913565b91508083600001818151019150818152505050919050565b600061066f8261089a565b63ffffffff16905061068a81836108c290919063ffffffff16565b808260000181815101915081815250505050565b6000600867ff00ff00ff00ff00831667ffffffffffffffff16901c600866ff00ff00ff00ff841667ffffffffffffffff16901b179150601067ffff0000ffff0000831667ffffffffffffffff16901c601065ffff0000ffff841667ffffffffffffffff16901b17915060208267ffffffffffffffff16901c60208367ffffffffffffffff16901b179050919050565b600060086fff00ff00ff00ff00ff00ff00ff00ff0083166fffffffffffffffffffffffffffffffff16901c60086eff00ff00ff00ff00ff00ff00ff00ff84166fffffffffffffffffffffffffffffffff16901b17915060106fffff0000ffff0000ffff0000ffff000083166fffffffffffffffffffffffffffffffff16901c60106dffff0000ffff0000ffff0000ffff84166fffffffffffffffffffffffffffffffff16901b17915060206fffffffff00000000ffffffff0000000083166fffffffffffffffffffffffffffffffff16901c60206bffffffff00000000ffffffff84166fffffffffffffffffffffffffffffffff16901b1791506040826fffffffffffffffffffffffffffffffff16901c6040836fffffffffffffffffffffffffffffffff16901b179050919050565b600061087282846108c290919063ffffffff16565b61087f8360000151610983565b60001b90508183600001818151019150818152505092915050565b60006108bb6108b360048461085d90919063ffffffff16565b60e01c6105b2565b9050919050565b816020015181836000015101111561090f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090690611651565b60405180910390fd5b5050565b60606000821461097d5760405190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810180604052828252602082015b60011561097a57845181526020810190508181031561097a57602085019450610956565b50505b92915050565b600081519050919050565b6040518060400160405280600060028111156109ad576109ac611191565b5b8152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b6109e7816109ce565b81146109f257600080fd5b50565b600081359050610a04816109de565b92915050565b600060208284031215610a2057610a1f6109c4565b5b6000610a2e848285016109f5565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a6c81610a37565b82525050565b6000602082019050610a876000830184610a63565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ae082610a97565b810181811067ffffffffffffffff82111715610aff57610afe610aa8565b5b80604052505050565b6000610b126109ba565b9050610b1e8282610ad7565b919050565b600067ffffffffffffffff821115610b3e57610b3d610aa8565b5b610b4782610a97565b9050602081019050919050565b82818337600083830152505050565b6000610b76610b7184610b23565b610b08565b905082815260208101848484011115610b9257610b91610a92565b5b610b9d848285610b54565b509392505050565b600082601f830112610bba57610bb9610a8d565b5b8135610bca848260208601610b63565b91505092915050565b600060208284031215610be957610be86109c4565b5b600082013567ffffffffffffffff811115610c0757610c066109c9565b5b610c1384828501610ba5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c56578082015181840152602081019050610c3b565b60008484015250505050565b6000610c6d82610c1c565b610c778185610c27565b9350610c87818560208601610c38565b610c9081610a97565b840191505092915050565b60006020820190508181036000830152610cb58184610c62565b905092915050565b600080fd5b600080fd5b600067ffffffffffffffff821115610ce257610ce1610aa8565b5b610ceb82610a97565b9050602081019050919050565b6000610d0b610d0684610cc7565b610b08565b905082815260208101848484011115610d2757610d26610a92565b5b610d32848285610b54565b509392505050565b600082601f830112610d4f57610d4e610a8d565b5b8135610d5f848260208601610cf8565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b610d8d81610d68565b8114610d9857600080fd5b50565b600081359050610daa81610d84565b92915050565b600067ffffffffffffffff82169050919050565b610dcd81610db0565b8114610dd857600080fd5b50565b600081359050610dea81610dc4565b92915050565b600060a08284031215610e0657610e05610cbd565b5b610e1060a0610b08565b9050600082013567ffffffffffffffff811115610e3057610e2f610cc2565b5b610e3c84828501610d3a565b600083015250602082013567ffffffffffffffff811115610e6057610e5f610cc2565b5b610e6c84828501610d3a565b602083015250604082013567ffffffffffffffff811115610e9057610e8f610cc2565b5b610e9c84828501610ba5565b6040830152506060610eb084828501610d9b565b6060830152506080610ec484828501610ddb565b60808301525092915050565b600060408284031215610ee657610ee5610cbd565b5b610ef06040610b08565b9050600082013567ffffffffffffffff811115610f1057610f0f610cc2565b5b610f1c84828501610df0565b600083015250602082013567ffffffffffffffff811115610f4057610f3f610cc2565b5b610f4c84828501610df0565b60208301525092915050565b60028110610f6557600080fd5b50565b600081359050610f7781610f58565b92915050565b60008060408385031215610f9457610f936109c4565b5b600083013567ffffffffffffffff811115610fb257610fb16109c9565b5b610fbe85828601610ed0565b9250506020610fcf85828601610f68565b9150509250929050565b600060208284031215610fef57610fee6109c4565b5b600082013567ffffffffffffffff81111561100d5761100c6109c9565b5b61101984828501610df0565b91505092915050565b600060ff82169050919050565b61103881611022565b811461104357600080fd5b50565b6000813590506110558161102f565b92915050565b600060208284031215611071576110706109c4565b5b600061107f84828501611046565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6110bd81611088565b82525050565b60006020820190506110d860008301846110b4565b92915050565b6000819050919050565b6110f1816110de565b81146110fc57600080fd5b50565b60008135905061110e816110e8565b92915050565b60006040828403121561112a57611129610cbd565b5b6111346040610b08565b90506000611144848285016110ff565b6000830152506020611158848285016110ff565b60208301525092915050565b60006040828403121561117a576111796109c4565b5b600061118884828501611114565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106111d1576111d0611191565b5b50565b60008190506111e2826111c0565b919050565b60006111f2826111d4565b9050919050565b611202816111e7565b82525050565b600082825260208201905092915050565b600061122482610c1c565b61122e8185611208565b935061123e818560208601610c38565b61124781610a97565b840191505092915050565b600060408301600083015161126a60008601826111f9565b50602083015184820360208601526112828282611219565b9150508091505092915050565b600060208201905081810360008301526112a98184611252565b905092915050565b6000602082840312156112c7576112c66109c4565b5b600082013567ffffffffffffffff8111156112e5576112e46109c9565b5b6112f184828501610ed0565b91505092915050565b6000602082840312156113105761130f6109c4565b5b600061131e84828501610ddb565b91505092915050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b61135c81611327565b82525050565b60006020820190506113776000830184611353565b92915050565b60008060408385031215611394576113936109c4565b5b600083013567ffffffffffffffff8111156113b2576113b16109c9565b5b6113be85828601610df0565b92505060206113cf85828601610f68565b9150509250929050565b6000602082840312156113ef576113ee6109c4565b5b60006113fd84828501610d9b565b91505092915050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b61143b81611406565b82525050565b60006020820190506114566000830184611432565b92915050565b6000819050919050565b61147761147282610a37565b61145c565b82525050565b600081905092915050565b600061149382610c1c565b61149d818561147d565b93506114ad818560208601610c38565b80840191505092915050565b60006114c58285611466565b6004820191506114d58284611488565b91508190509392505050565b6000819050919050565b6114fc6114f782611088565b6114e1565b82525050565b600061150e82866114eb565b60018201915061151e82856114eb565b60018201915061152e8284611488565b9150819050949350505050565b6000819050919050565b61155661155182611406565b61153b565b82525050565b6000819050919050565b61157761157282611327565b61155c565b82525050565b60006115898288611488565b91506115958287611488565b91506115a18286611488565b91506115ad8285611545565b6010820191506115bd8284611566565b6008820191508190509695505050505050565b60006115dc8285611488565b91506115e88284611488565b91508190509392505050565b600082825260208201905092915050565b7f5061727365206572726f723a20756e657870656374656420454f490000000000600082015250565b600061163b601b836115f4565b915061164682611605565b602082019050919050565b6000602082019050818103600083015261166a8161162e565b905091905056fea264697066735822122047019d4ce0d22e47b1bb8f767e4f3363c66d7594218b65d18fb2cbf72bf826d664736f6c63430008110033";

type CodecConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CodecConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Codec__factory extends ContractFactory {
  constructor(...args: CodecConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Codec> {
    return super.deploy(overrides || {}) as Promise<Codec>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Codec {
    return super.attach(address) as Codec;
  }
  override connect(signer: Signer): Codec__factory {
    return super.connect(signer) as Codec__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CodecInterface {
    return new utils.Interface(_abi) as CodecInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Codec {
    return new Contract(address, _abi, signerOrProvider) as Codec;
  }
}
