# temporary workflow to build arm64 version of already released images
name: "container"

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: "tag to publish"
        required: true

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  container:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: linux-amd64-m-xlarge
          - arch: arm64
            runner: linux-arm64-m-xlarge

    runs-on: ${{ matrix.runner }}

    outputs:
      version: ${{ steps.version.outputs.version }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_PASSWORD

      - name: Set version
        id: version
        run: |
          version=$(jq -r .[] .github/release-please/manifest.json)
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push chain-rpc container
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: |
            fluencelabs/chain-rpc:${{ steps.version.outputs.version }}-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    name: "Merge arch images"
    needs: container

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_PASSWORD

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@0.4.0
        with:
          inputs: fluencelabs/chain-rpc:${{ needs.container.outputs.version }}
          images: fluencelabs/chain-rpc:${{ needs.container.outputs.version }}-amd64,fluencelabs/chain-rpc:${{ needs.container.outputs.version }}-arm64
          push: true
