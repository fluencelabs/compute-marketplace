name: "release-please"

on:
  push:
    branches:
      - "main"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  release-please:
    runs-on: ubuntu-latest

    outputs:
      releases-created: ${{ steps.release.outputs.releases_created }}

      release-created: ${{ steps.release.outputs['release_created'] }}
      tag-name: ${{ steps.release.outputs['tag_name'] }}
      version: ${{ steps.release.outputs['version'] }}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}
          command: manifest
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json

      - name: Show output from release-please
        if: steps.release.outputs.releases_created
        env:
          RELEASE_PLEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: echo "${RELEASE_PLEASE_OUTPUT}" | jq

  deal:
    if: needs.release-please.outputs.release-created
    runs-on: ubuntu-latest
    needs:
      - release-please

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/npmjs/fluencebot token | NODE_AUTH_TOKEN ;
            kv/hub.docker.com/fluencebot username | DOCKER_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_PASSWORD

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: package-lock.json
          cache: "npm"

      - run: npm install --f
        working-directory: .

      - run: npm run build
        env:
          PRIVATE_KEY: ${{ secrets.DEAL_TESNET_PRIVATE_KEY }}
        working-directory: .

      - name: Publish to npm registry
        run: npm publish --access public
        working-directory: .

  container:
    name: "Publish ${{ matrix.arch }} container"
    if: needs.release-please.outputs.release-created
    needs: release-please

    strategy:
      matrix:
        include:
          - arch: amd64
            runner: linux-amd64-m-xlarge
          - arch: arm64
            runner: linux-arm64-m-xlarge

    runs-on: ${{ matrix.runner }}

    outputs:
      version: ${{ steps.version.outputs.version }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_PASSWORD

      - name: Set version
        id: version
        run: |
          version=$(jq -r .[] .github/release-please/manifest.json)
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push chain-rpc arch container
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          push: true
          provenance: false
          tags: |
            fluencelabs/chain-rpc:${{ steps.version.outputs.version }}-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    if: needs.release-please.outputs.release-created
    name: "Merge arch images"
    needs:
      - release-please
      - container

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_PASSWORD

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Merge arch containers
        uses: Noelware/docker-manifest-action@0.4.0
        with:
          inputs: fluencelabs/chain-rpc:${{ needs.container.outputs.version }},fluencelabs/chain-rpc:latest
          images: fluencelabs/chain-rpc:${{ needs.container.outputs.version }}-amd64,fluencelabs/chain-rpc:${{ needs.container.outputs.version }}-arm64
          push: true
          amend: true

  slack:
    if: always()
    name: "Notify"
    runs-on: ubuntu-latest

    needs:
      - release-please
      - deal
      - container
      - manifest

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: lwhiteley/dependent-jobs-result-check@v1
        id: status
        with:
          statuses: failure
          dependencies: ${{ toJSON(needs) }}

      - name: Log output
        run: |
          echo "statuses:" "${{ steps.status.outputs.statuses }}"
          echo "jobs:" "${{ steps.status.outputs.jobs }}"
          echo "found any?:" "${{ steps.status.outputs.found }}"

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/slack/release-please webhook | SLACK_WEBHOOK_URL

      - uses: ravsamhq/notify-slack-action@v2
        if: steps.status.outputs.found == 'true'
        with:
          status: "failure"
          notification_title: "*{workflow}* has {status_message}"
          message_format: "${{ steps.status.outputs.jobs }} {status_message} in <{repo_url}|{repo}>"
          footer: "<{run_url}>"
