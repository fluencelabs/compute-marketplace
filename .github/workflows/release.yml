name: "release-please"

on:
  push:
    branches:
      - "main"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  release-please:
    runs-on: ubuntu-latest

    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      pr: ${{ steps.release.outputs.pr }}
      tag-name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}
          command: manifest
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json

      - name: Show output from release-please
        if: steps.release.outputs.releases_created
        env:
          RELEASE_PLEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: echo "${RELEASE_PLEASE_OUTPUT}" | jq

  bump-version:
    if: needs.release-please.outputs.pr != null
    runs-on: ubuntu-latest
    needs:
      - release-please

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}
          token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}

      - name: Get version
        id: version
        run: |
          version="$(jq -r '.[]' .github/release-please/manifest.json)"
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Set deal-ts-clients version
        run: npm version ${{ steps.version.outputs.version }}
        working-directory: ts-client/

      - name: Set subgraph version
        run: npm version ${{ steps.version.outputs.version }}
        working-directory: subgraph/

      - name: Commit version bump
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Bump version to ${{ steps.version.outputs.version }}"
          branch: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}
          commit_user_name: fluencebot
          commit_user_email: devops@fluence.one
          commit_author: fluencebot <devops@fluence.one>

  deal:
    if: needs.release-please.outputs.release-created
    needs: release-please
    uses: ./.github/workflows/artifacts.yml
    with:
      ref: ${{ needs.release-please.outputs.tag-name }}
      release: true
    secrets:
      token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}

  slack:
    if: always()
    name: "Notify"
    runs-on: ubuntu-latest

    needs:
      - release-please
      - deal

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: lwhiteley/dependent-jobs-result-check@v1
        id: status
        with:
          statuses: failure
          dependencies: ${{ toJSON(needs) }}

      - name: Log output
        run: |
          echo "statuses:" "${{ steps.status.outputs.statuses }}"
          echo "jobs:" "${{ steps.status.outputs.jobs }}"
          echo "found any?:" "${{ steps.status.outputs.found }}"

      - name: Import secrets
        uses: hashicorp/vault-action@v2.8.0
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/slack/release-please webhook | SLACK_WEBHOOK_URL

      - uses: ravsamhq/notify-slack-action@v2
        if: steps.status.outputs.found == 'true'
        with:
          status: "failure"
          notification_title: "*{workflow}* has {status_message}"
          message_format: "${{ steps.status.outputs.jobs }} {status_message} in <{repo_url}|{repo}>"
          footer: "<{run_url}>"
