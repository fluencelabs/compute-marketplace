name: Publish snapshots

on:
  workflow_call:
    inputs:
      ref:
        description: "GitHub ref to checkout to"
        type: string
        default: "master"
    outputs:
      deal-ts-clients-version:
        description: "@fluencelabs/deal-ts-clients version"
        value: ${{ jobs.npm.outputs.deal-ts-clients-version }}
      subgraph-version:
        description: "@fluencelabs/subgraph version"
        value: ${{ jobs.npm.outputs.subgraph-version }}
      subgraph-deploy-script-image:
        description: "subgraph-deploy-script image"
        value: ${{ jobs.subgraph.outputs.subgraph-deploy-script-image }}
      chain-deploy-script-image:
        description: "chain-deploy-script container image"
        value: ${{ jobs.chain-rpc.outputs.chain-deploy-script-image }}
      chain-rpc-image:
        description: "chain-rpc container image"
        value: ${{ jobs.chain-rpc.outputs.chain-rpc-image }}

env:
  FORCE_COLOR: true
  FOUNDRY_PROFILE: "ci"

jobs:
  contracts:
    name: "Build contracts (${{ matrix.arch }})"

    strategy:
      matrix:
        include:
          - arch: amd64
            runner: linux-amd64-m-2xlarge
          - arch: arm64
            runner: linux-arm64-m-2xlarge

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/deal
          ref: ${{ inputs.ref }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Cache contract artifacts
        uses: actions/cache@v3
        with:
          path: |
            cache
            out
          key: ${{ runner.os }}-${{ matrix.arch }}-contracts-${{ hashFiles('foundry.toml', 'src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-contracts-

      - name: Build contracts
        run: make build-contracts

      - name: Upload contracts
        uses: actions/upload-artifact@v4
        with:
          name: contracts-${{ matrix.arch }}
          path: |
            cache/**
            out/**

  chain-rpc:
    name: "Publish chain-rpc (${{ matrix.arch }})"

    needs:
      - contracts

    strategy:
      matrix:
        include:
          - arch: amd64
            runner: linux-amd64-m-xlarge
          - arch: arm64
            runner: linux-arm64-m-xlarge

    runs-on: ${{ matrix.runner }}

    outputs:
      chain-rpc-image: "docker.fluence.dev/chain-rpc:${{ steps.version.outputs.id }}"
      chain-deploy-script-image: "docker.fluence.dev/chain-deploy-script:${{ steps.version.outputs.id }}"

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/deal
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_HUB_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_HUB_PASSWORD ;
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Login to private docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Download contract artifacts
        uses: actions/download-artifact@v4
        with:
          name: contracts-${{ matrix.arch }}

      - name: Build contracts
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          target: contracts
          platforms: linux/${{ matrix.arch }}
          tags: contracts
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push chain-rpc image
        id: chain-rpc
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          provenance: false
          file: docker/Dockerfile
          target: chain-rpc
          platforms: linux/${{ matrix.arch }}
          tags: |
            docker.fluence.dev/chain-rpc:${{ steps.version.outputs.id }}-${{ matrix.arch }}

      - name: Build and push chain-deploy-script image
        id: chain-deploy-script
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          provenance: false
          file: docker/Dockerfile
          target: chain-deploy-script
          platforms: linux/${{ matrix.arch }}
          tags: |
            docker.fluence.dev/chain-deploy-script:${{ steps.version.outputs.id }}-${{ matrix.arch }}

      - name: Upload contracts artifact
        uses: actions/upload-artifact@v3
        with:
          name: contracts-image-${{ matrix.arch }}
          path: ${{ runner.temp }}/contracts.tar

  deploy:
    name: "Generate local.json"
    needs:
      - chain-rpc

    runs-on: linux-amd64-m-xlarge

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/deal
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Setup docker-compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run deployment script
        env:
          CHAIN_RPC_IMAGE: "${{ needs.chain-rpc.outputs.chain-rpc-image }}-amd64"
          CHAIN_DEPLOY_SCRIPT_IMAGE: "${{ needs.chain-rpc.outputs.chain-deploy-script-image }}-amd64"
        working-directory: docker
        run: docker-compose up --no-build chain-deploy-script

      - name: Upload deployments/local.json
        uses: actions/upload-artifact@v4
        with:
          name: local.json
          path: deployments/local.json

  npm:
    name: "Publish npm snapshots"
    runs-on: linux-amd64-m-2xlarge
    timeout-minutes: 60

    needs: deploy

    outputs:
      deal-ts-clients-version: "${{ steps.deal-ts-clients.outputs.version }}"
      subgraph-version: "${{ steps.subgraph.outputs.version }}"

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/deal
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/npm-registry/basicauth/ci token | NODE_AUTH_TOKEN

      - name: Setup node with self-hosted npm registry
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.fluence.dev"
          cache: "npm"
          cache-dependency-path: |
            ts-client/package-lock.json
            subgraph/package-lock.json

      - name: Download contract artifacts
        uses: actions/download-artifact@v4
        with:
          name: contracts-${{ matrix.arch }}

      - name: Download deployments/local.json
        uses: actions/download-artifact@v4
        with:
          name: local.json
          path: deployments/

      - name: Install npm dependencies
        run: make install-npms

      - name: Build npm packages
        run: make build-npms

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Publish deal-ts-clients snapshot
        id: deal-ts-clients
        uses: fluencelabs/github-actions/npm-publish-snapshot@main
        with:
          id: ${{ steps.version.outputs.id }}
          working-directory: ts-client/

      - name: Publish subgraph snapshot
        id: subgraph
        uses: fluencelabs/github-actions/npm-publish-snapshot@main
        with:
          id: ${{ steps.version.outputs.id }}
          working-directory: subgraph/

  subgraph:
    name: "Publish subgraph-deploy-script (${{ matrix.arch }})"
    needs: deploy

    strategy:
      matrix:
        include:
          - arch: amd64
            runner: linux-amd64-m-xlarge
          - arch: arm64
            runner: linux-arm64-m-xlarge

    runs-on: ${{ matrix.runner }}

    outputs:
      subgraph-deploy-script-image: "docker.fluence.dev/subgraph-deploy-script:${{ steps.version.outputs.id }}"

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/deal
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_HUB_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_HUB_PASSWORD ;
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Login to private docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Download contract artifacts
        uses: actions/download-artifact@v4
        with:
          name: contracts-${{ matrix.arch }}

      - name: Download deployments/local.json
        uses: actions/download-artifact@v4
        with:
          name: local.json
          path: deployments/

      - name: Build contracts
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          target: contracts
          platforms: linux/${{ matrix.arch }}
          tags: contracts
          cache-from: type=gha

      - name: Build and push subgraph-deploy-script image
        id: subgraph-deploy-script
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          provenance: false
          file: docker/Dockerfile
          target: subgraph-deploy-script
          platforms: linux/${{ matrix.arch }}
          tags: |
            docker.fluence.dev/subgraph-deploy-script:${{ steps.version.outputs.id }}-${{ matrix.arch }}

  manifest:
    name: "Merge container arch images"
    needs:
      - chain-rpc
      - subgraph

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Login to private docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Merge chain-rpc images
        uses: Noelware/docker-manifest-action@0.4.0
        with:
          inputs: ${{ needs.chain-rpc.outputs.chain-rpc-image }}
          images: ${{ needs.chain-rpc.outputs.chain-rpc-image }}-amd64,${{ needs.chain-rpc.outputs.chain-rpc-image }}-arm64
          push: true
          amend: true

      - name: Merge chain-deploy-script images
        uses: Noelware/docker-manifest-action@0.4.0
        with:
          inputs: ${{ needs.chain-rpc.outputs.chain-deploy-script-image }}
          images: ${{ needs.chain-rpc.outputs.chain-deploy-script-image }}-amd64,${{ needs.chain-rpc.outputs.chain-deploy-script-image }}-arm64
          push: true
          amend: true

      - name: Merge subgraph-deploy-script images
        uses: Noelware/docker-manifest-action@0.4.0
        with:
          inputs: ${{ needs.subgraph.outputs.subgraph-deploy-script-image }}
          images: ${{ needs.subgraph.outputs.subgraph-deploy-script-image }}-amd64,${{ needs.subgraph.outputs.subgraph-deploy-script-image }}-arm64
          push: true
          amend: true

      - name: Print image names to check summary
        if: always()
        run: |
          cat <<'SNAPSHOT' >> $GITHUB_STEP_SUMMARY
          ## chain-rpc
          ```
          ${{ needs.chain-rpc.outputs.chain-rpc-image }}
          ```

          ## chain-deploy-script
          ```
          ${{ needs.chain-rpc.outputs.chain-deploy-script-image }}
          ```

          ## subraph-seploy-script
          ```
          ${{ needs.subgraph-deploy-script.outputs.chain-deploy-script-image }}
          ```

          ## Access to Fluence docker registry
          ```
          vault read kv/basicauth/dev
          docker login docker.fluence.dev
          ```
          SNAPSHOT
