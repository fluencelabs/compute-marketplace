name: Publish snapshots

on:
  workflow_call:
    inputs:
      ref:
        description: "GitHub ref to checkout to"
        type: string
        default: "master"
    outputs:
      version:
        description: "@fluencelabs/deal-aurora version"
        value: ${{ jobs.snapshot.outputs.version }}
      image:
        description: "chain RPC image"
        value: ${{ jobs.snapshot.outputs.image }}
    secrets:
      PRIVATE_KEY:
        description: "testnet private key"
        required: true

env:
  FORCE_COLOR: true

jobs:
  snapshot:
    name: "Publish snapshots"
    runs-on: builder
    timeout-minutes: 60

    outputs:
      version: "${{ steps.snapshot.outputs.version }}"
      image: "docker.fluence.dev/chain-rpc@${{ steps.docker.outputs.digest }}"

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/deal
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/npm-registry/basicauth/ci token | NODE_AUTH_TOKEN ;
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Setup node with self-hosted npm registry
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://npm.fluence.dev"
          cache: "npm"

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - run: npm install
        working-directory: ./ts-client

      - run: make build

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Publish snapshot
        id: snapshot
        uses: fluencelabs/github-actions/npm-publish-snapshot@main
        with:
          id: ${{ steps.version.outputs.id }}

  container:
    name: "Publish ${{ matrix.arch }} container"

    strategy:
      matrix:
        include:
          - arch: amd64
            runner: linux-amd64-m-xlarge
          - arch: arm64
            runner: linux-arm64-m-xlarge

    runs-on: ${{ matrix.runner }}

    outputs:
      version: ${{ steps.version.outputs.version }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fluencelabs/deal
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/hub.docker.com/fluencebot username | DOCKER_HUB_USERNAME ;
            kv/hub.docker.com/fluencebot password | DOCKER_HUB_PASSWORD ;
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Login to private docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push container image
        id: docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          provenance: false
          platforms: linux/${{ matrix.arch }}
          tags: |
            docker.fluence.dev/chain-rpc:${{ steps.version.outputs.id }}-${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    name: "Merge arch images"
    needs: container

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Import secrets
        uses: hashicorp/vault-action@v2.7.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD

      - name: Login to private docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Merge arch containers
        uses: Noelware/docker-manifest-action@0.4.0
        with:
          inputs: docker.fluence.dev/chain-rpc:${{ needs.container.outputs.version }}
          images: docker.fluence.dev/chain-rpc:${{ needs.container.outputs.version }}-amd64,docker.fluence.dev/chain-rpc:${{ needs.container.outputs.version }}-arm64
          push: true
          amend: true
