/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IStatusModule,
  IStatusModuleInterface,
} from "../../../../contracts/deal/interfaces/IStatusModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum DealStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "StatusChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum DealStatus",
        name: "status_",
        type: "uint8",
      },
    ],
    name: "changeStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startWorkingEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum DealStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IStatusModule__factory {
  static readonly abi = _abi;
  static createInterface(): IStatusModuleInterface {
    return new Interface(_abi) as IStatusModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IStatusModule {
    return new Contract(address, _abi, runner) as unknown as IStatusModule;
  }
}
