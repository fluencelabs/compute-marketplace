/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { TestERC20, TestERC20Interface } from "../../../src/dev/TestERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815234620003e75762000cf8803803806200001e81620003ec565b928339810190606081830312620003e75780516001600160401b039290838111620003e757816200005191840162000412565b9260209182840151828111620003e75786916200007091860162000412565b9301519360ff8516809503620003e757805191808311620002e75760038054936001938486811c96168015620003dc575b87871014620003c6578190601f9687811162000370575b5087908783116001146200030957600092620002fd575b505060001982841b1c191690841b1781555b8551918211620002e75760049586548481811c91168015620002dc575b87821014620002c7578581116200027c575b508590858411600114620002115793839491849260009562000205575b50501b92600019911b1c19161783555b3315620001c5575060025460001992838201809211620001b057506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815285832084815401905585519384523393a360ff196005541617600555516108739081620004858239f35b601190634e487b7160e01b6000525260246000fd5b6064929185519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b0151935038806200012d565b9190601f198416928860005284886000209460005b8a8983831062000264575050501062000249575b50505050811b0183556200013d565b01519060f884600019921b161c19169055388080806200023a565b86860151895590970196948501948893500162000226565b87600052866000208680860160051c820192898710620002bd575b0160051c019085905b828110620002b057505062000110565b60008155018590620002a0565b9250819262000297565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000fe565b634e487b7160e01b600052604160045260246000fd5b015190503880620000cf565b90869350601f1983169185600052896000209260005b8b82821062000359575050841162000340575b505050811b018155620000e1565b015160001983861b60f8161c1916905538808062000332565b8385015186558a979095019493840193016200031f565b90915083600052876000208780850160051c8201928a8610620003bc575b918891869594930160051c01915b828110620003ac575050620000b8565b600081558594508891016200039c565b925081926200038e565b634e487b7160e01b600052602260045260246000fd5b95607f1695620000a1565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002e757604052565b919080601f84011215620003e75782516001600160401b038111620002e75760209062000448601f8201601f19168301620003ec565b92818452828287010111620003e75760005b8181106200047057508260009394955001015290565b85810183015184820184015282016200045a56fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461049557508163095ea7b31461046b57816318160ddd1461044c57816323b872dd14610382578163313ce5671461036057816339509351146102f957816370a08231146102c257816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba61059c565b6100c26105b7565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e55760209061011261010861059c565b60243590336105cd565b5160018152f35b905082346101be57826003193601126101be5761013461059c565b918360243592338152600160205281812060018060a01b038616825260205220549082821061016d57602085610112858503873361073b565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e557805190828454600181811c908083169283156102b8575b60209384841081146102a5578388529081156102895750600114610251575b505050829003601f01601f19168201926001600160401b0384118385101761023e575082918261023a925282610553565b0390f35b634e487b7160e01b815260418552602490fd5b919250868652828620918387935b8385106102755750505050830101858080610209565b80548886018301529301928490820161025f565b60ff1916878501525050151560051b8401019050858080610209565b634e487b7160e01b895260228a52602489fd5b91607f16916101ea565b5050346100e55760203660031901126100e55760209181906001600160a01b036102ea61059c565b16815280845220549051908152f35b8284346101be57816003193601126101be5761031361059c565b338252600160209081528383206001600160a01b038316845290528282205460243581019290831061034d5760208461011285853361073b565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e55760209060ff600554169051908152f35b839150346100e55760603660031901126100e55761039e61059c565b6103a66105b7565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036103e0575b6020866101128787876105cd565b84821061040957509183916103fe602096956101129503338361073b565b9193948193506103d2565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906002549051908152f35b5050346100e557806003193601126100e55760209061011261048b61059c565b602435903361073b565b8490843461054f578260031936011261054f5782600354600181811c90808316928315610545575b60209384841081146102a557838852908115610289575060011461050c57505050829003601f01601f19168201926001600160401b0384118385101761023e575082918261023a925282610553565b91925060038652828620918387935b8385106105315750505050830101858080610209565b80548886018301529301928490820161051b565b91607f16916104bd565b8280fd5b6020808252825181830181905290939260005b82811061058857505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610566565b600435906001600160a01b03821682036105b257565b600080fd5b602435906001600160a01b03821682036105b257565b6001600160a01b039081169182156106e857169182156106975760008281528060205260408120549180831061064357604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b039081169182156107ec571691821561079c5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220e0ec8cccea94abef24a99f9d4203da52d375c851997909415766ce6857e55e1164736f6c63430008130033";

type TestERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20__factory extends ContractFactory {
  constructor(...args: TestERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, decimals_, overrides || {}) as Promise<
      TestERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestERC20__factory {
    return super.connect(runner) as TestERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new Interface(_abi) as TestERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestERC20 {
    return new Contract(address, _abi, runner) as unknown as TestERC20;
  }
}
