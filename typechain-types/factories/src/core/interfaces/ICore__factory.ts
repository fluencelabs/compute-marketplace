/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICore,
  ICoreInterface,
} from "../../../../src/core/interfaces/ICore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum ICapacityConst.CapacityConstantType",
        name: "constantType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "CapacityConstantUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IGlobalConst.ConstantType",
        name: "constantType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "ConstantUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IDeal",
        name: "dealImpl",
        type: "address",
      },
    ],
    name: "DealImplSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "difficulty",
        type: "bytes32",
      },
    ],
    name: "DifficultyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "FLTPriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "activeUnitCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "capacity",
    outputs: [
      {
        internalType: "contract ICapacity",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dealImpl",
    outputs: [
      {
        internalType: "contract IDeal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "difficulty",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fltCollateralPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fltPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "getRewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochDuration_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDepositedEpochs_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minRematchingEpochs_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minProtocolVersion_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxProtocolVersion_",
        type: "uint256",
      },
      {
        internalType: "contract IDeal",
        name: "dealImpl_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isWhitelistEnabled_",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "fltPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdCollateralPerUnit_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdTargetRevenuePerEpoch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDuration_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minRewardPerEpoch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxRewardPerEpoch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingPeriodDuration_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingPeriodCount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slashingRate_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minProofsPerEpoch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxProofsPerEpoch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawEpochsAfterFailed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxFailedRatio_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "difficulty_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "initRewardPool_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "randomXProxy_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICapacity",
        name: "capacity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "contract IDealFactory",
        name: "dealFactory",
        type: "address",
      },
    ],
    name: "initializeModules",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "contract IMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFailedRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxProofsPerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxProtocolVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRewardPerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDealDepositedEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDealRematchingEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minProofsPerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minProtocolVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRewardPerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "precision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomXProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "activeUnitCount_",
        type: "uint256",
      },
    ],
    name: "setActiveUnitCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ICapacityConst.CapacityConstantType",
        name: "constantType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "setCapacityConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IGlobalConst.ConstantType",
        name: "constantType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "setConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDeal",
        name: "dealImpl_",
        type: "address",
      },
    ],
    name: "setDealImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "difficulty_",
        type: "bytes32",
      },
    ],
    name: "setDifficulty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fltPrice_",
        type: "uint256",
      },
    ],
    name: "setFLTPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slashingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdCollateralPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdTargetRevenuePerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriodCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriodDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEpochsAfterFailed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICore__factory {
  static readonly abi = _abi;
  static createInterface(): ICoreInterface {
    return new Interface(_abi) as ICoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ICore {
    return new Contract(address, _abi, runner) as unknown as ICore;
  }
}
