/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RandomXProxy,
  RandomXProxyInterface,
} from "../../../src/utils/RandomXProxy";

const _abi = [
  {
    inputs: [],
    name: "ActorNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "BytesLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "FailToCallActor",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "InvalidCodec",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidResponseLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "k",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "h",
        type: "bytes32",
      },
    ],
    name: "run",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761124c908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63c57fbcd41461002857600080fd5b3461013457604036600319011261013457610044600435610490565b61004f602435610490565b90610059816105f8565b9182600101928360011161012f57600190610073836105f8565b010180931161012f576100c06100c69260405195610090876101b3565b6100ac61009b61060f565b968789526020890197838952610638565b5085526100b986516108c7565b508561068a565b8361068a565b516100fb576100f36100ee6100e96100e16020945151610241565b919015610137565b610cf5565b6104eb565b604051908152f35b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b21021a127a960a11b6044820152606490fd5b610444565b80fd5b1561013e57565b60405162461bcd60e51b8152602060048201526014602482015273119b1d595b98d9481858dd1bdc8819985a5b195960621b6044820152606490fd5b60005b83811061018d5750506000910152565b818101518382015260200161017d565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b038211176101ce57604052565b61019d565b601f909101601f19168101906001600160401b038211908210176101ce57604052565b6001600160401b0381116101ce57601f01601f191660200190565b3d1561023c573d90610222826101f6565b9161023060405193846101d3565b82523d6000602084013e565b606090565b6005607f60991b0190813f156102f15760009182916040516102c060208201926379da5a8284528560408401528560608401526051608084015260c060a08401528281518060e083015261029f81610100946020868601910161017a565b637076856560c0830152601f801991011681010360e08101845201826101d3565b51915af46102cc610211565b90156102df576102db90610383565b9091565b604051638a7db5bf60e01b8152600490fd5b60405163064d954b60e41b8152600490fd5b909160608284031261037e57815160208301519093906001600160401b0390818116810361037e5793604081015191821161037e570181601f8201121561037e57805161034f816101f6565b9261035d60405194856101d3565b8184526020828401011161037e5761037b916020808501910161017a565b90565b600080fd5b6103969060208082518301019101610303565b9291906001600160401b038116806103c657505082516103b4579190565b604051630e74990760e01b8152600490fd5b60518114908115610407575b50156103e457508251156103b4579190565b60405163f1f6bced60e01b81526001600160401b03919091166004820152602490fd5b6071915014386103d2565b9061041c826101f6565b61042960405191826101d3565b828152809261043a601f19916101f6565b0190602036910137565b634e487b7160e01b600052601160045260246000fd5b600019811461012f5760010190565b90815181101561047a570160200190565b634e487b7160e01b600052603260045260246000fd5b9060405161049d816101b3565b602080825280368184013760005b8181106104b9575090925050565b80856104d0921a6104ca8286610469565b5361045a565b6104ab565b908160011b918083046002149015171561012f57565b805160209081810361054757509060009182915b81831061050c5750505090565b90919260ff60f81b61051e8584610469565b5116908460031b918583046008148615171561012f57610540921c179361045a565b91906104ff565b604492506040519163c1cd44b360e01b835260048301526024820152fd5b906020820180921161012f57565b906001820180921161012f57565b906002820180921161012f57565b906004820180921161012f57565b906008820180921161012f57565b9190820180921161012f57565b601781116105c65750600190565b60ff81116105d45750600290565b61ffff81116105e35750600390565b63ffffffff10156105f357600990565b600590565b51610602816105b8565b90810180911161012f5790565b6040519061061c826101b3565b6000602083606081520152565b601f1981019190821161012f57565b9061064161060f565b50601f811680610670575b508060208301526040519081835260008252810160200190811061037e5760405290565b6020036020811161012f57810180911161012f573861064c565b81516106ce9291906001600160401b03811690601782116106d1576106b99150604060ff845192161790610acb565b505b51906106c561060f565b50805191610810565b50565b5060ff81116106f6576106f0906106e88351610a66565b508251610c88565b506106bb565b61ffff8111610715576106f09061070d8351610a01565b508251610c1a565b63ffffffff8111610736576106f09061072e835161099c565b508251610baa565b6106f0906107448351610937565b508251610b36565b9061075561060f565b50805161076061060f565b5061076e8251821115610809565b8251519161077c82846105ab565b60209182918287015181116107f2575b8651838151978201019682116107ea575b505001915b818110156107c45760001991036101000a019081199051169082511617905290565b91926107df6107d96107e59286518152610565565b94610565565b92610629565b6107a2565b52388061079d565b6108046107fe826104d5565b886108b0565b61078c565b1561037e57565b9161081961060f565b506108278251821115610809565b8251519161083582846105ab565b602091829182870151811161089f575b865183815197820101968211610897575b505001915b8181101561087d5760001991036101000a019081199051169082511617905290565b91926107df6107d96108929286518152610565565b61085b565b523880610856565b6108ab6107fe826104d5565b610845565b906106ce916108c181519282610638565b5061074c565b6108cf61060f565b50805151600181019081811161012f576020830151811015610908575b60826020845192830101538051821161090457505090565b5290565b8160011b8281046002148315171561012f576109319061092a85519186610638565b508461074c565b506108ec565b61093f61060f565b50805151600181019081811161012f576020830151811015610974575b605b6020845192830101538051821161090457505090565b8160011b8281046002148315171561012f576109969061092a85519186610638565b5061095c565b6109a461060f565b50805151600181019081811161012f5760208301518110156109d9575b605a6020845192830101538051821161090457505090565b8160011b8281046002148315171561012f576109fb9061092a85519186610638565b506109c1565b610a0961060f565b50805151600181019081811161012f576020830151811015610a3e575b60596020845192830101538051821161090457505090565b8160011b8281046002148315171561012f57610a609061092a85519186610638565b50610a26565b610a6e61060f565b50805151600181019081811161012f576020830151811015610aa3575b60586020845192830101538051821161090457505090565b8160011b8281046002148315171561012f57610ac59061092a85519186610638565b50610a8b565b90610ad461060f565b50815151600181019182821161012f576020840151821015610b07575b6020845192830101538051821161090457505090565b8260011b8381046002148415171561012f57610b3090610b2986519187610638565b508561074c565b50610af1565b90610b3f61060f565b5081515180600801918260081161012f5760208401518311610b82575b835191820160080180516001600160401b03191690911790528051821161090457505090565b8260011b8381046002148415171561012f57610ba490610b2986519187610638565b50610b5c565b90610bb361060f565b5081515180600401918260041161012f5760208401518311610bf2575b60048451928301019063ffffffff198251161790528051821161090457505090565b8260011b8381046002148415171561012f57610c1490610b2986519187610638565b50610bd0565b90610c2361060f565b5081515180600201918260021161012f5760208401518311610c60575b60028451928301019061ffff198251161790528051821161090457505090565b8260011b8381046002148415171561012f57610c8290610b2986519187610638565b50610c40565b90610c9161060f565b5081515180600101918260011161012f5760208401518311610ccd575b60018451928301019060ff198251161790528051821161090457505090565b8260011b8381046002148415171561012f57610cef90610b2986519187610638565b50610cae565b600460ff610d0283610f94565b93919290921603610d6f576001600160401b031660001901610d2b57610d2791610dd1565b5090565b606460405162461bcd60e51b815260206004820152602060248201527f54686572652073686f756c64206265206f6e6c79206f6e6520656c656d656e746044820152fd5b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c6964206d616a20286578706563746564204d616a417272617929006044820152606490fd5b15610dbb57565b634e487b7160e01b600052600160045260246000fd5b91610dde60009284611066565b908160ff60018060401b0380931694166006811480918115610ef4575b5015610e9857610e71575b5050610e1282826105ab565b610e1b83610412565b948083915b838310610e37575050505061037b929394506105ab565b610e65610e6b91610e59610e4b868d610469565b516001600160f81b03191690565b841a6104ca828c610469565b9261045a565b91610e20565b60ff9350610e91919250610e8760029188611066565b9416941614610db4565b3880610e06565b60405162461bcd60e51b815260206004820152602e60248201527f696e76616c6964206d616a20286578706563746564204d616a546167206f722060448201526d4d616a42797465537472696e672960901b6064820152608490fd5b600291501438610dfb565b15610f0657565b60405162461bcd60e51b815260206004820152602560248201527f63616e6e6f742068616e646c6520686561646572732077697468206578747261604482015264203e20323760d81b6064820152608490fd5b15610f6057565b60405162461bcd60e51b815260206004820152600c60248201526b34b73b30b634b21031b137b960a11b6044820152606490fd5b90610f9e82611135565b90600192601f60078460051c169316610fb9601c8210610eff565b6018811061105f5760188114611038579081601986931461102157601a81146110015791610ff591610ff0601b610ffb9514610db4565b6111ef565b9361059d565b91929190565b5061101463ffffffff9261101a926111c8565b9461058f565b9293169190565b5061103261ffff9261101a926111a1565b94610581565b5061104591929350611154565b9060ff600292169261105a6018851015610f59565b929190565b9293919050565b909161107b6110758484611176565b93610573565b91601f60078560051c169416611093601c8210610eff565b601881106110ec57601881146110cc5790816019859695931461102157601a81146110015791610ff591610ff0601b610ffb9514610db4565b506110dc6110758460ff93611176565b92169261105a6018851015610f59565b92919050565b156110f957565b60405162461bcd60e51b8152602060048201526014602482015273736c6963696e67206f7574206f662072616e676560601b6044820152606490fd5b6111436001825110156110f2565b80511561047a576020015160f81c90565b6111626002825110156110f2565b80516001101561047a576021015160f81c90565b90815191600182019283831161012f5761119a936111959110156110f2565b610469565b5160f81c90565b90815191600282019283831161012f576020936111bf9110156110f2565b01015160f01c90565b90815191600482019283831161012f576020936111e69110156110f2565b01015160e01c90565b90815191600882019283831161012f5760209361120d9110156110f2565b01015160c01c9056fea26469706673582212209f0c4700f62051f3f048f41fbf07aa220ddd94f00c1e8e6de6ce449f414b8a5b64736f6c63430008130033";

type RandomXProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomXProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomXProxy__factory extends ContractFactory {
  constructor(...args: RandomXProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RandomXProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RandomXProxy__factory {
    return super.connect(runner) as RandomXProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomXProxyInterface {
    return new Interface(_abi) as RandomXProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RandomXProxy {
    return new Contract(address, _abi, runner) as unknown as RandomXProxy;
  }
}
