/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Whitelist,
  WhitelistInterface,
} from "../../../src/utils/Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "WhitelistAccessGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "WhitelistAccessRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576103d2908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c80630ae5e73914610285578063673448dd14610200578063715018a6146101a557806385e685311461012a5780638da5cb5b146100f05763f2fde38b1461006257600080fd5b346100ec5760203660031901126100ec576001600160a01b038235818116939192908490036100e857610093610303565b83156100d257505060008051602061035d83398151915280546001600160a01b0319811684179091551660008051602061033d8339815191528380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b83823461012657816003193601126101265760008051602061035d8339815191525490516001600160a01b039091168152602090f35b5080fd5b5090346100ec5760203660031901126100ec57356001600160a01b03811691908290036100ec577fbf16401515c3259ef6fd204d106ff51a2a7185ecd4e3ed51d42612a218fc8c779160209161017e610303565b81855260008051602061037d8339815191528352808520805460ff1916905551908152a180f35b83346101fd57806003193601126101fd576101be610303565b60008051602061035d83398151915280546001600160a01b0319811690915581906001600160a01b031660008051602061033d8339815191528280a380f35b80fd5b5090346100ec5760203660031901126100ec57356001600160a01b03811691908290036100ec5760209260ff7f1f364d5cd815a7922b0808e606a82391642c337151b3addb3f98eaf82cfb172e541615928315610262575b5050519015158152f35b815260008051602061037d83398151915284528190205460ff1691503880610258565b5090346100ec5760203660031901126100ec57356001600160a01b03811691908290036100ec577fab9a16269e54e8ae681de331f196f57a4b158e28d53818a27ff5e5698e291749916020916102d9610303565b81855260008051602061037d8339815191528352808520805460ff1916600117905551908152a180f35b60008051602061035d833981519152546001600160a01b0316330361032457565b60405163118cdaa760e01b8152336004820152602490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0b13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc1f364d5cd815a7922b0808e606a82391642c337151b3addb3f98eaf82cfb172fa26469706673582212201eef68952c0a50c6c5fdac3f6bb354b9649b31ecb7bd3ace503d4043560d334464736f6c63430008130033";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Whitelist & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Whitelist__factory {
    return super.connect(runner) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new Interface(_abi) as WhitelistInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Whitelist {
    return new Contract(address, _abi, runner) as unknown as Whitelist;
  }
}
