/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RandomXProxyMock,
  RandomXProxyMockInterface,
} from "../../../src/mocks/RandomXProxyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "difficulty_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "difficulty",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "run",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461005e57601f61015c38819003918201601f19168301916001600160401b038311848410176100635780849260209460405283398101031261005e575160805260405160e2908161007a8239608051818181604a015260850152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080806040526004361015601257600080fd5b600090813560e01c90816319cae462146070575063c57fbcd414603457600080fd5b34606d576040366003190112606d5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b80fd5b90503460a8578160031936011260a8576020907f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fdfea2646970667358221220616f6d7acbc213b0ace2af59b3d2ea0270dfbdb1d86d132fa0fd697d6013be4764736f6c63430008130033";

type RandomXProxyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomXProxyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomXProxyMock__factory extends ContractFactory {
  constructor(...args: RandomXProxyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    difficulty_: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(difficulty_, overrides || {});
  }
  override deploy(
    difficulty_: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(difficulty_, overrides || {}) as Promise<
      RandomXProxyMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RandomXProxyMock__factory {
    return super.connect(runner) as RandomXProxyMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomXProxyMockInterface {
    return new Interface(_abi) as RandomXProxyMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RandomXProxyMock {
    return new Contract(address, _abi, runner) as unknown as RandomXProxyMock;
  }
}
