/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Core, CoreInterface } from "../../../contracts/deal/Core";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "getConfig",
    outputs: [
      {
        internalType: "contract IConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getController",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayment",
    outputs: [
      {
        internalType: "contract IPayment",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatusController",
    outputs: [
      {
        internalType: "contract IStatusController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWorkers",
    outputs: [
      {
        internalType: "contract IWorkers",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IConfig",
        name: "config_",
        type: "address",
      },
      {
        internalType: "contract IController",
        name: "controller_",
        type: "address",
      },
      {
        internalType: "contract IPayment",
        name: "payment_",
        type: "address",
      },
      {
        internalType: "contract IStatusController",
        name: "statusController_",
        type: "address",
      },
      {
        internalType: "contract IWorkers",
        name: "workers_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "moduleByAddress",
    outputs: [
      {
        internalType: "enum Module",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Module",
        name: "",
        type: "uint8",
      },
    ],
    name: "modules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5060805161217361007b600039600081816108810152818161090f01528181610a0901528181610a970152610b4701526121736000f3fe60806040526004361061009c5760003560e01c80636ae76a42116100645780636ae76a4214610165578063bb328a7d146101a2578063c1499f71146101cd578063c2aeb7bd146101f8578063c3f909d414610235578063ee6faa2e146102605761009c565b80631459457a146100a15780633018205f146100ca5780633659cfe6146100f55780634f1ef2861461011e57806352d1902d1461013a575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c391906114fb565b61028b565b005b3480156100d657600080fd5b506100df61081f565b6040516100ec91906115d5565b60405180910390f35b34801561010157600080fd5b5061011c6004803603810190610117919061161c565b61087f565b005b6101386004803603810190610133919061178f565b610a07565b005b34801561014657600080fd5b5061014f610b43565b60405161015c9190611804565b60405180910390f35b34801561017157600080fd5b5061018c6004803603810190610187919061161c565b610bfc565b6040516101999190611896565b60405180910390f35b3480156101ae57600080fd5b506101b7610c1c565b6040516101c491906118d2565b60405180910390f35b3480156101d957600080fd5b506101e2610c7c565b6040516101ef919061190e565b60405180910390f35b34801561020457600080fd5b5061021f600480360381019061021a919061194e565b610cdb565b60405161022c919061198a565b60405180910390f35b34801561024157600080fd5b5061024a610d0e565b60405161025791906119c6565b60405180910390f35b34801561026c57600080fd5b50610275610d6e565b6040516102829190611a02565b60405180910390f35b60008060019054906101000a900460ff161590508080156102bc5750600160008054906101000a900460ff1660ff16105b806102e957506102cb30610dce565b1580156102e85750600160008054906101000a900460ff1660ff16145b5b610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90611aa0565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610365576001600060016101000a81548160ff0219169083151502179055505b85600160006001600581111561037e5761037d61181f565b5b60058111156103905761038f61181f565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460016000600260058111156103f5576103f461181f565b5b60058111156104075761040661181f565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006003600581111561046c5761046b61181f565b5b600581111561047e5761047d61181f565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260016000600460058111156104e3576104e261181f565b5b60058111156104f5576104f461181f565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006005808111156105595761055861181f565b5b600581111561056b5761056a61181f565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600581111561061a5761061961181f565b5b021790555060028060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156106815761068061181f565b5b02179055506003600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156106e9576106e861181f565b5b02179055506004600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156107515761075061181f565b5b02179055506005600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360058111156107b9576107b861181f565b5b021790555080156108175760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161080e9190611b08565b60405180910390a15b505050505050565b600060016000600260058111156108395761083861181f565b5b600581111561084b5761084a61181f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff160361090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490611b95565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661094c610df1565b73ffffffffffffffffffffffffffffffffffffffff16146109a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099990611c27565b60405180910390fd5b6109ab81610e48565b610a0481600067ffffffffffffffff8111156109ca576109c9611664565b5b6040519080825280601f01601f1916602001820160405280156109fc5781602001600182028036833780820191505090505b506000610f2e565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611b95565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610ad4610df1565b73ffffffffffffffffffffffffffffffffffffffff1614610b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2190611c27565b60405180910390fd5b610b3382610e48565b610b3f82826001610f2e565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bca90611cb9565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60026020528060005260406000206000915054906101000a900460ff1681565b60006001600060036005811115610c3657610c3561181f565b5b6005811115610c4857610c4761181f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060016000600580811115610c9557610c9461181f565b5b6005811115610ca757610ca661181f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600060016005811115610d2857610d2761181f565b5b6005811115610d3a57610d3961181f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001600060046005811115610d8857610d8761181f565b5b6005811115610d9a57610d9961181f565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000610e1f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61109c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e5061081f565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe9190611cee565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2290611d8d565b60405180910390fd5b50565b610f5a7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b6110a6565b60000160009054906101000a900460ff1615610f7e57610f79836110b0565b611097565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610fe657506040513d601f19601f82011682018060405250810190610fe39190611dd9565b60015b611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101c90611e78565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461108a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108190611f0a565b60405180910390fd5b50611096838383611169565b5b505050565b6000819050919050565b6000819050919050565b6110b981611195565b6110f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ef90611f9c565b60405180910390fd5b806111257f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61109c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611172836111b8565b60008251118061117f5750805b156111905761118e8383611207565b505b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6111c1816110b0565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606061122c838360405180606001604052806027815260200161211760279139611234565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff168560405161125e919061202d565b600060405180830381855af49150503d8060008114611299576040519150601f19603f3d011682016040523d82523d6000602084013e61129e565b606091505b50915091506112af868383876112ba565b925050509392505050565b6060831561131c576000835103611314576112d485611195565b611313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130a90612090565b60405180910390fd5b5b829050611327565b611326838361132f565b5b949350505050565b6000825111156113425781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137691906120f4565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113be82611393565b9050919050565b60006113d0826113b3565b9050919050565b6113e0816113c5565b81146113eb57600080fd5b50565b6000813590506113fd816113d7565b92915050565b600061140e826113b3565b9050919050565b61141e81611403565b811461142957600080fd5b50565b60008135905061143b81611415565b92915050565b600061144c826113b3565b9050919050565b61145c81611441565b811461146757600080fd5b50565b60008135905061147981611453565b92915050565b600061148a826113b3565b9050919050565b61149a8161147f565b81146114a557600080fd5b50565b6000813590506114b781611491565b92915050565b60006114c8826113b3565b9050919050565b6114d8816114bd565b81146114e357600080fd5b50565b6000813590506114f5816114cf565b92915050565b600080600080600060a0868803121561151757611516611389565b5b6000611525888289016113ee565b95505060206115368882890161142c565b94505060406115478882890161146a565b9350506060611558888289016114a8565b9250506080611569888289016114e6565b9150509295509295909350565b6000819050919050565b600061159b61159661159184611393565b611576565b611393565b9050919050565b60006115ad82611580565b9050919050565b60006115bf826115a2565b9050919050565b6115cf816115b4565b82525050565b60006020820190506115ea60008301846115c6565b92915050565b6115f9816113b3565b811461160457600080fd5b50565b600081359050611616816115f0565b92915050565b60006020828403121561163257611631611389565b5b600061164084828501611607565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61169c82611653565b810181811067ffffffffffffffff821117156116bb576116ba611664565b5b80604052505050565b60006116ce61137f565b90506116da8282611693565b919050565b600067ffffffffffffffff8211156116fa576116f9611664565b5b61170382611653565b9050602081019050919050565b82818337600083830152505050565b600061173261172d846116df565b6116c4565b90508281526020810184848401111561174e5761174d61164e565b5b611759848285611710565b509392505050565b600082601f83011261177657611775611649565b5b813561178684826020860161171f565b91505092915050565b600080604083850312156117a6576117a5611389565b5b60006117b485828601611607565b925050602083013567ffffffffffffffff8111156117d5576117d461138e565b5b6117e185828601611761565b9150509250929050565b6000819050919050565b6117fe816117eb565b82525050565b600060208201905061181960008301846117f5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061185f5761185e61181f565b5b50565b60008190506118708261184e565b919050565b600061188082611862565b9050919050565b61189081611875565b82525050565b60006020820190506118ab6000830184611887565b92915050565b60006118bc826115a2565b9050919050565b6118cc816118b1565b82525050565b60006020820190506118e760008301846118c3565b92915050565b60006118f8826115a2565b9050919050565b611908816118ed565b82525050565b600060208201905061192360008301846118ff565b92915050565b6006811061193657600080fd5b50565b60008135905061194881611929565b92915050565b60006020828403121561196457611963611389565b5b600061197284828501611939565b91505092915050565b611984816113b3565b82525050565b600060208201905061199f600083018461197b565b92915050565b60006119b0826115a2565b9050919050565b6119c0816119a5565b82525050565b60006020820190506119db60008301846119b7565b92915050565b60006119ec826115a2565b9050919050565b6119fc816119e1565b82525050565b6000602082019050611a1760008301846119f3565b92915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611a8a602e83611a1d565b9150611a9582611a2e565b604082019050919050565b60006020820190508181036000830152611ab981611a7d565b9050919050565b6000819050919050565b600060ff82169050919050565b6000611af2611aed611ae884611ac0565b611576565b611aca565b9050919050565b611b0281611ad7565b82525050565b6000602082019050611b1d6000830184611af9565b92915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b6000611b7f602c83611a1d565b9150611b8a82611b23565b604082019050919050565b60006020820190508181036000830152611bae81611b72565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000611c11602c83611a1d565b9150611c1c82611bb5565b604082019050919050565b60006020820190508181036000830152611c4081611c04565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000611ca3603883611a1d565b9150611cae82611c47565b604082019050919050565b60006020820190508181036000830152611cd281611c96565b9050919050565b600081519050611ce8816115f0565b92915050565b600060208284031215611d0457611d03611389565b5b6000611d1284828501611cd9565b91505092915050565b7f436f72653a204f6e6c7920636f6e74726f6c6c6572206f776e65722063616e2060008201527f63616c6c20746869732066756e6374696f6e0000000000000000000000000000602082015250565b6000611d77603283611a1d565b9150611d8282611d1b565b604082019050919050565b60006020820190508181036000830152611da681611d6a565b9050919050565b611db6816117eb565b8114611dc157600080fd5b50565b600081519050611dd381611dad565b92915050565b600060208284031215611def57611dee611389565b5b6000611dfd84828501611dc4565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000611e62602e83611a1d565b9150611e6d82611e06565b604082019050919050565b60006020820190508181036000830152611e9181611e55565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000611ef4602983611a1d565b9150611eff82611e98565b604082019050919050565b60006020820190508181036000830152611f2381611ee7565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000611f86602d83611a1d565b9150611f9182611f2a565b604082019050919050565b60006020820190508181036000830152611fb581611f79565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611ff0578082015181840152602081019050611fd5565b60008484015250505050565b600061200782611fbc565b6120118185611fc7565b9350612021818560208601611fd2565b80840191505092915050565b60006120398284611ffc565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061207a601d83611a1d565b915061208582612044565b602082019050919050565b600060208201905081810360008301526120a98161206d565b9050919050565b600081519050919050565b60006120c6826120b0565b6120d08185611a1d565b93506120e0818560208601611fd2565b6120e981611653565b840191505092915050565b6000602082019050818103600083015261210e81846120bb565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220788be94aa19e43087d155dcf3c47aca1984f61e3cd5df13758b19c3863eea66664736f6c63430008110033";

type CoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Core__factory extends ContractFactory {
  constructor(...args: CoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Core> {
    return super.deploy(overrides || {}) as Promise<Core>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Core {
    return super.attach(address) as Core;
  }
  override connect(signer: Signer): Core__factory {
    return super.connect(signer) as Core__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoreInterface {
    return new utils.Interface(_abi) as CoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Core {
    return new Contract(address, _abi, signerOrProvider) as Core;
  }
}
