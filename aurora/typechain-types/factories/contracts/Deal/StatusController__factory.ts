/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StatusController,
  StatusControllerInterface,
} from "../../../contracts/Deal/StatusController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum DealStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "StatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum DealStatus",
        name: "status_",
        type: "uint8",
      },
    ],
    name: "changeStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startWorkingEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum DealStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5060805161179b61007b60003960008181610162015281816101f0015281816102ea015281816103780152610428015261179b6000f3fe6080604052600436106100555760003560e01c8063200d2ed21461005a5780633659cfe6146100855780634f1ef286146100ae57806352d1902d146100ca57806395bc9538146100f5578063f50940491461011e575b600080fd5b34801561006657600080fd5b5061006f610149565b60405161007c9190610d5e565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a79190610deb565b610160565b005b6100c860048036038101906100c39190610f5e565b6102e8565b005b3480156100d657600080fd5b506100df610424565b6040516100ec9190610fd3565b60405180910390f35b34801561010157600080fd5b5061011c60048036038101906101179190611013565b6104dd565b005b34801561012a57600080fd5b50610133610658565b6040516101409190611059565b60405180910390f35b6000603260009054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16036101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e5906110f7565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661022d610662565b73ffffffffffffffffffffffffffffffffffffffff1614610283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a90611189565b60405180910390fd5b61028c816106b9565b6102e581600067ffffffffffffffff8111156102ab576102aa610e33565b5b6040519080825280601f01601f1916602001820160405280156102dd5781602001600182028036833780820191505090505b5060006106bc565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036d906110f7565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166103b5610662565b73ffffffffffffffffffffffffffffffffffffffff161461040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040290611189565b60405180910390fd5b610414826106b9565b610420828260016106bc565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab9061121b565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6000603260009054906101000a900460ff16905081600181111561050457610503610ce7565b5b81600181111561051757610516610ce7565b5b036105225750610655565b81600181111561053557610534610ce7565b5b81600181111561054857610547610ce7565b5b14158015610579575060018081111561056457610563610ce7565b5b82600181111561057757610576610ce7565b5b145b1561058b5761058661082a565b6105f2565b81600181111561059e5761059d610ce7565b5b8160018111156105b1576105b0610ce7565b5b141580156105e35750600060018111156105ce576105cd610ce7565b5b8260018111156105e1576105e0610ce7565b5b145b156105f1576105f06109f2565b5b5b81603260006101000a81548160ff0219169083600181111561061757610616610ce7565b5b02179055507fafa725e7f44cadb687a7043853fa1a7e7b8f0da74ce87ec546e9420f04da8c1e8260405161064b9190610d5e565b60405180910390a1505b50565b6000603354905090565b60006106907f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6109fc565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b50565b6106e87f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b610a06565b60000160009054906101000a900460ff161561070c5761070783610a10565b610825565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561077457506040513d601f19601f820116820180604052508101906107719190611267565b60015b6107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa90611306565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f90611398565b60405180910390fd5b50610824838383610ac9565b5b505050565b610832610af5565b73ffffffffffffffffffffffffffffffffffffffff1663c3f909d46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a091906113f6565b73ffffffffffffffffffffffffffffffffffffffff1663a7c1abe06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190611461565b73ffffffffffffffffffffffffffffffffffffffff1663e2d2bfe36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c91906114cc565b73ffffffffffffffffffffffffffffffffffffffff1663766718086040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea9190611525565b603381905550565b6000603381905550565b6000819050919050565b6000819050919050565b610a1981610afd565b610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4f906115c4565b60405180910390fd5b80610a857f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6109fc565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ad283610b20565b600082511180610adf5750805b15610af057610aee8383610b6f565b505b505050565b600033905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b610b2981610a10565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060610b94838360405180606001604052806027815260200161173f60279139610b9c565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051610bc69190611655565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b5091509150610c1786838387610c22565b925050509392505050565b60608315610c84576000835103610c7c57610c3c85610afd565b610c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c72906116b8565b60405180910390fd5b5b829050610c8f565b610c8e8383610c97565b5b949350505050565b600082511115610caa5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cde919061171c565b60405180910390fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610d2757610d26610ce7565b5b50565b6000819050610d3882610d16565b919050565b6000610d4882610d2a565b9050919050565b610d5881610d3d565b82525050565b6000602082019050610d736000830184610d4f565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610db882610d8d565b9050919050565b610dc881610dad565b8114610dd357600080fd5b50565b600081359050610de581610dbf565b92915050565b600060208284031215610e0157610e00610d83565b5b6000610e0f84828501610dd6565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e6b82610e22565b810181811067ffffffffffffffff82111715610e8a57610e89610e33565b5b80604052505050565b6000610e9d610d79565b9050610ea98282610e62565b919050565b600067ffffffffffffffff821115610ec957610ec8610e33565b5b610ed282610e22565b9050602081019050919050565b82818337600083830152505050565b6000610f01610efc84610eae565b610e93565b905082815260208101848484011115610f1d57610f1c610e1d565b5b610f28848285610edf565b509392505050565b600082601f830112610f4557610f44610e18565b5b8135610f55848260208601610eee565b91505092915050565b60008060408385031215610f7557610f74610d83565b5b6000610f8385828601610dd6565b925050602083013567ffffffffffffffff811115610fa457610fa3610d88565b5b610fb085828601610f30565b9150509250929050565b6000819050919050565b610fcd81610fba565b82525050565b6000602082019050610fe86000830184610fc4565b92915050565b60028110610ffb57600080fd5b50565b60008135905061100d81610fee565b92915050565b60006020828403121561102957611028610d83565b5b600061103784828501610ffe565b91505092915050565b6000819050919050565b61105381611040565b82525050565b600060208201905061106e600083018461104a565b92915050565b600082825260208201905092915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006110e1602c83611074565b91506110ec82611085565b604082019050919050565b60006020820190508181036000830152611110816110d4565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000611173602c83611074565b915061117e82611117565b604082019050919050565b600060208201905081810360008301526111a281611166565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000611205603883611074565b9150611210826111a9565b604082019050919050565b60006020820190508181036000830152611234816111f8565b9050919050565b61124481610fba565b811461124f57600080fd5b50565b6000815190506112618161123b565b92915050565b60006020828403121561127d5761127c610d83565b5b600061128b84828501611252565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b60006112f0602e83611074565b91506112fb82611294565b604082019050919050565b6000602082019050818103600083015261131f816112e3565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000611382602983611074565b915061138d82611326565b604082019050919050565b600060208201905081810360008301526113b181611375565b9050919050565b60006113c382610dad565b9050919050565b6113d3816113b8565b81146113de57600080fd5b50565b6000815190506113f0816113ca565b92915050565b60006020828403121561140c5761140b610d83565b5b600061141a848285016113e1565b91505092915050565b600061142e82610dad565b9050919050565b61143e81611423565b811461144957600080fd5b50565b60008151905061145b81611435565b92915050565b60006020828403121561147757611476610d83565b5b60006114858482850161144c565b91505092915050565b600061149982610dad565b9050919050565b6114a98161148e565b81146114b457600080fd5b50565b6000815190506114c6816114a0565b92915050565b6000602082840312156114e2576114e1610d83565b5b60006114f0848285016114b7565b91505092915050565b61150281611040565b811461150d57600080fd5b50565b60008151905061151f816114f9565b92915050565b60006020828403121561153b5761153a610d83565b5b600061154984828501611510565b91505092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006115ae602d83611074565b91506115b982611552565b604082019050919050565b600060208201905081810360008301526115dd816115a1565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156116185780820151818401526020810190506115fd565b60008484015250505050565b600061162f826115e4565b61163981856115ef565b93506116498185602086016115fa565b80840191505092915050565b60006116618284611624565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006116a2601d83611074565b91506116ad8261166c565b602082019050919050565b600060208201905081810360008301526116d181611695565b9050919050565b600081519050919050565b60006116ee826116d8565b6116f88185611074565b93506117088185602086016115fa565b61171181610e22565b840191505092915050565b6000602082019050818103600083015261173681846116e3565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ce939d0b4b5542b81fa5b6b4a02c2c2ba846f382c65b4903cb39913bc40321d464736f6c63430008110033";

type StatusControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StatusControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StatusController__factory extends ContractFactory {
  constructor(...args: StatusControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StatusController> {
    return super.deploy(overrides || {}) as Promise<StatusController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StatusController {
    return super.attach(address) as StatusController;
  }
  override connect(signer: Signer): StatusController__factory {
    return super.connect(signer) as StatusController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StatusControllerInterface {
    return new utils.Interface(_abi) as StatusControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StatusController {
    return new Contract(address, _abi, signerOrProvider) as StatusController;
  }
}
