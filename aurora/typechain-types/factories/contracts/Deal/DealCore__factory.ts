/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DealCore,
  DealCoreInterface,
} from "../../../contracts/Deal/DealCore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract GlobalConfig",
        name: "globalConfig_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pricePerEpoch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredStake_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minWorkers_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxWorkersPerProvider_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetWorkers_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "appCID_",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "effectorWasmsCids_",
        type: "string[]",
      },
      {
        internalType: "contract IParticleVerifyer",
        name: "particleVerifyer_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "appCID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "effectorWasmsCids",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fluenceToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalConfig",
    outputs: [
      {
        internalType: "contract GlobalConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWorkersPerProvider",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "moduleByAddress",
    outputs: [
      {
        internalType: "enum Module",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Module",
        name: "",
        type: "uint8",
      },
    ],
    name: "modules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "particleVerifyer",
    outputs: [
      {
        internalType: "contract IParticleVerifyer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "appCID_",
        type: "string",
      },
    ],
    name: "setAppCID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricePerEpoch_",
        type: "uint256",
      },
    ],
    name: "setPricePerEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredStake_",
        type: "uint256",
      },
    ],
    name: "setRequiredStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620018cc380380620018cc83398181016040528101906200003891906200067d565b8973ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508973ffffffffffffffffffffffffffffffffffffffff1663ac027f976040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000de9190620007f6565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508873ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508760028190555086600381905550856005819055508460068190555083600781905550826004908162000179919062000a69565b50816008908051906020019062000192929190620001d7565b508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff16815250505050505050505050505062000b50565b82805482825590600052602060002090810192821562000224579160200282015b828111156200022357825182908162000212919062000a69565b5091602001919060010190620001f8565b5b50905062000233919062000237565b5090565b5b808211156200025b57600081816200025191906200025f565b5060010162000238565b5090565b5080546200026d9062000862565b6000825580601f10620002815750620002a2565b601f016020900490600052602060002090810190620002a19190620002a5565b5b50565b5b80821115620002c0576000816000905550600101620002a6565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030582620002d8565b9050919050565b60006200031982620002f8565b9050919050565b6200032b816200030c565b81146200033757600080fd5b50565b6000815190506200034b8162000320565b92915050565b6200035c81620002f8565b81146200036857600080fd5b50565b6000815190506200037c8162000351565b92915050565b6000819050919050565b620003978162000382565b8114620003a357600080fd5b50565b600081519050620003b7816200038c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200041282620003c7565b810181811067ffffffffffffffff82111715620004345762000433620003d8565b5b80604052505050565b600062000449620002c4565b905062000457828262000407565b919050565b600067ffffffffffffffff8211156200047a5762000479620003d8565b5b6200048582620003c7565b9050602081019050919050565b60005b83811015620004b257808201518184015260208101905062000495565b60008484015250505050565b6000620004d5620004cf846200045c565b6200043d565b905082815260208101848484011115620004f457620004f3620003c2565b5b6200050184828562000492565b509392505050565b600082601f830112620005215762000520620003bd565b5b815162000533848260208601620004be565b91505092915050565b600067ffffffffffffffff8211156200055a5762000559620003d8565b5b602082029050602081019050919050565b600080fd5b60006200058762000581846200053c565b6200043d565b90508083825260208201905060208402830185811115620005ad57620005ac6200056b565b5b835b81811015620005fb57805167ffffffffffffffff811115620005d657620005d5620003bd565b5b808601620005e5898262000509565b85526020850194505050602081019050620005af565b5050509392505050565b600082601f8301126200061d576200061c620003bd565b5b81516200062f84826020860162000570565b91505092915050565b60006200064582620002f8565b9050919050565b620006578162000638565b81146200066357600080fd5b50565b60008151905062000677816200064c565b92915050565b6000806000806000806000806000806101408b8d031215620006a457620006a3620002ce565b5b6000620006b48d828e016200033a565b9a50506020620006c78d828e016200036b565b9950506040620006da8d828e01620003a6565b9850506060620006ed8d828e01620003a6565b9750506080620007008d828e01620003a6565b96505060a0620007138d828e01620003a6565b95505060c0620007268d828e01620003a6565b94505060e08b015167ffffffffffffffff8111156200074a5762000749620002d3565b5b620007588d828e0162000509565b9350506101008b015167ffffffffffffffff8111156200077d576200077c620002d3565b5b6200078b8d828e0162000605565b9250506101206200079f8d828e0162000666565b9150509295989b9194979a5092959850565b6000620007be82620002f8565b9050919050565b620007d081620007b1565b8114620007dc57600080fd5b50565b600081519050620007f081620007c5565b92915050565b6000602082840312156200080f576200080e620002ce565b5b60006200081f84828501620007df565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200087b57607f821691505b60208210810362000891576200089062000833565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008bc565b620009078683620008bc565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200094a620009446200093e8462000382565b6200091f565b62000382565b9050919050565b6000819050919050565b620009668362000929565b6200097e620009758262000951565b848454620008c9565b825550505050565b600090565b6200099562000986565b620009a28184846200095b565b505050565b5b81811015620009ca57620009be6000826200098b565b600181019050620009a8565b5050565b601f82111562000a1957620009e38162000897565b620009ee84620008ac565b81016020851015620009fe578190505b62000a1662000a0d85620008ac565b830182620009a7565b50505b505050565b600082821c905092915050565b600062000a3e6000198460080262000a1e565b1980831691505092915050565b600062000a59838362000a2b565b9150826002028217905092915050565b62000a748262000828565b67ffffffffffffffff81111562000a905762000a8f620003d8565b5b62000a9c825462000862565b62000aa9828285620009ce565b600060209050601f83116001811462000ae1576000841562000acc578287015190505b62000ad8858262000a4b565b86555062000b48565b601f19841662000af18662000897565b60005b8281101562000b1b5784890151825560018201915060208501945060208101905062000af4565b8683101562000b3b578489015162000b37601f89168262000a2b565b8355505b6001600288020188555050505b505050505050565b60805160a05160c05160e051610d4262000b8a60003960006103270152600061035701526000610505015260006104e10152610d426000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636ae76a4211610097578063ac027f9711610066578063ac027f971461028f578063af9cb9f6146102ad578063c2aeb7bd146102c9578063cae52eaa146102f957610100565b80636ae76a42146102055780638a0c725b146102355780639bc6686814610253578063a7c1abe01461027157610100565b80632db31193116100d35780632db311931461017b5780633013ce291461019957806341ca2ab5146101b75780635fc8f59c146101e757610100565b806313a2107d1461010557806319cb355d146101215780631ef7e0a11461013f5780632943dcab1461015d575b600080fd5b61011f600480360381019061011a91906105ba565b610315565b005b61012961031f565b60405161013691906105f6565b60405180910390f35b610147610325565b6040516101549190610690565b60405180910390f35b610165610349565b60405161017291906105f6565b60405180910390f35b61018361034f565b60405161019091906105f6565b60405180910390f35b6101a1610355565b6040516101ae91906106cc565b60405180910390f35b6101d160048036038101906101cc91906105ba565b610379565b6040516101de9190610777565b60405180910390f35b6101ef610425565b6040516101fc91906105f6565b60405180910390f35b61021f600480360381019061021a91906107d7565b61042b565b60405161022c919061087b565b60405180910390f35b61023d61044b565b60405161024a91906105f6565b60405180910390f35b61025b610451565b6040516102689190610777565b60405180910390f35b6102796104df565b60405161028691906108b7565b60405180910390f35b610297610503565b6040516102a491906106cc565b60405180910390f35b6102c760048036038101906102c291906105ba565b610527565b005b6102e360048036038101906102de91906108f7565b610531565b6040516102f09190610933565b60405180910390f35b610313600480360381019061030e91906109b3565b610564565b005b8060028190555050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60075481565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6008818154811061038957600080fd5b9060005260206000200160009150905080546103a490610a2f565b80601f01602080910402602001604051908101604052809291908181526020018280546103d090610a2f565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b505050505081565b60025481565b60016020528060005260406000206000915054906101000a900460ff1681565b60065481565b6004805461045e90610a2f565b80601f016020809104026020016040519081016040528092919081815260200182805461048a90610a2f565b80156104d75780601f106104ac576101008083540402835291602001916104d7565b820191906000526020600020905b8154815290600101906020018083116104ba57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b8060038190555050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b818160049182610575929190610c3c565b505050565b600080fd5b600080fd5b6000819050919050565b61059781610584565b81146105a257600080fd5b50565b6000813590506105b48161058e565b92915050565b6000602082840312156105d0576105cf61057a565b5b60006105de848285016105a5565b91505092915050565b6105f081610584565b82525050565b600060208201905061060b60008301846105e7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061065661065161064c84610611565b610631565b610611565b9050919050565b60006106688261063b565b9050919050565b600061067a8261065d565b9050919050565b61068a8161066f565b82525050565b60006020820190506106a56000830184610681565b92915050565b60006106b68261065d565b9050919050565b6106c6816106ab565b82525050565b60006020820190506106e160008301846106bd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610721578082015181840152602081019050610706565b60008484015250505050565b6000601f19601f8301169050919050565b6000610749826106e7565b61075381856106f2565b9350610763818560208601610703565b61076c8161072d565b840191505092915050565b60006020820190508181036000830152610791818461073e565b905092915050565b60006107a482610611565b9050919050565b6107b481610799565b81146107bf57600080fd5b50565b6000813590506107d1816107ab565b92915050565b6000602082840312156107ed576107ec61057a565b5b60006107fb848285016107c2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061084457610843610804565b5b50565b600081905061085582610833565b919050565b600061086582610847565b9050919050565b6108758161085a565b82525050565b6000602082019050610890600083018461086c565b92915050565b60006108a18261065d565b9050919050565b6108b181610896565b82525050565b60006020820190506108cc60008301846108a8565b92915050565b600581106108df57600080fd5b50565b6000813590506108f1816108d2565b92915050565b60006020828403121561090d5761090c61057a565b5b600061091b848285016108e2565b91505092915050565b61092d81610799565b82525050565b60006020820190506109486000830184610924565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109735761097261094e565b5b8235905067ffffffffffffffff8111156109905761098f610953565b5b6020830191508360018202830111156109ac576109ab610958565b5b9250929050565b600080602083850312156109ca576109c961057a565b5b600083013567ffffffffffffffff8111156109e8576109e761057f565b5b6109f48582860161095d565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a4757607f821691505b602082108103610a5a57610a59610a00565b5b50919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610afc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610abf565b610b068683610abf565b95508019841693508086168417925050509392505050565b6000610b39610b34610b2f84610584565b610631565b610584565b9050919050565b6000819050919050565b610b5383610b1e565b610b67610b5f82610b40565b848454610acc565b825550505050565b600090565b610b7c610b6f565b610b87818484610b4a565b505050565b5b81811015610bab57610ba0600082610b74565b600181019050610b8d565b5050565b601f821115610bf057610bc181610a9a565b610bca84610aaf565b81016020851015610bd9578190505b610bed610be585610aaf565b830182610b8c565b50505b505050565b600082821c905092915050565b6000610c1360001984600802610bf5565b1980831691505092915050565b6000610c2c8383610c02565b9150826002028217905092915050565b610c468383610a60565b67ffffffffffffffff811115610c5f57610c5e610a6b565b5b610c698254610a2f565b610c74828285610baf565b6000601f831160018114610ca35760008415610c91578287013590505b610c9b8582610c20565b865550610d03565b601f198416610cb186610a9a565b60005b82811015610cd957848901358255600182019150602085019450602081019050610cb4565b86831015610cf65784890135610cf2601f891682610c02565b8355505b6001600288020188555050505b5050505050505056fea2646970667358221220159f8acbcf33180d42b66e6bbed519128986c2083f0e837e6003fbeac768348564736f6c63430008110033";

type DealCoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DealCoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DealCore__factory extends ContractFactory {
  constructor(...args: DealCoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    globalConfig_: PromiseOrValue<string>,
    paymentToken_: PromiseOrValue<string>,
    pricePerEpoch_: PromiseOrValue<BigNumberish>,
    requiredStake_: PromiseOrValue<BigNumberish>,
    minWorkers_: PromiseOrValue<BigNumberish>,
    maxWorkersPerProvider_: PromiseOrValue<BigNumberish>,
    targetWorkers_: PromiseOrValue<BigNumberish>,
    appCID_: PromiseOrValue<string>,
    effectorWasmsCids_: PromiseOrValue<string>[],
    particleVerifyer_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DealCore> {
    return super.deploy(
      globalConfig_,
      paymentToken_,
      pricePerEpoch_,
      requiredStake_,
      minWorkers_,
      maxWorkersPerProvider_,
      targetWorkers_,
      appCID_,
      effectorWasmsCids_,
      particleVerifyer_,
      overrides || {}
    ) as Promise<DealCore>;
  }
  override getDeployTransaction(
    globalConfig_: PromiseOrValue<string>,
    paymentToken_: PromiseOrValue<string>,
    pricePerEpoch_: PromiseOrValue<BigNumberish>,
    requiredStake_: PromiseOrValue<BigNumberish>,
    minWorkers_: PromiseOrValue<BigNumberish>,
    maxWorkersPerProvider_: PromiseOrValue<BigNumberish>,
    targetWorkers_: PromiseOrValue<BigNumberish>,
    appCID_: PromiseOrValue<string>,
    effectorWasmsCids_: PromiseOrValue<string>[],
    particleVerifyer_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      globalConfig_,
      paymentToken_,
      pricePerEpoch_,
      requiredStake_,
      minWorkers_,
      maxWorkersPerProvider_,
      targetWorkers_,
      appCID_,
      effectorWasmsCids_,
      particleVerifyer_,
      overrides || {}
    );
  }
  override attach(address: string): DealCore {
    return super.attach(address) as DealCore;
  }
  override connect(signer: Signer): DealCore__factory {
    return super.connect(signer) as DealCore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DealCoreInterface {
    return new utils.Interface(_abi) as DealCoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DealCore {
    return new Contract(address, _abi, signerOrProvider) as DealCore;
  }
}
