/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICoreInitializable,
  ICoreInitializableInterface,
} from "../../../../contracts/deal/interfaces/ICoreInitializable";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConfig",
        name: "config_",
        type: "address",
      },
      {
        internalType: "contract IController",
        name: "controller_",
        type: "address",
      },
      {
        internalType: "contract IPayment",
        name: "payment_",
        type: "address",
      },
      {
        internalType: "contract IStatusController",
        name: "statusController_",
        type: "address",
      },
      {
        internalType: "contract IWorkers",
        name: "workers_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICoreInitializable__factory {
  static readonly abi = _abi;
  static createInterface(): ICoreInitializableInterface {
    return new utils.Interface(_abi) as ICoreInitializableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICoreInitializable {
    return new Contract(address, _abi, signerOrProvider) as ICoreInitializable;
  }
}
