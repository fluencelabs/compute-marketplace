/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Controller,
  ControllerInterface,
} from "../../../contracts/deal/Controller";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resourceOwner",
        type: "address",
      },
    ],
    name: "joinViaMatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "setAppCID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051611da161007b600039600081816101f3015281816102810152818161037b0152818161040901526104b90152611da16000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610134578063b688a3631461015f578063cae52eaa14610176578063e5e63b311461019f578063f2fde38b146101c857610091565b80633659cfe6146100965780634f1ef286146100bf57806352d1902d146100db578063715018a6146101065780638129fc1c1461011d575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190611184565b6101f1565b005b6100d960048036038101906100d491906112f7565b610379565b005b3480156100e757600080fd5b506100f06104b5565b6040516100fd919061136c565b60405180910390f35b34801561011257600080fd5b5061011b61056e565b005b34801561012957600080fd5b50610132610582565b005b34801561014057600080fd5b506101496106c7565b6040516101569190611396565b60405180910390f35b34801561016b57600080fd5b506101746106d6565b005b34801561018257600080fd5b5061019d60048036038101906101989190611411565b6107b8565b005b3480156101ab57600080fd5b506101c660048036038101906101c19190611184565b6108a6565b005b3480156101d457600080fd5b506101ef60048036038101906101ea9190611184565b610989565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff160361027f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610276906114e1565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166102be610a0c565b73ffffffffffffffffffffffffffffffffffffffff1614610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90611573565b60405180910390fd5b61031d81610a63565b61037681600067ffffffffffffffff81111561033c5761033b6111cc565b5b6040519080825280601f01601f19166020018201604052801561036e5781602001600182028036833780820191505090505b506000610a66565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610407576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fe906114e1565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610446610a0c565b73ffffffffffffffffffffffffffffffffffffffff161461049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611573565b60405180910390fd5b6104a582610a63565b6104b182826001610a66565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c90611605565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b610576610bd4565b6105806000610c52565b565b6000603260019054906101000a900460ff161590508080156105b657506001603260009054906101000a900460ff1660ff16105b806105e557506105c530610d18565b1580156105e457506001603260009054906101000a900460ff1660ff16145b5b610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90611697565b60405180910390fd5b6001603260006101000a81548160ff021916908360ff1602179055508015610662576001603260016101000a81548160ff0219169083151502179055505b61066a610d3b565b80156106c4576000603260016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516106bb9190611709565b60405180910390a15b50565b60006106d1610d94565b905090565b6106de610dbe565b73ffffffffffffffffffffffffffffffffffffffff1663c1499f716040518163ffffffff1660e01b8152600401602060405180830381865afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c9190611762565b73ffffffffffffffffffffffffffffffffffffffff16631216c2f3336040518263ffffffff1660e01b81526004016107849190611396565b600060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b50505050565b6107c0610bd4565b6107c8610dbe565b73ffffffffffffffffffffffffffffffffffffffff1663c3f909d46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610812573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083691906117cd565b73ffffffffffffffffffffffffffffffffffffffff1663cae52eaa83836040518363ffffffff1660e01b8152600401610870929190611827565b600060405180830381600087803b15801561088a57600080fd5b505af115801561089e573d6000803e3d6000fd5b505050505050565b6108ae610dbe565b73ffffffffffffffffffffffffffffffffffffffff1663c1499f716040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091c9190611762565b73ffffffffffffffffffffffffffffffffffffffff16631216c2f3826040518263ffffffff1660e01b81526004016109549190611396565b600060405180830381600087803b15801561096e57600080fd5b505af1158015610982573d6000803e3d6000fd5b5050505050565b610991610bd4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f7906118bd565b60405180910390fd5b610a0981610c52565b50565b6000610a3a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610dc6565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b50565b610a927f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b610dd0565b60000160009054906101000a900460ff1615610ab657610ab183610dda565b610bcf565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b1e57506040513d601f19601f82011682018060405250810190610b1b9190611909565b60015b610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b54906119a8565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb990611a3a565b60405180910390fd5b50610bce838383610e93565b5b505050565b610bdc610ebf565b73ffffffffffffffffffffffffffffffffffffffff16610bfa6106c7565b73ffffffffffffffffffffffffffffffffffffffff1614610c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4790611aa6565b60405180910390fd5b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b603260019054906101000a900460ff16610d8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8190611b38565b60405180910390fd5b610d92610ec7565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b6000819050919050565b6000819050919050565b610de381610f28565b610e22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1990611bca565b60405180910390fd5b80610e4f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610dc6565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610e9c83610f4b565b600082511180610ea95750805b15610eba57610eb88383610f9a565b505b505050565b600033905090565b603260019054906101000a900460ff16610f16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0d90611b38565b60405180910390fd5b610f26610f21610ebf565b610c52565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b610f5481610dda565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060610fbf8383604051806060016040528060278152602001611d4560279139610fc7565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051610ff19190611c5b565b600060405180830381855af49150503d806000811461102c576040519150601f19603f3d011682016040523d82523d6000602084013e611031565b606091505b50915091506110428683838761104d565b925050509392505050565b606083156110af5760008351036110a75761106785610f28565b6110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d90611cbe565b60405180910390fd5b5b8290506110ba565b6110b983836110c2565b5b949350505050565b6000825111156110d55781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111099190611d22565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061115182611126565b9050919050565b61116181611146565b811461116c57600080fd5b50565b60008135905061117e81611158565b92915050565b60006020828403121561119a5761119961111c565b5b60006111a88482850161116f565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611204826111bb565b810181811067ffffffffffffffff82111715611223576112226111cc565b5b80604052505050565b6000611236611112565b905061124282826111fb565b919050565b600067ffffffffffffffff821115611262576112616111cc565b5b61126b826111bb565b9050602081019050919050565b82818337600083830152505050565b600061129a61129584611247565b61122c565b9050828152602081018484840111156112b6576112b56111b6565b5b6112c1848285611278565b509392505050565b600082601f8301126112de576112dd6111b1565b5b81356112ee848260208601611287565b91505092915050565b6000806040838503121561130e5761130d61111c565b5b600061131c8582860161116f565b925050602083013567ffffffffffffffff81111561133d5761133c611121565b5b611349858286016112c9565b9150509250929050565b6000819050919050565b61136681611353565b82525050565b6000602082019050611381600083018461135d565b92915050565b61139081611146565b82525050565b60006020820190506113ab6000830184611387565b92915050565b600080fd5b600080fd5b60008083601f8401126113d1576113d06111b1565b5b8235905067ffffffffffffffff8111156113ee576113ed6113b1565b5b60208301915083600182028301111561140a576114096113b6565b5b9250929050565b600080602083850312156114285761142761111c565b5b600083013567ffffffffffffffff81111561144657611445611121565b5b611452858286016113bb565b92509250509250929050565b600082825260208201905092915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006114cb602c8361145e565b91506114d68261146f565b604082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b600061155d602c8361145e565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b60006115ef60388361145e565b91506115fa82611593565b604082019050919050565b6000602082019050818103600083015261161e816115e2565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611681602e8361145e565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006116f36116ee6116e9846116b7565b6116ce565b6116c1565b9050919050565b611703816116d8565b82525050565b600060208201905061171e60008301846116fa565b92915050565b600061172f82611146565b9050919050565b61173f81611724565b811461174a57600080fd5b50565b60008151905061175c81611736565b92915050565b6000602082840312156117785761177761111c565b5b60006117868482850161174d565b91505092915050565b600061179a82611146565b9050919050565b6117aa8161178f565b81146117b557600080fd5b50565b6000815190506117c7816117a1565b92915050565b6000602082840312156117e3576117e261111c565b5b60006117f1848285016117b8565b91505092915050565b6000611806838561145e565b9350611813838584611278565b61181c836111bb565b840190509392505050565b600060208201905081810360008301526118428184866117fa565b90509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118a760268361145e565b91506118b28261184b565b604082019050919050565b600060208201905081810360008301526118d68161189a565b9050919050565b6118e681611353565b81146118f157600080fd5b50565b600081519050611903816118dd565b92915050565b60006020828403121561191f5761191e61111c565b5b600061192d848285016118f4565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000611992602e8361145e565b915061199d82611936565b604082019050919050565b600060208201905081810360008301526119c181611985565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000611a2460298361145e565b9150611a2f826119c8565b604082019050919050565b60006020820190508181036000830152611a5381611a17565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a9060208361145e565b9150611a9b82611a5a565b602082019050919050565b60006020820190508181036000830152611abf81611a83565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611b22602b8361145e565b9150611b2d82611ac6565b604082019050919050565b60006020820190508181036000830152611b5181611b15565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000611bb4602d8361145e565b9150611bbf82611b58565b604082019050919050565b60006020820190508181036000830152611be381611ba7565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611c1e578082015181840152602081019050611c03565b60008484015250505050565b6000611c3582611bea565b611c3f8185611bf5565b9350611c4f818560208601611c00565b80840191505092915050565b6000611c678284611c2a565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611ca8601d8361145e565b9150611cb382611c72565b602082019050919050565b60006020820190508181036000830152611cd781611c9b565b9050919050565b600081519050919050565b6000611cf482611cde565b611cfe818561145e565b9350611d0e818560208601611c00565b611d17816111bb565b840191505092915050565b60006020820190508181036000830152611d3c8184611ce9565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122083394ff3542e6491f8b4f1d13d6701cfbb1ff4c7afc5e1352c254a0e78c7892f64736f6c63430008110033";

type ControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Controller> {
    return super.deploy(overrides || {}) as Promise<Controller>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  override connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}
