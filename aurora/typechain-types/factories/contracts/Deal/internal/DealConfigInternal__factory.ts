/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DealConfigInternal,
  DealConfigInternalInterface,
} from "../../../../contracts/Deal/internal/DealConfigInternal";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Core",
        name: "core_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pricePerEpoch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredStake_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minWorkers_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxWorkersPerProvider_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetWorkers_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "appCID_",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "effectorWasmsCids_",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610a54380380610a548339818101604052810190610032919061059b565b8873ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508873ffffffffffffffffffffffffffffffffffffffff1663ac027f976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d591906106db565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508773ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508660008190555085600181905550846003819055508360048190555082600581905550816002908161016e919061091f565b508060069080519060200190610185929190610194565b505050505050505050506109f1565b8280548282559060005260206000209081019282156101dc579160200282015b828111156101db5782518290816101cb919061091f565b50916020019190600101906101b4565b5b5090506101e991906101ed565b5090565b5b8082111561020d57600081816102049190610211565b506001016101ee565b5090565b50805461021d90610742565b6000825580601f1061022f575061024e565b601f01602090049060005260206000209081019061024d9190610251565b5b50565b5b8082111561026a576000816000905550600101610252565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102ad82610282565b9050919050565b60006102bf826102a2565b9050919050565b6102cf816102b4565b81146102da57600080fd5b50565b6000815190506102ec816102c6565b92915050565b6102fb816102a2565b811461030657600080fd5b50565b600081519050610318816102f2565b92915050565b6000819050919050565b6103318161031e565b811461033c57600080fd5b50565b60008151905061034e81610328565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103a78261035e565b810181811067ffffffffffffffff821117156103c6576103c561036f565b5b80604052505050565b60006103d961026e565b90506103e5828261039e565b919050565b600067ffffffffffffffff8211156104055761040461036f565b5b61040e8261035e565b9050602081019050919050565b60005b8381101561043957808201518184015260208101905061041e565b60008484015250505050565b6000610458610453846103ea565b6103cf565b90508281526020810184848401111561047457610473610359565b5b61047f84828561041b565b509392505050565b600082601f83011261049c5761049b610354565b5b81516104ac848260208601610445565b91505092915050565b600067ffffffffffffffff8211156104d0576104cf61036f565b5b602082029050602081019050919050565b600080fd5b60006104f96104f4846104b5565b6103cf565b9050808382526020820190506020840283018581111561051c5761051b6104e1565b5b835b8181101561056357805167ffffffffffffffff81111561054157610540610354565b5b80860161054e8982610487565b8552602085019450505060208101905061051e565b5050509392505050565b600082601f83011261058257610581610354565b5b81516105928482602086016104e6565b91505092915050565b60008060008060008060008060006101208a8c0312156105be576105bd610278565b5b60006105cc8c828d016102dd565b99505060206105dd8c828d01610309565b98505060406105ee8c828d0161033f565b97505060606105ff8c828d0161033f565b96505060806106108c828d0161033f565b95505060a06106218c828d0161033f565b94505060c06106328c828d0161033f565b93505060e08a015167ffffffffffffffff8111156106535761065261027d565b5b61065f8c828d01610487565b9250506101008a015167ffffffffffffffff8111156106815761068061027d565b5b61068d8c828d0161056d565b9150509295985092959850929598565b60006106a8826102a2565b9050919050565b6106b88161069d565b81146106c357600080fd5b50565b6000815190506106d5816106af565b92915050565b6000602082840312156106f1576106f0610278565b5b60006106ff848285016106c6565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061075a57607f821691505b60208210810361076d5761076c610713565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107d57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610798565b6107df8683610798565b95508019841693508086168417925050509392505050565b6000819050919050565b600061081c6108176108128461031e565b6107f7565b61031e565b9050919050565b6000819050919050565b61083683610801565b61084a61084282610823565b8484546107a5565b825550505050565b600090565b61085f610852565b61086a81848461082d565b505050565b5b8181101561088e57610883600082610857565b600181019050610870565b5050565b601f8211156108d3576108a481610773565b6108ad84610788565b810160208510156108bc578190505b6108d06108c885610788565b83018261086f565b50505b505050565b600082821c905092915050565b60006108f6600019846008026108d8565b1980831691505092915050565b600061090f83836108e5565b9150826002028217905092915050565b61092882610708565b67ffffffffffffffff8111156109415761094061036f565b5b61094b8254610742565b610956828285610892565b600060209050601f8311600181146109895760008415610977578287015190505b6109818582610903565b8655506109e9565b601f19841661099786610773565b60005b828110156109bf5784890151825560018201915060208501945060208101905061099a565b868310156109dc57848901516109d8601f8916826108e5565b8355505b6001600288020188555050505b505050505050565b60805160a05160c051603f610a15600039600050506000505060005050603f6000f3fe6080604052600080fdfea2646970667358221220a72b278758204de25ab7143c93e59591c3c50fa3a639ae0b8ad036a3ca54312764736f6c63430008110033";

type DealConfigInternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DealConfigInternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DealConfigInternal__factory extends ContractFactory {
  constructor(...args: DealConfigInternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    core_: PromiseOrValue<string>,
    paymentToken_: PromiseOrValue<string>,
    pricePerEpoch_: PromiseOrValue<BigNumberish>,
    requiredStake_: PromiseOrValue<BigNumberish>,
    minWorkers_: PromiseOrValue<BigNumberish>,
    maxWorkersPerProvider_: PromiseOrValue<BigNumberish>,
    targetWorkers_: PromiseOrValue<BigNumberish>,
    appCID_: PromiseOrValue<string>,
    effectorWasmsCids_: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DealConfigInternal> {
    return super.deploy(
      core_,
      paymentToken_,
      pricePerEpoch_,
      requiredStake_,
      minWorkers_,
      maxWorkersPerProvider_,
      targetWorkers_,
      appCID_,
      effectorWasmsCids_,
      overrides || {}
    ) as Promise<DealConfigInternal>;
  }
  override getDeployTransaction(
    core_: PromiseOrValue<string>,
    paymentToken_: PromiseOrValue<string>,
    pricePerEpoch_: PromiseOrValue<BigNumberish>,
    requiredStake_: PromiseOrValue<BigNumberish>,
    minWorkers_: PromiseOrValue<BigNumberish>,
    maxWorkersPerProvider_: PromiseOrValue<BigNumberish>,
    targetWorkers_: PromiseOrValue<BigNumberish>,
    appCID_: PromiseOrValue<string>,
    effectorWasmsCids_: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      core_,
      paymentToken_,
      pricePerEpoch_,
      requiredStake_,
      minWorkers_,
      maxWorkersPerProvider_,
      targetWorkers_,
      appCID_,
      effectorWasmsCids_,
      overrides || {}
    );
  }
  override attach(address: string): DealConfigInternal {
    return super.attach(address) as DealConfigInternal;
  }
  override connect(signer: Signer): DealConfigInternal__factory {
    return super.connect(signer) as DealConfigInternal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DealConfigInternalInterface {
    return new utils.Interface(_abi) as DealConfigInternalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DealConfigInternal {
    return new Contract(address, _abi, signerOrProvider) as DealConfigInternal;
  }
}
