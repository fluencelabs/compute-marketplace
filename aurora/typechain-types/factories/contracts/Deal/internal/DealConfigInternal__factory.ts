/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DealConfigInternal,
  DealConfigInternalInterface,
} from "../../../../contracts/Deal/internal/DealConfigInternal";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Core",
        name: "core_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pricePerEpoch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredStake_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minWorkers_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxWorkersPerProvider_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetWorkers_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "appCID_",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "effectorWasmsCids_",
        type: "string[]",
      },
      {
        internalType: "contract IParticleVerifyer",
        name: "particleVerifyer_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610ae4380380610ae48339818101604052810190610033919061060f565b8973ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508973ffffffffffffffffffffffffffffffffffffffff1663ac027f976040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d69190610764565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508873ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508760008190555086600181905550856003819055508460048190555083600581905550826002908161016f91906109a8565b5081600690805190602001906101869291906101ca565b508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff168152505050505050505050505050610a7a565b828054828255906000526020600020908101928215610212579160200282015b8281111561021157825182908161020191906109a8565b50916020019190600101906101ea565b5b50905061021f9190610223565b5090565b5b80821115610243576000818161023a9190610247565b50600101610224565b5090565b508054610253906107cb565b6000825580601f106102655750610284565b601f0160209004906000526020600020908101906102839190610287565b5b50565b5b808211156102a0576000816000905550600101610288565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102e3826102b8565b9050919050565b60006102f5826102d8565b9050919050565b610305816102ea565b811461031057600080fd5b50565b600081519050610322816102fc565b92915050565b610331816102d8565b811461033c57600080fd5b50565b60008151905061034e81610328565b92915050565b6000819050919050565b61036781610354565b811461037257600080fd5b50565b6000815190506103848161035e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103dd82610394565b810181811067ffffffffffffffff821117156103fc576103fb6103a5565b5b80604052505050565b600061040f6102a4565b905061041b82826103d4565b919050565b600067ffffffffffffffff82111561043b5761043a6103a5565b5b61044482610394565b9050602081019050919050565b60005b8381101561046f578082015181840152602081019050610454565b60008484015250505050565b600061048e61048984610420565b610405565b9050828152602081018484840111156104aa576104a961038f565b5b6104b5848285610451565b509392505050565b600082601f8301126104d2576104d161038a565b5b81516104e284826020860161047b565b91505092915050565b600067ffffffffffffffff821115610506576105056103a5565b5b602082029050602081019050919050565b600080fd5b600061052f61052a846104eb565b610405565b9050808382526020820190506020840283018581111561055257610551610517565b5b835b8181101561059957805167ffffffffffffffff8111156105775761057661038a565b5b80860161058489826104bd565b85526020850194505050602081019050610554565b5050509392505050565b600082601f8301126105b8576105b761038a565b5b81516105c884826020860161051c565b91505092915050565b60006105dc826102d8565b9050919050565b6105ec816105d1565b81146105f757600080fd5b50565b600081519050610609816105e3565b92915050565b6000806000806000806000806000806101408b8d031215610633576106326102ae565b5b60006106418d828e01610313565b9a505060206106528d828e0161033f565b99505060406106638d828e01610375565b98505060606106748d828e01610375565b97505060806106858d828e01610375565b96505060a06106968d828e01610375565b95505060c06106a78d828e01610375565b94505060e08b015167ffffffffffffffff8111156106c8576106c76102b3565b5b6106d48d828e016104bd565b9350506101008b015167ffffffffffffffff8111156106f6576106f56102b3565b5b6107028d828e016105a3565b9250506101206107148d828e016105fa565b9150509295989b9194979a5092959850565b6000610731826102d8565b9050919050565b61074181610726565b811461074c57600080fd5b50565b60008151905061075e81610738565b92915050565b60006020828403121561077a576107796102ae565b5b60006107888482850161074f565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107e357607f821691505b6020821081036107f6576107f561079c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261085e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610821565b6108688683610821565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108a56108a061089b84610354565b610880565b610354565b9050919050565b6000819050919050565b6108bf8361088a565b6108d36108cb826108ac565b84845461082e565b825550505050565b600090565b6108e86108db565b6108f38184846108b6565b505050565b5b818110156109175761090c6000826108e0565b6001810190506108f9565b5050565b601f82111561095c5761092d816107fc565b61093684610811565b81016020851015610945578190505b61095961095185610811565b8301826108f8565b50505b505050565b600082821c905092915050565b600061097f60001984600802610961565b1980831691505092915050565b6000610998838361096e565b9150826002028217905092915050565b6109b182610791565b67ffffffffffffffff8111156109ca576109c96103a5565b5b6109d482546107cb565b6109df82828561091b565b600060209050601f831160018114610a125760008415610a00578287015190505b610a0a858261098c565b865550610a72565b601f198416610a20866107fc565b60005b82811015610a4857848901518255600182019150602085019450602081019050610a23565b86831015610a655784890151610a61601f89168261096e565b8355505b6001600288020188555050505b505050505050565b60805160a05160c05160e051603f610aa560003960005050600050506000505060005050603f6000f3fe6080604052600080fdfea26469706673582212206965147a065df8c0a7a6dc0b0dec9ad959f53350b786961ac08ff0e8d2ae54b064736f6c63430008110033";

type DealConfigInternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DealConfigInternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DealConfigInternal__factory extends ContractFactory {
  constructor(...args: DealConfigInternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    core_: PromiseOrValue<string>,
    paymentToken_: PromiseOrValue<string>,
    pricePerEpoch_: PromiseOrValue<BigNumberish>,
    requiredStake_: PromiseOrValue<BigNumberish>,
    minWorkers_: PromiseOrValue<BigNumberish>,
    maxWorkersPerProvider_: PromiseOrValue<BigNumberish>,
    targetWorkers_: PromiseOrValue<BigNumberish>,
    appCID_: PromiseOrValue<string>,
    effectorWasmsCids_: PromiseOrValue<string>[],
    particleVerifyer_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DealConfigInternal> {
    return super.deploy(
      core_,
      paymentToken_,
      pricePerEpoch_,
      requiredStake_,
      minWorkers_,
      maxWorkersPerProvider_,
      targetWorkers_,
      appCID_,
      effectorWasmsCids_,
      particleVerifyer_,
      overrides || {}
    ) as Promise<DealConfigInternal>;
  }
  override getDeployTransaction(
    core_: PromiseOrValue<string>,
    paymentToken_: PromiseOrValue<string>,
    pricePerEpoch_: PromiseOrValue<BigNumberish>,
    requiredStake_: PromiseOrValue<BigNumberish>,
    minWorkers_: PromiseOrValue<BigNumberish>,
    maxWorkersPerProvider_: PromiseOrValue<BigNumberish>,
    targetWorkers_: PromiseOrValue<BigNumberish>,
    appCID_: PromiseOrValue<string>,
    effectorWasmsCids_: PromiseOrValue<string>[],
    particleVerifyer_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      core_,
      paymentToken_,
      pricePerEpoch_,
      requiredStake_,
      minWorkers_,
      maxWorkersPerProvider_,
      targetWorkers_,
      appCID_,
      effectorWasmsCids_,
      particleVerifyer_,
      overrides || {}
    );
  }
  override attach(address: string): DealConfigInternal {
    return super.attach(address) as DealConfigInternal;
  }
  override connect(signer: Signer): DealConfigInternal__factory {
    return super.connect(signer) as DealConfigInternal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DealConfigInternalInterface {
    return new utils.Interface(_abi) as DealConfigInternalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DealConfigInternal {
    return new Contract(address, _abi, signerOrProvider) as DealConfigInternal;
  }
}
