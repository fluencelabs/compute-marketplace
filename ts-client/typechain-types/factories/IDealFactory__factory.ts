/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IDealFactory, IDealFactoryInterface } from "../IDealFactory";

const _abi = [
  {
    type: "function",
    name: "deployDeal",
    inputs: [
      {
        name: "appCID_",
        type: "tuple",
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "paymentToken_",
        type: "address",
        internalType: "contract IERC20",
      },
      {
        name: "minWorkers_",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "targetWorkers_",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxWorkersPerProvider_",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pricePerWorkerEpoch_",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "effectors_",
        type: "tuple[]",
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "accessType_",
        type: "uint8",
        internalType: "enum IConfig.AccessType",
      },
      {
        name: "accessList_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDeal",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasDeal",
    inputs: [
      {
        name: "deal",
        type: "address",
        internalType: "contract IDeal",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "DealCreated",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "deal",
        type: "address",
        indexed: false,
        internalType: "contract IDeal",
      },
      {
        name: "createdAtEpoch",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "paymentToken",
        type: "address",
        indexed: false,
        internalType: "contract IERC20",
      },
      {
        name: "minWorkers",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "targetWorkers",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "maxWorkersPerProvider",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "pricePerWorkerEpoch",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "effectors",
        type: "tuple[]",
        indexed: false,
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "appCID",
        type: "tuple",
        indexed: false,
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
] as const;

export class IDealFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IDealFactoryInterface {
    return new Interface(_abi) as IDealFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDealFactory {
    return new Contract(address, _abi, runner) as unknown as IDealFactory;
  }
}
