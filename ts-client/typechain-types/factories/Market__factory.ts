/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Market, MarketInterface } from "../Market";

const _abi = [
  {
    type: "function",
    name: "addComputePeers",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "peers",
        type: "tuple[]",
        internalType: "struct Market.RegisterComputePeer[]",
        components: [
          {
            name: "peerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "freeUnits",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addEffector",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "newEffectors",
        type: "tuple[]",
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addFreeUnits",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "peerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "freeUnits",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeMinPricePerWorkerEpoch",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "newMinPricePerWorkerEpoch",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changePaymentToken",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "newPaymentToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getComputeUnit",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Market.ComputeUnit",
        components: [
          {
            name: "deal",
            type: "address",
            internalType: "address",
          },
          {
            name: "peerId",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOffer",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Market.OfferInfo",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "minPricePerWorkerEpoch",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "paymentToken",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPeer",
    inputs: [
      {
        name: "peerId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Market.ComputePeerInfo",
        components: [
          {
            name: "offerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "nextUnitIndex",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerMarketOffer",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "minPricePerWorkerEpoch",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "paymentToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "effectors",
        type: "tuple[]",
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "peers",
        type: "tuple[]",
        internalType: "struct Market.RegisterComputePeer[]",
        components: [
          {
            name: "peerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "freeUnits",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeEffector",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "effectors",
        type: "tuple[]",
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "returnComputeUnitFromDeal",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ComputeUnitAddedToDeal",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "deal",
        type: "address",
        indexed: false,
        internalType: "contract IDeal",
      },
      {
        name: "peerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ComputeUnitCreated",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "peerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ComputeUnitRemovedFromDeal",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "deal",
        type: "address",
        indexed: false,
        internalType: "contract IDeal",
      },
      {
        name: "peerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EffectorAdded",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "effector",
        type: "tuple",
        indexed: false,
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EffectorRemoved",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "effector",
        type: "tuple",
        indexed: false,
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MarketOfferRegistered",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "minPricePerWorkerEpoch",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "paymentToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "effectors",
        type: "tuple[]",
        indexed: false,
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MinPricePerEpochUpdated",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "minPricePerWorkerEpoch",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaymentTokenUpdated",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "paymentToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PeerCreated",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "peerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611b8a908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c806306c64ef914610ffa578063087b97ba14610f0257806314afcd5214610b5357806334205efd146109a9578063407a02a4146108db5780634ca26bd814610836578063745e920b1461077c578063a963e5f4146106bd578063b017191a1461050b578063b3f25975146101cc5763d597b8c81461009957600080fd5b346101c857602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c5578082918280516100d981611151565b82815282888201520152833581527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d085522073ffffffffffffffffffffffffffffffffffffffff9081815416938415610169575060609483519161013c83611151565b85835284846002600184015493858701948552015416930192835284519586525190850152511690820152f35b606490868551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f4f6666657220646f65736e2774206578697374000000000000000000000000006044820152fd5b80fd5b8280fd5b5090346101c85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c8578035916024356044359173ffffffffffffffffffffffffffffffffffffffff928381168091036105065767ffffffffffffffff9187606435848111610502576102499036908901611083565b9390946084359081116101c8576102639036908a01611083565b9790988a84527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d091600286602096858852200154166104a657506102a8871515611278565b6102b3821515611303565b898b528252828a20818480516102c881611151565b338152898682015201527fffffffffffffffffffffffff0000000000000000000000000000000000000000338183541617825587600183015582600283019182541617905560038b9101905b8581106103d4575050908392939184519660a08801928b8952339089015285880152606087015260a060808701525260c084019291885b8281106103b5575050505090807f12c115c98040e6fee3452d9bcafb93b0c1db60d3c07d88b04f1d767dbc0d741b920390a1835b818110610393578461039085611877565b80f35b806103ab6103a56103b09385876113ea565b8661151a565b61138e565b61037f565b909192938280826103c860019489611456565b0195019392910161034b565b808761043c610468876103fe858c6103f86103f36104a19a838a6113ea565b611429565b966113ea565b013589519283918a8301958690917fffffffff0000000000000000000000000000000000000000000000000000000060249316825260048201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528261116d565b5190208d52828552858d2060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905561138e565b610314565b606490848651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601460248201527f4f6666657220616c7265616479206578697374730000000000000000000000006044820152fd5b5080fd5b600080fd5b5090346101c85761051b366110b4565b8286949294526020907f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d082528587209061056d73ffffffffffffffffffffffffffffffffffffffff8354163314611812565b6003889201915b81811061057f578880f35b61058a8183896113ea565b61059381611429565b89517fffffffff00000000000000000000000000000000000000000000000000000000909116868201908152828701356004820152906105d6816024840161043c565b519020808b5284865260ff8a8c20541661066157606061065c93927f3c96a39027441c49cc91433cc2f6a915b4aa9be8119e89e1ee6700fe60eb2531928d528688528b8d2060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790556106568c51918b835289830190611456565ba161138e565b610574565b606487878c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4566666563746f7220616c7265616479206578697374730000000000000000006044820152fd5b50346101c857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c8577fdd848dc9639c1bd25e20cfc64807b34179257bd6236df1e88b957e369d70bdeb91356024358185527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d060205280600184872061076173ffffffffffffffffffffffffffffffffffffffff8254163314611812565b61076c831515611278565b015582519182526020820152a180f35b5090346101c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c8579181926000602084516107bf81611106565b82815201523581527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d26020522060018101546107fc811515611213565b602073ffffffffffffffffffffffffffffffffffffffff84519361081f85611106565b541692838152019081528251918252516020820152f35b5090346101c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c85791819260006020845161087981611106565b82815201523581527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d1602052208054906108b48215156111ae565b602060018451926108c484611106565b848452015491019081528251918252516020820152f35b50346101c85760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c8576103909135602435906109a481604435948188527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d060205261099273ffffffffffffffffffffffffffffffffffffffff828a2092878b527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d16020528a209254163314611812565b61099d86151561148f565b54146111ae565b611671565b5090346101c8576109b9366110b4565b8286949294526020907f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d0825285872090610a0b73ffffffffffffffffffffffffffffffffffffffff8354163314611812565b6003889201915b818110610a1d578880f35b610a288183896113ea565b610a3181611429565b89517fffffffff0000000000000000000000000000000000000000000000000000000090911686820190815282870135600482015290610a74816024840161043c565b519020808b5284865260ff8a8c20541615610af7576060610af293927f5151d310b0333d894aac0234a4665be715d061a6fbf0f84ce313f315a8272dce928d528688528b8d207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690556106568c51918b835289830190611456565b610a12565b606487878c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4566666563746f722020646f65736e27742065786973740000000000000000006044820152fd5b5090346101c857602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610efe578135928385527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d2815281852090600182015493825473ffffffffffffffffffffffffffffffffffffffff80821694610bdf881515611213565b8515610ea257878a527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d18552868a209283548b527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d08652878b209288517f8da5cb5b000000000000000000000000000000000000000000000000000000008152878188818c5afa908115610e98578d91610e5e575b5081163314908115610e51575b5015610dcf577fffffffffffffffffffffffff0000000000000000000000000000000000000000169055610cb88860028401611a9d565b828083015415610dbb575b505050823b15610db7578351907f3591187c0000000000000000000000000000000000000000000000000000000082528681830152878260248183885af18015610dad57610d44575b877f6983825ddd0ff30e17c7440c471db0e0560aa4e82049070656ac24c241959c24606089898989898251948552840152820152a180f35b67ffffffffffffffff8298939811610d815750835294817f6983825ddd0ff30e17c7440c471db0e0560aa4e82049070656ac24c241959c24610d0c565b8260416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85513d8a823e3d90fd5b8680fd5b610dc792549101611a9d565b388082610cc3565b608485878a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603a60248201527f4f6e6c79206465616c206f72206f66666572206f776e65722063616e2072656d60448201527f6f766520636f6d7075746520756e69742066726f6d206465616c0000000000006064820152fd5b8454163314905038610c81565b90508781813d8311610e91575b610e75818361116d565b81010312610e8d57518181168103610e8d5738610c74565b8c80fd5b503d610e6b565b8a513d8f823e3d90fd5b606484868951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f436f6d7075746520756e697420616c72656164792066726565000000000000006044820152fd5b8380fd5b5090346101c857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c85735906024359173ffffffffffffffffffffffffffffffffffffffff92838116809103610ff65760027f69320c1eb39a752844ba207d2f98bd240d07dabf1449b4c1bd432daea12b744a948387527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d0602052610fb4858820918254163314611812565b610fbf831515611303565b01817fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905582519182526020820152a180f35b8480fd5b8382346105025773ffffffffffffffffffffffffffffffffffffffff611059611022366110b4565b92919390948487527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d0602052862054163314611812565b835b818110611066578480f35b806103ab61107861107e9385886113ea565b8561151a565b61105b565b9181601f840112156105065782359167ffffffffffffffff8311610506576020808501948460061b01011161050657565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83011261050657600435916024359067ffffffffffffffff82116105065761110291600401611083565b9091565b6040810190811067ffffffffffffffff82111761112257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761112257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761112257604052565b156111b557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f5065657220646f65736e277420657869737400000000000000000000000000006044820152fd5b1561121a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6d7075746520756e697420646f65736e27742065786973740000000000006044820152fd5b1561127f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4d696e207072696365207065722065706f63682073686f756c6420626520677260448201527f6561746572207468616e203000000000000000000000000000000000000000006064820152fd5b1561130a57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5061796d656e7420746f6b656e2073686f756c64206265206e6f74207a65726f60448201527f20616464726573730000000000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113bb5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908110156113fa5760061b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b357fffffffff00000000000000000000000000000000000000000000000000000000811681036105065790565b80357fffffffff000000000000000000000000000000000000000000000000000000008116809103610506578252602090810135910152565b1561149657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4672656520756e6974732073686f756c6420626520677265617465722074686160448201527f6e203000000000000000000000000000000000000000000000000000000000006064820152fd5b90816000527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d0602052604060002090803591826000527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d160205260406000209182546115e15760016004936115d76115df976020889501359485916115a083151561148f565b8085557fd12c3db3da1a8e27404014e648f19ead8efee50804d9378b1c8df1c2d718f82d60408051838152846020820152a1611671565b015501611a9d565b565b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5065657220616c72656164792065786973747320696e20616e6f74686572206f60448201527f66666572000000000000000000000000000000000000000000000000000000006064820152fd5b919082018092116113bb57565b92916000938285526020907f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d18252604090818720906001928383019687549560028b9501945b8881106116d557505050505050506116d192939450611664565b9055565b6116df8882611664565b8451838101878152858783015260609283830152828252608082019082821067ffffffffffffffff8311176117e457918f918b6117df96959373ffffffffffffffffffffffffffffffffffffffff8b60a07fdd6ab8e783a793065697ec55221b3dfd83373950281b5415121481a54bc074ea98868352875190209661176387611106565b84875201928c84528681527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d28c52209351167fffffffffffffffffffffffff0000000000000000000000000000000000000000845416178355519101556117ca818b611a9d565b875190898252878783015288820152a161138e565b6116b7565b5060248f7f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b1561181957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c79206f776e65722063616e206368616e6765206f6666657200000000006044820152fd5b8015611a3f5760008181527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cf90816020526020604082206040516118ba81611106565b6001825492838352015492839101521590811591611a35575b508015611a0b575b80156119e1575b611983577f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cd918254907f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5ce611936815461138e565b905584821561195b579060409392916001955585835260205280838320558152200155565b7f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cc5550505055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b657920616c72656164792065786973747300000000000000000000000000006044820152fd5b507f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cd5483146118e2565b507f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cc5483146118db565b90501515386118d3565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b65792063616e6e6f74206265205a45524f00000000000000000000000000006044820152fd5b8115611a3f57600381019060009083825282602052602060408320604051611ac481611106565b6001825492838352015492839101521590811591611b4a575b508015611b40575b8015611b33575b6119835760018101928484549260028101611b07815461138e565b90558315611b2c57509060409392916001955585835260205280838320558152200155565b5550505055565b5060018101548414611aec565b5080548414611ae5565b9050151538611add56fea2646970667358221220d7076b67fa029ca4c30072c14f6835c29462e6fb7ed0c87e50a6b35f00640a5b64736f6c63430008130033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Market & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Market__factory {
    return super.connect(runner) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new Interface(_abi) as MarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Market {
    return new Contract(address, _abi, runner) as unknown as Market;
  }
}
