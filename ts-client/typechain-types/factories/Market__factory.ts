/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Market, MarketInterface } from "../Market";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
    ],
    name: "ComputeUnitAddedToDeal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "ComputeUnitCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
    ],
    name: "ComputeUnitRemovedFromDeal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "EffectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "EffectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
    ],
    name: "MarketOfferRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
    ],
    name: "MinPricePerEpochUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
    ],
    name: "PeerCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "freeUnits",
            type: "uint256",
          },
        ],
        internalType: "struct Market.RegisterComputePeer[]",
        name: "peers",
        type: "tuple[]",
      },
    ],
    name: "addComputePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "newEffectors",
        type: "tuple[]",
      },
    ],
    name: "addEffector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "freeUnits",
        type: "uint256",
      },
    ],
    name: "addFreeUnits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newMinPricePerWorkerEpoch",
        type: "uint256",
      },
    ],
    name: "changeMinPricePerWorkerEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "changePaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "getComputeUnit",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "deal",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
        ],
        internalType: "struct Market.ComputeUnit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
    ],
    name: "getOffer",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minPricePerWorkerEpoch",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Market.OfferInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
    ],
    name: "getPeer",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "offerId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nextUnitIndex",
            type: "uint256",
          },
        ],
        internalType: "struct Market.ComputePeerInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "freeUnits",
            type: "uint256",
          },
        ],
        internalType: "struct Market.RegisterComputePeer[]",
        name: "peers",
        type: "tuple[]",
      },
    ],
    name: "registerMarketOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
    ],
    name: "removeEffector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "returnComputeUnitFromDeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611b7b908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c806306c64ef914610fec578063087b97ba14610ef857806314afcd5214610b6f57806334205efd146109c5578063407a02a4146108f45780634ca26bd81461084f578063745e920b14610795578063a963e5f4146106d6578063b017191a14610524578063b3f25975146101cc5763d597b8c81461009957600080fd5b346101c857602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c5578082918280516100d981611143565b82815282888201520152833581527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d085522073ffffffffffffffffffffffffffffffffffffffff9081815416938415610169575060609483519161013c83611143565b85835284846002600184015493858701948552015416930192835284519586525190850152511690820152f35b606490868551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f4f6666657220646f65736e2774206578697374000000000000000000000000006044820152fd5b80fd5b8280fd5b5090346101c85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c85780359060243560443573ffffffffffffffffffffffffffffffffffffffff9384821680920361051f5767ffffffffffffffff9160643583811161051b576102479036908701611075565b949096896084359586116101c5576102638a9636908a01611075565b98909286835260027f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d09c8d9460209e8f52200154166104bf57506102ac8398979698151561126a565b6102b78415156112f5565b848b528952868a2095838880516102cd81611143565b338152858d82015201527fffffffffffffffffffffffff0000000000000000000000000000000000000000963388825416178155600197848983015585600283019182541617905560038c9101905b8c8c8c8a84106103e55750509150505b8181106103bb575050509082916103438594611868565b86519860a08a01938a5233908a015286890152606088015260a060808801525260c085019392865b82811061039c57877f12c115c98040e6fee3452d9bcafb93b0c1db60d3c07d88b04f1d767dbc0d741b88880389a180f35b9091928280876103ae88998599611448565b019601949392910161036b565b806103d76103d16103dc9385879d9b9c9d6113dc565b8861150c565b611380565b9796959761032c565b918482848d9e9f9d6104828f966104188a8461041261040d836104b69f9e98610456996113dc565b61141b565b966113dc565b01358751928391868301958690917fffffffff0000000000000000000000000000000000000000000000000000000060249316825260048201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528261115f565b519020835252208b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055611380565b9897969861031c565b6064908b8851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601460248201527f4f6666657220616c7265616479206578697374730000000000000000000000006044820152fd5b8880fd5b600080fd5b5090346101c857610534366110a6565b8286949294526020907f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d082528587209061058673ffffffffffffffffffffffffffffffffffffffff8354163314611803565b6003889201915b818110610598578880f35b6105a38183896113dc565b6105ac8161141b565b89517fffffffff00000000000000000000000000000000000000000000000000000000909116868201908152828701356004820152906105ef8160248401610456565b519020808b5284865260ff8a8c20541661067a57606061067593927f3c96a39027441c49cc91433cc2f6a915b4aa9be8119e89e1ee6700fe60eb2531928d528688528b8d2060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905561066f8c51918b835289830190611448565ba1611380565b61058d565b606487878c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4566666563746f7220616c7265616479206578697374730000000000000000006044820152fd5b50346101c857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c8577fdd848dc9639c1bd25e20cfc64807b34179257bd6236df1e88b957e369d70bdeb91356024358185527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d060205280600184872061077a73ffffffffffffffffffffffffffffffffffffffff8254163314611803565b61078583151561126a565b015582519182526020820152a180f35b5090346101c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c8579181926000602084516107d8816110f8565b82815201523581527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d2602052206001810154610815811515611205565b602073ffffffffffffffffffffffffffffffffffffffff845193610838856110f8565b541692838152019081528251918252516020820152f35b5090346101c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c857918192600060208451610892816110f8565b82815201523581527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d1602052208054906108cd8215156111a0565b602060018451926108dd846110f8565b848452015491019081528251918252516020820152f35b50346101c85760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c8576109c29135602435906109bd81604435948188527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d06020526109ab73ffffffffffffffffffffffffffffffffffffffff828a2092878b527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d16020528a209254163314611803565b6109b6861515611481565b54146111a0565b611662565b80f35b5090346101c8576109d5366110a6565b8286949294526020907f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d0825285872090610a2773ffffffffffffffffffffffffffffffffffffffff8354163314611803565b6003889201915b818110610a39578880f35b610a448183896113dc565b610a4d8161141b565b89517fffffffff0000000000000000000000000000000000000000000000000000000090911686820190815282870135600482015290610a908160248401610456565b519020808b5284865260ff8a8c20541615610b13576060610b0e93927f5151d310b0333d894aac0234a4665be715d061a6fbf0f84ce313f315a8272dce928d528688528b8d207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905561066f8c51918b835289830190611448565b610a2e565b606487878c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4566666563746f722020646f65736e27742065786973740000000000000000006044820152fd5b50829034610ef4576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c8578335908184527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d281528284209060018201549180549073ffffffffffffffffffffffffffffffffffffffff9081831694610bfd811515611205565b8515610e985788527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d1845286882092835489527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d085528789209288517f8da5cb5b00000000000000000000000000000000000000000000000000000000815286818d818b5afa908115610e8e578b91610e54575b5081163314908115610e47575b5015610dc5577fffffffffffffffffffffffff0000000000000000000000000000000000000000169055610cd58560028401611a8e565b878083015415610db1575b505050813b15610dad5783517f3591187c0000000000000000000000000000000000000000000000000000000081528387820152858160248183875af18015610da357610d59575b507f0949a6ca0219ff7334382963d882dbfcb7c4a5253671a89e4227f965bdae8caf9495508351928352820152a180f35b67ffffffffffffffff8196929611610d775784529394508486610d28565b6024826041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85513d88823e3d90fd5b8480fd5b610dbd92549101611a8e565b868087610ce0565b60848a868a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603a60248201527f4f6e6c79206465616c206f72206f66666572206f776e65722063616e2072656d60448201527f6f766520636f6d7075746520756e69742066726f6d206465616c0000000000006064820152fd5b845416331490508b610c9e565b90508681813d8311610e87575b610e6b818361115f565b81010312610e8357518181168103610e83578c610c91565b8a80fd5b503d610e61565b8a513d8d823e3d90fd5b60648a868a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f436f6d7075746520756e697420616c72656164792066726565000000000000006044820152fd5b5080fd5b5090346101c857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101c85735906024359173ffffffffffffffffffffffffffffffffffffffff92838116809103610dad5760027f69320c1eb39a752844ba207d2f98bd240d07dabf1449b4c1bd432daea12b744a948387527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d0602052610faa858820918254163314611803565b610fb58315156112f5565b01817fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905582519182526020820152a180f35b838234610ef45773ffffffffffffffffffffffffffffffffffffffff61104b611014366110a6565b92919390948487527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d0602052862054163314611803565b835b818110611058578480f35b806103d761106a6110709385886113dc565b8561150c565b61104d565b9181601f8401121561051f5782359167ffffffffffffffff831161051f576020808501948460061b01011161051f57565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83011261051f57600435916024359067ffffffffffffffff821161051f576110f491600401611075565b9091565b6040810190811067ffffffffffffffff82111761111457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761111457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761111457604052565b156111a757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f5065657220646f65736e277420657869737400000000000000000000000000006044820152fd5b1561120c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6d7075746520756e697420646f65736e27742065786973740000000000006044820152fd5b1561127157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4d696e207072696365207065722065706f63682073686f756c6420626520677260448201527f6561746572207468616e203000000000000000000000000000000000000000006064820152fd5b156112fc57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5061796d656e7420746f6b656e2073686f756c64206265206e6f74207a65726f60448201527f20616464726573730000000000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113ad5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908110156113ec5760061b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b357fffffffff000000000000000000000000000000000000000000000000000000008116810361051f5790565b80357fffffffff00000000000000000000000000000000000000000000000000000000811680910361051f578252602090810135910152565b1561148857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4672656520756e6974732073686f756c6420626520677265617465722074686160448201527f6e203000000000000000000000000000000000000000000000000000000000006064820152fd5b90816000527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d06020526040600020918135806000527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d160205260406000209384546115d2578160046115c5927fd12c3db3da1a8e27404014e648f19ead8efee50804d9378b1c8df1c2d718f82d97600160206040990135916115af831515611481565b8881556115bd83878b611662565b015501611a8e565b82519182526020820152a1565b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5065657220616c72656164792065786973747320696e20616e6f74686572206f60448201527f66666572000000000000000000000000000000000000000000000000000000006064820152fd5b919082018092116113ad57565b92916000938285526020907f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d18252604090818720906001928383019687549560028b9501945b8881106116c657505050505050506116c292939450611655565b9055565b6116d08882611655565b8451838101878152858783015260609283830152828252608082019082821067ffffffffffffffff8311176117d557918f918b6117d096959373ffffffffffffffffffffffffffffffffffffffff8b60a07fdd6ab8e783a793065697ec55221b3dfd83373950281b5415121481a54bc074ea988683528751902096611754876110f8565b84875201928c84528681527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5d28c52209351167fffffffffffffffffffffffff0000000000000000000000000000000000000000845416178355519101556117bb818b611a8e565b875190898252878783015288820152a1611380565b6116a8565b5060248f7f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b1561180a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c79206f776e65722063616e206368616e6765206f6666657200000000006044820152fd5b8015611a305760008181527f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cf90816020526020604082206040516118ab816110f8565b6001825492838352015492839101521590811591611a26575b5080156119fc575b80156119d2575b611974577f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cd918254907f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5ce6119278154611380565b905584821561194c579060409392916001955585835260205280838320558152200155565b7f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cc5550505055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b657920616c72656164792065786973747300000000000000000000000000006044820152fd5b507f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cd5483146118d3565b507f7a82a01b4befb2d99affa3487eb2b54309c2b0052f27b0f482206420f687f5cc5483146118cc565b90501515386118c4565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b65792063616e6e6f74206265205a45524f00000000000000000000000000006044820152fd5b8115611a3057600381019060009083825282602052602060408320604051611ab5816110f8565b6001825492838352015492839101521590811591611b3b575b508015611b31575b8015611b24575b6119745760018101928484549260028101611af88154611380565b90558315611b1d57509060409392916001955585835260205280838320558152200155565b5550505055565b5060018101548414611add565b5080548414611ad6565b9050151538611ace56fea26469706673582212209dcb705703e6a16f7f0fb5fb1fbb70f41611ea51e70c48da1dce48563daa403e64736f6c63430008130033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Market & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Market__factory {
    return super.connect(runner) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new Interface(_abi) as MarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Market {
    return new Contract(address, _abi, runner) as unknown as Market;
  }
}
