/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Market, MarketInterface } from "../Market";

const _abi = [
  {
    type: "function",
    name: "PRECISION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addComputePeers",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "peers",
        type: "tuple[]",
        internalType: "struct Market.RegisterComputePeer[]",
        components: [
          {
            name: "peerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "freeUnits",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addComputeUnits",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "peerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "freeUnits",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addEffector",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "newEffectors",
        type: "tuple[]",
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeMinPricePerWorkerEpoch",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "newMinPricePerWorkerEpoch",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changePaymentToken",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "newPaymentToken",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralPerUnit",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "currentEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "epochDuration",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fltPrice",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fluenceToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getComputeUnit",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Market.ComputeUnit",
        components: [
          {
            name: "index",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deal",
            type: "address",
            internalType: "address",
          },
          {
            name: "peerId",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOffer",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Market.OfferInfo",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "minPricePerWorkerEpoch",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "paymentToken",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPeer",
    inputs: [
      {
        name: "peerId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Market.ComputePeerInfo",
        components: [
          {
            name: "offerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "commitmentId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "unitCount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxCCProofs",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxCapacityRewardPerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxFailedRatio",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minCapacityCommitmentDuration",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minCapacityRewardPerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minDepositedEpoches",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minRematchingEpoches",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minRequierdCCProofs",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerMarketOffer",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "minPricePerWorkerEpoch",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "paymentToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "effectors",
        type: "tuple[]",
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "peers",
        type: "tuple[]",
        internalType: "struct Market.RegisterComputePeer[]",
        components: [
          {
            name: "peerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "freeUnits",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeComputeUnit",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "lastUnitId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeEffector",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "effectors",
        type: "tuple[]",
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "returnComputeUnitFromDeal",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setConstant",
    inputs: [
      {
        name: "constantType",
        type: "uint8",
        internalType: "enum IGlobalConst.Constant",
      },
      {
        name: "v",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "slashingRate",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetRevenuePerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "vestingDuration",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdrawCCEpochesAfterFailed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ComputeUnitAddedToDeal",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "deal",
        type: "address",
        indexed: false,
        internalType: "contract IDeal",
      },
      {
        name: "peerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ComputeUnitCreated",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "peerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ComputeUnitRemovedFromDeal",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "deal",
        type: "address",
        indexed: false,
        internalType: "contract IDeal",
      },
      {
        name: "peerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ConstantsUpdated",
    inputs: [
      {
        name: "constantType",
        type: "uint8",
        indexed: false,
        internalType: "enum IGlobalConst.Constant",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EffectorAdded",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "effector",
        type: "tuple",
        indexed: false,
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EffectorRemoved",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "effector",
        type: "tuple",
        indexed: false,
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MarketOfferRegistered",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "minPricePerWorkerEpoch",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "paymentToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "effectors",
        type: "tuple[]",
        indexed: false,
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MinPricePerEpochUpdated",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "minPricePerWorkerEpoch",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaymentTokenUpdated",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "paymentToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PeerCreated",
    inputs: [
      {
        name: "offerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "peerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608080604052346100165761303b908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c806306c64ef91461235c578063087b97ba1461226857806313baa0691461220c57806314afcd5214611e325780631514617e14611dd657806321b4093e146119e957806334205efd1461183f5780633a49cf48146117e357806342e14eb2146117875780634ca26bd8146116d95780634ff0876a1461167d5780635a5b8107146116215780635ff24491146115c557806369e9f4bb14611569578063715018a6146114aa5780637358c57a1461144e578063745e920b1461138857806376671808146112665780638da5cb5b146111f4578063a376fb9114611198578063a963e5f4146110d9578063aaf5eb681461109e578063ac027f971461102c578063b017191a14610e7a578063b3f2597514610b47578063bbae14b514610aeb578063d597b8c8146109c7578063d6f563d81461055e578063db46d20514610502578063df238721146104a6578063e989ce8a1461044a578063f26c329b146103ee578063f2fde38b146102e3578063f44e553e146102835763f5c4c9dd146101a157600080fd5b3461027f5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027f5761027c9135602435906102776001604435948388527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591560205261025873ffffffffffffffffffffffffffffffffffffffff828a2092878b527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759166020528a209254163314612bb3565b61026386151561281d565b61026f8482541461256b565b015415612c18565b612a14565b80f35b8280fd5b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150324549051908152f35b5080fd5b503461027f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027f5781359173ffffffffffffffffffffffffffffffffffffffff918284168094036103e95761033e612f95565b83156103ba5750507fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b600080fd5b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031f549051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031b549051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031a549051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031e549051908152f35b508290346102df57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df578235600e81101561027f576024356105a5612f95565b6000918061063357817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150319555b835192610607577f2e1ab86f1064ccfa48a8bdbdac5c07e8da91d61e58f10bdba0e53257c0d7294394955082526020820152a180f35b6024856021887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6001810361066357817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031a556105d1565b600092506002810361069757817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031b556105d1565b600381036106c757817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031c556105d1565b600092508581036106fa57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031d556105d1565b6005810361072a57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031e556105d1565b600092506006810361075e57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031f556105d1565b6007810361078e57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150320556105d1565b600092506008810361084c577f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032180546107c9578290556105d1565b60848760208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f476c6f62616c436f6e73743a2076657374696e67206475726174696f6e20616c60448201527f72656164792073657400000000000000000000000000000000000000000000006064820152fd5b6009810361087c57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150322556105d1565b60009250600a81036108b057817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150326556105d1565b600b81036108e057817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150323556105d1565b60009250600c810361091457817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150324556105d1565b600d810361094457817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150325556105d1565b60848660208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f476c6f62616c436f6e73743a20756e6b6e6f776e20636f6e7374616e7420747960448201527f70650000000000000000000000000000000000000000000000000000000000006064820152fd5b509134610ae85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610ae8578290610a0261254c565b50823581527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975915602052209173ffffffffffffffffffffffffffffffffffffffff80845416928315610a8b57508151606094610a5c826124ef565b848252838360026001840154936020860194855201541692019182528351948552516020850152511690820152f35b60649060208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f4f6666657220646f65736e2774206578697374000000000000000000000000006044820152fd5b80fd5b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031c549051908152f35b50903461027f5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027f578035916024356044359173ffffffffffffffffffffffffffffffffffffffff928381168091036103e95767ffffffffffffffff91876064358481116102df57610bc490369089016123e5565b93909460843590811161027f57610bde9036908a016123e5565b9790988a84527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759159160028660209685885220015416610e1e5750610c23871515612635565b610c2e8215156126c0565b898b528252828a2081848051610c43816124ef565b338152898682015201527fffffffffffffffffffffffff0000000000000000000000000000000000000000338183541617825587600183015582600283019182541617905560038b9101905b858110610d4c575050908392939184519660a08801928b8952339089015285880152606087015260a060808701525260c084019291885b828110610d2d575050505090807f12c115c98040e6fee3452d9bcafb93b0c1db60d3c07d88b04f1d767dbc0d741b920390a1835b818110610d0b578461027c85612ca8565b80610d23610d1d610d28938587612778565b866128a8565b61274b565b610cfa565b90919293828082610d40600194896127e4565b01950193929101610cc6565b8087610db4610de087610d76858c610d70610d6b610e199a838a612778565b6127b7565b96612778565b013589519283918a8301958690917fffffffff0000000000000000000000000000000000000000000000000000000060249316825260048201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528261250b565b5190208d52828552858d2060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905561274b565b610c8f565b606490848651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601460248201527f4f6666657220616c7265616479206578697374730000000000000000000000006044820152fd5b50903461027f57610e8a36612416565b8286949294526020907f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975915825285872090610edc73ffffffffffffffffffffffffffffffffffffffff8354163314612bb3565b6003889201915b818110610eee578880f35b610ef9818389612778565b610f02816127b7565b89517fffffffff0000000000000000000000000000000000000000000000000000000090911686820190815282870135600482015290610f458160248401610db4565b519020808b5284865260ff8a8c205416610fd0576060610fcb93927f3c96a39027441c49cc91433cc2f6a915b4aa9be8119e89e1ee6700fe60eb2531928d528688528b8d2060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055610fc58c51918b8352898301906127e4565ba161274b565b610ee3565b606487878c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4566666563746f7220616c7265616479206578697374730000000000000000006044820152fd5b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df5760209073ffffffffffffffffffffffffffffffffffffffff7f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031854169051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df57602090516127108152f35b503461027f57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027f577fdd848dc9639c1bd25e20cfc64807b34179257bd6236df1e88b957e369d70bdeb91356024358185527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591560205280600184872061117d73ffffffffffffffffffffffffffffffffffffffff8254163314612bb3565b611188831515612635565b015582519182526020820152a180f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150326549051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df5760209073ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc54169051908152f35b508290346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df577f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd35754420342811161135a577f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd3585490811561132e57046001019182600111611302576020838351908152f35b806011857f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b6024846012877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6011847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b50903461027f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027f5760609282916113c661254c565b503581527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975917602052209060028201546114008115156125d0565b6001825161140d816124ef565b8385549586835273ffffffffffffffffffffffffffffffffffffffff9384910154169160208101928352019283528351948552511660208401525190820152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd357549051908152f35b8334610ae857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610ae8576114e1612f95565b600073ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc8054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150325549051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031d549051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150323549051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd358549051908152f35b50903461027f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027f57606092829161171761254c565b503581527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975916602052209081549161174f83151561256b565b81519061175b826124ef565b838252826002600183015492602085019384520154920191825282519384525160208401525190820152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150319549051908152f35b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150320549051908152f35b50903461027f5761184f36612416565b8286949294526020907f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759158252858720906118a173ffffffffffffffffffffffffffffffffffffffff8354163314612bb3565b6003889201915b8181106118b3578880f35b6118be818389612778565b6118c7816127b7565b89517fffffffff000000000000000000000000000000000000000000000000000000009091168682019081528287013560048201529061190a8160248401610db4565b519020808b5284865260ff8a8c2054161561198d57606061198893927f5151d310b0333d894aac0234a4665be715d061a6fbf0f84ce313f315a8272dce928d528688528b8d207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055610fc58c51918b8352898301906127e4565b6118a8565b606487878c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4566666563746f722020646f65736e27742065786973740000000000000000006044820152fd5b508290346102df57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df5782358083527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759176020948186528385206024358652848620906002810154938488527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759168952868820805489527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759158a5273ffffffffffffffffffffffffffffffffffffffff9485898b2054163303611d5457600194611ada8684015415612c18565b600283019081549080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830190838211611d285703611ca65786549055611b2190612c7d565b905560038201906006830191898c52828d528c8b8d2091888d5193611b45856124a4565b805485520154918301918252611b5c8c8483612f52565b15611c4957978c8e9f959e7f6983825ddd0ff30e17c7440c471db0e0560aa4e82049070656ac24c241959c249f8e600597611c1d9f9e9d97600097879e9d9c99825180158b14611c355750815190555b5180158914611c23575051908801555b8252875220828155015501611bd18154612c7d565b9055878b525260006002888b208281558b85820155015501541693519384938473ffffffffffffffffffffffffffffffffffffffff604092959493606083019683521660208201520152565b0390a180f35b915051908452828a5284842055611bbc565b8251908852868e528888208a015550611bac565b506064838f8e51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601260248201527f4b657920646f6573206e6f7420657869737400000000000000000000000000006044820152fd5b6084848f8e51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f4c61737420756e6974206964206973206e6f74206c61737420756e697420696e60448201527f20706565720000000000000000000000000000000000000000000000000000006064820152fd5b60248f6011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6084908b8a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f4f6e6c79206f776e65722063616e2072656d6f766520636f6d7075746520756e60448201527f69740000000000000000000000000000000000000000000000000000000000006064820152fd5b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150321549051908152f35b509190346102df57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027f578035908184527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975917835284842090600160028301549201805473ffffffffffffffffffffffffffffffffffffffff9586821696611ec38615156125d0565b87156121b057918893918a938786527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975916825286828b87808a20998a5481527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759158452209751928380927f8da5cb5b0000000000000000000000000000000000000000000000000000000082525afa9081156121a6578c9161216c575b508116331490811561215f575b50156120dd57507fffffffffffffffffffffffff0000000000000000000000000000000000000000169055611fa38560038401612ece565b826005830154156120c9575b505050833b156120c55785517f3591187c0000000000000000000000000000000000000000000000000000000081528382820152858160248183895af180156120bb57612050575b5050935190815273ffffffffffffffffffffffffffffffffffffffff90911660208201526040810192909252907f6983825ddd0ff30e17c7440c471db0e0560aa4e82049070656ac24c241959c24908060608101611c1d565b67ffffffffffffffff81979692971161208f578552939450807f6983825ddd0ff30e17c7440c471db0e0560aa4e82049070656ac24c241959c24611ff7565b6024826041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b87513d88823e3d90fd5b8480fd5b6120d592549101612ece565b388082611faf565b856084918c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603a60248201527f4f6e6c79206465616c206f72206f66666572206f776e65722063616e2072656d60448201527f6f766520636f6d7075746520756e69742066726f6d206465616c0000000000006064820152fd5b8554163314905038611f6b565b90508281813d831161219f575b612183818361250b565b8101031261219b5751818116810361219b5738611f5e565b8b80fd5b503d612179565b8d513d8e823e3d90fd5b606485838c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f436f6d7075746520756e697420616c72656164792066726565000000000000006044820152fd5b8382346102df57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102df576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150322549051908152f35b50903461027f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027f5735906024359173ffffffffffffffffffffffffffffffffffffffff928381168091036120c55760027f69320c1eb39a752844ba207d2f98bd240d07dabf1449b4c1bd432daea12b744a948387527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591560205261231a858820918254163314612bb3565b6123258315156126c0565b01817fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905582519182526020820152a180f35b8382346102df5773ffffffffffffffffffffffffffffffffffffffff6123bb61238436612416565b92919390948487527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975915602052862054163314612bb3565b835b8181106123c8578480f35b80610d236123da6123e0938588612778565b856128a8565b6123bd565b9181601f840112156103e95782359167ffffffffffffffff83116103e9576020808501948460061b0101116103e957565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126103e957600435916024359067ffffffffffffffff82116103e957612464916004016123e5565b9091565b9190820180921161247557565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6040810190811067ffffffffffffffff8211176124c057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176124c057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176124c057604052565b60405190612559826124ef565b60006040838281528260208201520152565b1561257257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f5065657220646f65736e277420657869737400000000000000000000000000006044820152fd5b156125d757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f436f6d7075746520756e697420646f65736e27742065786973740000000000006044820152fd5b1561263c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4d696e207072696365207065722065706f63682073686f756c6420626520677260448201527f6561746572207468616e203000000000000000000000000000000000000000006064820152fd5b156126c757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5061796d656e7420746f6b656e2073686f756c64206265206e6f74207a65726f60448201527f20616464726573730000000000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146124755760010190565b91908110156127885760061b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b357fffffffff00000000000000000000000000000000000000000000000000000000811681036103e95790565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103e9578252602090810135910152565b1561282457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4672656520756e6974732073686f756c6420626520677265617465722074686160448201527f6e203000000000000000000000000000000000000000000000000000000000006064820152fd5b91909160008181526020937f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759158552604094858320928235948582527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759168352878220938454612992579186612989927fd12c3db3da1a8e27404014e648f19ead8efee50804d9378b1c8df1c2d718f82d6129909a9b60028860049b9a9998013598899661295588151561281d565b87848051612962816124ef565b888152838d82015201528582556001820155019685885584825191858352820152a1612a14565b5501612ece565b565b6084848a51907f08c379a000000000000000000000000000000000000000000000000000000000825260048201526024808201527f5065657220616c72656164792065786973747320696e20616e6f74686572206f60448201527f66666572000000000000000000000000000000000000000000000000000000006064820152fd5b90929160009380855260207f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591681526002604094818689200195865494895b878110612a6f57505050505050612a6b92939450612468565b9055565b82518681014381528585830152606091848382015260808481830152815260a0810181811067ffffffffffffffff821117612b86578652519020612b8192917fdd6ab8e783a793065697ec55221b3dfd83373950281b5415121481a54bc074ea918e898b612add878f612468565b928a5193612aea856124ef565b84528a828501918083527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975917828701948d865288835252209351845573ffffffffffffffffffffffffffffffffffffffff600185019151167fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905551910155865190888252868b83015287820152a161274b565b612a52565b60248f7f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b15612bba57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c79206f776e65722063616e206368616e6765206f6666657200000000006044820152fd5b15612c1f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f506565722068617320636f6d6d69746d656e74000000000000000000000000006044820152fd5b8015612475577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b8015612e705760008181527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759149081602052602060408220604051612ceb816124a4565b6001825492838352015492839101521590811591612e66575b508015612e3c575b8015612e12575b612db4577f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975912918254907f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975913612d67815461274b565b9055848215612d8c579060409392916001955585835260205280838320558152200155565b7f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759115550505055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b657920616c72656164792065786973747300000000000000000000000000006044820152fd5b507f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975912548314612d13565b507f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975911548314612d0c565b9050151538612d04565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b65792063616e6e6f74206265205a45524f00000000000000000000000000006044820152fd5b8115612e7057600381019060009083825282602052612f0b8460408420600160405191612efa836124a4565b805483520154602082015283612f52565b612db45760018101928484549260028101612f26815461274b565b90558315612f4b57509060409392916001955585835260205280838320558152200155565b5550505055565b8151158015939290612f87575b508215612f7c575b8215612f7257505090565b6001015414919050565b805482149250612f67565b602001511515925038612f5f565b73ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc54163303612fd557565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea2646970667358221220a7248262f63682e810842b5f1307fcf323a2669695aaa7b8d9befc88522b875d64736f6c63430008130033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Market & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Market__factory {
    return super.connect(runner) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new Interface(_abi) as MarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Market {
    return new Contract(address, _abi, runner) as unknown as Market;
  }
}
