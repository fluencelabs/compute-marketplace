/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { Matcher, MatcherInterface } from "../Matcher";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
    ],
    name: "ComputeUnitAddedToDeal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "ComputeUnitCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dealCreationBlock",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "appCID",
        type: "tuple",
      },
    ],
    name: "ComputeUnitMatched",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
    ],
    name: "ComputeUnitRemovedFromDeal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum GlobalConst.Constant",
        name: "constantType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ConstantsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "EffectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "EffectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
    ],
    name: "MarketOfferRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
    ],
    name: "MinPricePerEpochUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
    ],
    name: "PeerCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "freeUnits",
            type: "uint256",
          },
        ],
        internalType: "struct Market.RegisterComputePeer[]",
        name: "peers",
        type: "tuple[]",
      },
    ],
    name: "addComputePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "newEffectors",
        type: "tuple[]",
      },
    ],
    name: "addEffector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "freeUnits",
        type: "uint256",
      },
    ],
    name: "addFreeUnits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newMinPricePerWorkerEpoch",
        type: "uint256",
      },
    ],
    name: "changeMinPricePerWorkerEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "changePaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fluenceToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "getComputeUnit",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "deal",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
        ],
        internalType: "struct Market.ComputeUnit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
    ],
    name: "getOffer",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minPricePerWorkerEpoch",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Market.OfferInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
    ],
    name: "getPeer",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "offerId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastUnitIndex",
            type: "uint256",
          },
        ],
        internalType: "struct Market.ComputePeerInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
    ],
    name: "matchDeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minDepositedEpoches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRematchingEpoches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "freeUnits",
            type: "uint256",
          },
        ],
        internalType: "struct Market.RegisterComputePeer[]",
        name: "peers",
        type: "tuple[]",
      },
    ],
    name: "registerMarketOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
    ],
    name: "removeEffector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "returnComputeUnitFromDeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum GlobalConst.Constant",
        name: "constantType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "setConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class Matcher__factory {
  static readonly abi = _abi;
  static createInterface(): MatcherInterface {
    return new Interface(_abi) as MatcherInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Matcher {
    return new Contract(address, _abi, runner) as unknown as Matcher;
  }
}
