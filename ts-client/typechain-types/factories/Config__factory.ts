/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Config, ConfigInterface } from "../Config";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "newAppCID",
        type: "tuple",
      },
    ],
    name: "AppCIDChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "accessType",
    outputs: [
      {
        internalType: "enum IConfig.AccessType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "appCID",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IConfig.AccessType",
        name: "accessType_",
        type: "uint8",
      },
    ],
    name: "changeAccessType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "effectors",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccessList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isInAccessList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWorkersPerProvider",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerWorkerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "removeFromAccessList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "appCID_",
        type: "tuple",
      },
    ],
    name: "setAppCID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610c3e908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600060e0918135831c908163055236f4146109e157816314d3b7671461083a57816317634514146107fc578163176474cf146107425781632943dcab146107045781632db31193146106c65781633013ce291461067e5781636cd1344814610640578163715018a6146105d65781637878e81b146105805781638a0c725b146105425781638d5ddbb3146103d35781638da5cb5b1461039d5781639bc6686814610309578163b55ec18a146102a7578163f2fde38b14610204575063fc1e5e2a146100de57600080fd5b3461020157806003193601126102015782907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0e90815461012561012082610ac8565b610aa2565b9080825260209586830190819585527f41d22fcf61f8b32ca910e56247176ffedb9dcd2ae76207e235d37179490c642c9085925b8484106101c2575050505050835194859481860192828752518093528086019493905b8382106101895786860387f35b9184965082866101b260019496988498516020809163ffffffff60e01b81511684520151910152565b019601920186959492939161017c565b60028a6001926101d69c99989a9b9c610a6c565b63ffffffff60e01b8754871b1681528487015483820152815201930193019291989796949598610159565b80fd5b905083346102a35760203660031901126102a3576001600160a01b0382358181169391929084900361029f57610238610baf565b8315610289575050600080516020610be983398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b82853461030557816003193601126103055760ff7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0f541690519160038210156102f257602083838152f35b634e487b7160e01b815260218452602490fd5b5080fd5b5050346102015780600319360112610201576020610325610a6c565b8281520152610332610a6c565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d065490911b6001600160e01b0319168082527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0754602092830190815283519182525191810191909152f35b828534610305578160031936011261030557600080516020610be98339815191525490516001600160a01b039091168152602090f35b8483346102015780600319360112610201577f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d125461041361012082610ac8565b81815292601f198061042484610ac8565b019260209336858801377f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d105485905b8282106104fb5750505084519261047861046f61012086610ac8565b94808652610ac8565b8482019201368337845b86518110156104b257806104996104ad9289610b05565b5160601c6104a78288610b05565b52610ae0565b610482565b509190848483519485948186019282875251809352850193925b8281106104db57505050500390f35b83516001600160a01b0316855286955093810193928101926001016104cc565b80610506838a610b05565b5286527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d13855261053c6001858820015491610ae0565b90610453565b8285346103055781600319360112610305576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0c549051908152f35b90503461030557602036600319011261030557356003811015610305576105a5610baf565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0f9060ff8019835416911617905580f35b82346102015780600319360112610201576105ef610baf565b600080516020610be983398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8285346103055781600319360112610305576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0d549051908152f35b8285346103055781600319360112610305577f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d085490516001600160a01b039091168152602090f35b8285346103055781600319360112610305576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0a549051908152f35b8285346103055781600319360112610305576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0b549051908152f35b83858492346107f857816003193601126107f85761075e610baf565b35916001600160e01b031983169081840361029f577fc820a66d3bdd50a45cf12cda6dc8ec9e94fb5123edd7da736eea18316f8523a0937f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d06911c63ffffffff19825416179055602435807f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d075582519182526020820152a180f35b8380fd5b8285346103055781600319360112610305576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d05549051908152f35b905083346102a3576020806003193601126107f85782356001600160a01b038116810361029f57610869610baf565b6bffffffffffffffffffffffff199060601b16908185527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d139182825283862060016108b2610a6c565b918054835201548382019081526108c98383610b2f565b156109a95791816001959389979593518015600014610996575080517f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d10555b51806109855750517f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d11555b855252822082815501557f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d12908154908115610972575060001901905580f35b634e487b7160e01b845260119052602483fd5b905190875283835284872055610933565b815190895285855287878a200155610908565b855162461bcd60e51b8152808801859052601260248201527112d95e48191bd95cc81b9bdd08195e1a5cdd60721b6044820152606490fd5b849150346102a35760203660031901126102a357356001600160a01b03811681036102a35760209282610a63926bffffffffffffffffffffffff199060601b16918281527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d138652206001610a53610a6c565b9180548352015485820152610b2f565b90519015158152f35b604051906040820182811067ffffffffffffffff821117610a8c57604052565b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff811183821017610a8c57604052565b67ffffffffffffffff8111610a8c5760051b60200190565b6000198114610aef5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015610b195760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9081511591821592610ba1575b508115610b76575b8115610b4e575090565b90507f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d11541490565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d105481149150610b44565b602001511515915038610b3c565b600080516020610be9833981519152546001600160a01b03163303610bd057565b60405163118cdaa760e01b8152336004820152602490fdfec43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb80a26469706673582212202f9866b14846a7393c5cd2d85d751a0d06d7663aac56136e393ddb23683b3ac664736f6c63430008130033";

type ConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Config__factory extends ContractFactory {
  constructor(...args: ConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Config & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Config__factory {
    return super.connect(runner) as Config__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigInterface {
    return new Interface(_abi) as ConfigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Config {
    return new Contract(address, _abi, runner) as unknown as Config;
  }
}
