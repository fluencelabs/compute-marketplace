/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common.js";
import type { GlobalConst, GlobalConstInterface } from "../GlobalConst.js";

const _abi = [
  {
    type: "function",
    name: "PRECISION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ccActiveUnitCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ccMaxFailedRatio",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ccSlashingRate",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ccVestingDuration",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ccWithdrawEpochesAfterFailed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "currentEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "epochDuration",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fltCCCollateralPerUnit",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fltCCTargetRevenuePerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fltPrice",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fluenceToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCCRewardPool",
    inputs: [
      {
        name: "epoch",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxCCProofsPerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxCCRewardPerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minCCDuration",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minCCRequierdProofsPerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minCCRewardPerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minDealDepositedEpoches",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minDealRematchingEpoches",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setCCConstant",
    inputs: [
      {
        name: "constantType",
        type: "uint8",
        internalType: "enum IGlobalConst.CCConstantType",
      },
      {
        name: "v",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDealConstant",
    inputs: [
      {
        name: "constantType",
        type: "uint8",
        internalType: "enum IGlobalConst.DealConstantType",
      },
      {
        name: "v",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFLTPrice",
    inputs: [
      {
        name: "fltPrice_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "usdCCCollateralPerUnit",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "usdCCTargetRevenuePerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "CCConstantUpdated",
    inputs: [
      {
        name: "constantType",
        type: "uint8",
        indexed: false,
        internalType: "enum IGlobalConst.CCConstantType",
      },
      {
        name: "newValue",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DealConstantUpdated",
    inputs: [
      {
        name: "constantType",
        type: "uint8",
        indexed: false,
        internalType: "enum IGlobalConst.DealConstantType",
      },
      {
        name: "newValue",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FLTPriceUpdated",
    inputs: [
      {
        name: "newPrice",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60808060405234610016576118a9908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c9081630168213014611495578163282b959e146114395781632c21831c146113fb57816338da0f291461139f5781633fefdc1d1461134357816341e89d62146112e75781634ff0876a1461128b5781635ff244911461122f578163641657fc146111d35781636a6b6ead14611177578163715018a6146110b65781637358c57a1461105a57816376671808146110185781637dcc162e14610c1657816388f12ffd14610bba5781638da5cb5b14610b48578163a66d5aaa14610aec578163a7f7f9b514610a90578163aaf5eb6814610a55578163ac027f97146109e3578163b41b3e2614610987578163d8cd30851461092b578163dd044045146108cf578163e2175090146103e3578163e71d117b14610387578163ec336c3f1461032b578163ee986089146102cf578163f2fde38b146101c0575063f7a9bac71461016257600080fd5b346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150329549051908152f35b5080fd5b919050346102cb5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102cb5781359173ffffffffffffffffffffffffffffffffffffffff918284168094036102c75761021d611803565b83156102985750507fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8280fd5b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031f549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150322549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031e549051908152f35b8383346101bc5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc5782359061041f611803565b817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150319557f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e01503295461046c6115a8565b8491806108bc575b507f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032a8054869187826107c8575b7f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031f95865410600014610775577f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e01503215493612af89081810291818304149015171561074957612710900493808510610741575b505b840361063657509091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810190811161060a577fd1deff9e525a11d14a1263bcc0b80d6863292470cc5c6e5c433dfdeaa7ef0e2d95965091610591916001610580602097969561163b565b5001555b61271091829154856117f0565b047f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031e556105df7f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031d54846117f0565b047f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031c5551908152a180f35b6024866011897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b85519386850185811067ffffffffffffffff821117610715578752845260208401928352680100000000000000008210156106e95760018201905561067a9061163b565b9290926106be577fd1deff9e525a11d14a1263bcc0b80d6863292470cc5c6e5c433dfdeaa7ef0e2d9697509160016020969594926105919451835551910155610584565b602487808a7f4e487b7100000000000000000000000000000000000000000000000000000000825252fd5b60248860418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60248a60418d7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93508a610512565b60248a60118d7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b7f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150322549361232890818102918183041490151715610749576127109004938085116107c0575b50610514565b93508a6107ba565b5091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101818111610890576107fe9061163b565b50805492906002831015610814575087926104a1565b84840361088657507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe820182811161085a5761085160019161163b565b500154926104a1565b60248960118c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60010154926104a1565b60248860118b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6108c89192508461156f565b9086610474565b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031c549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150328549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031b549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc5760209073ffffffffffffffffffffffffffffffffffffffff7f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031854169051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc57602090516127108152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150323549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150324549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc5760209073ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc54169051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150326549051908152f35b8383346101bc57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc578235600b8110156102cb57602435610c5c611803565b839180610d3a57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031d55612710610cb4837f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150319546117f0565b047f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031c555b835192610d0e577f0cc7e16f1fa2f27138363684296b2af3db5faff4298824d7a323b05250ff9a2194955082526020820152a180f35b6024856021887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b84925060018103610dbe57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031f55612710610d96837f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150319546117f0565b047f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031e55610cd8565b84925060028103610df157817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032055610cd8565b84925060038103610e2457817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032155610cd8565b849250858103610e5657817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032255610cd8565b84925060058103610e8957817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032355610cd8565b84925060068103610ebc57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032455610cd8565b84925060078103610eef57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032555610cd8565b84925060088103610f2257817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032655610cd8565b84925060098103610f5557817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032755610cd8565b849250600a8103610f8857817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032855610cd8565b6110148685519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160809060208152602260208201527f476c6f62616c436f6e73743a20756e6b6e6f776e20636f6e7374616e7420747960408201527f706500000000000000000000000000000000000000000000000000000000000060608201520190565b0390fd5b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020906110536115a8565b9051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd357549051908152f35b833461117457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112611174576110ed611803565b8073ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc8054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031d549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150325549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150319549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd358549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031a549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150320549051908152f35b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150321549051908152f35b8284346111745760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126111745750611053602092356116c2565b5050346101bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150327549051908152f35b8383346101bc57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101bc57823560028110156102cb576024356114db611803565b83918061153c57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031a555b835192610d0e577f842f564a9cc49052db4beaafe8b9d6e4fb9bf7eb5d2980f61544a19293db5dae94955082526020820152a180f35b84925060018103610f8857817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031b55611506565b8115611579570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd35754420342811161160c577f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd358546115fe9161156f565b6001018060011161160c5790565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032a80548210156116935760005260011b7f793e1eb0a8ea68f94c37f028cb6cd2ad49555419faabd472d0471135d37655fe0190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032a5460007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff918281019081116117c35791909182935b81841115611727575050505090565b909192938285019485811161160c57600195861c916117458361163b565b5091825480861160001461176e5750505085015494810180911161160c57915b90929192611718565b919790955091908410156117b857505083810190811115611765577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b015495945050505050565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b8181029291811591840414171561160c57565b73ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc5416330361184357565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea264697066735822122086a039beca89da051a8075a2cd665f9a8c8a50248d4a170e9d39197a88b958de64736f6c63430008130033";

type GlobalConstConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlobalConstConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GlobalConst__factory extends ContractFactory {
  constructor(...args: GlobalConstConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GlobalConst";
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GlobalConst & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GlobalConst__factory {
    return super.connect(runner) as GlobalConst__factory;
  }
  static readonly contractName: "GlobalConst";

  public readonly contractName: "GlobalConst";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlobalConstInterface {
    return new Interface(_abi) as GlobalConstInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GlobalConst {
    return new Contract(address, _abi, runner) as unknown as GlobalConst;
  }
}
