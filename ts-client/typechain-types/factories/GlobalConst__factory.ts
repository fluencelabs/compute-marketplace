/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { GlobalConst, GlobalConstInterface } from "../GlobalConst";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum GlobalConst.Constant",
        name: "constantType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ConstantsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "fluenceToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDepositedEpoches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRematchingEpoches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum GlobalConst.Constant",
        name: "constantType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "setConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761060b908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816342e14eb21461050c57508063715018a61461044b5780638da5cb5b146103d9578063ac027f9714610367578063d6f563d8146101dd578063df2387211461017d5763f2fde38b1461007157600080fd5b346101795760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795781359173ffffffffffffffffffffffffffffffffffffffff91828416809403610175576100cb610565565b83156101465750507fc43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb80805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8280fd5b8382346101d957817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d9576020907f69fd5a837e660cfb338b8ff11344a85cd64fc4103e7bd3f69149a34c2eff5fea549051908152f35b5080fd5b508290346101d957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d9578235600281101561017957602435610224610565565b8391806102b157817f69fd5a837e660cfb338b8ff11344a85cd64fc4103e7bd3f69149a34c2eff5fe9555b835192610285577f2e1ab86f1064ccfa48a8bdbdac5c07e8da91d61e58f10bdba0e53257c0d7294394955082526020820152a180f35b6024856021887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b849250600181036102e457817f69fd5a837e660cfb338b8ff11344a85cd64fc4103e7bd3f69149a34c2eff5fea5561024f565b60848660208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f476c6f62616c436f6e73743a20756e6b6e6f776e20636f6e7374616e7420747960448201527f70650000000000000000000000000000000000000000000000000000000000006064820152fd5b8382346101d957817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d95760209073ffffffffffffffffffffffffffffffffffffffff7f69fd5a837e660cfb338b8ff11344a85cd64fc4103e7bd3f69149a34c2eff5fe854169051908152f35b8382346101d957817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d95760209073ffffffffffffffffffffffffffffffffffffffff7fc43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb8054169051908152f35b833461050957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261050957610482610565565b8073ffffffffffffffffffffffffffffffffffffffff7fc43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb808054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b8490346101d957817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d9576020907f69fd5a837e660cfb338b8ff11344a85cd64fc4103e7bd3f69149a34c2eff5fe9548152f35b73ffffffffffffffffffffffffffffffffffffffff7fc43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb80541633036105a557565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea26469706673582212203a3695a2ae43fe20f20aa67fa28b2bdbc2f12cfe954736a9f0b518946769c78d64736f6c63430008130033";

type GlobalConstConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlobalConstConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GlobalConst__factory extends ContractFactory {
  constructor(...args: GlobalConstConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GlobalConst & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GlobalConst__factory {
    return super.connect(runner) as GlobalConst__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlobalConstInterface {
    return new Interface(_abi) as GlobalConstInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GlobalConst {
    return new Contract(address, _abi, runner) as unknown as GlobalConst;
  }
}
