/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Market, MarketInterface } from "../../../contracts/core/Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
    ],
    name: "ComputeUnitAddedToDeal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "ComputeUnitCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
    ],
    name: "ComputeUnitRemovedFromDeal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IGlobalConst.Constant",
        name: "constantType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ConstantsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "EffectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "EffectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
    ],
    name: "MarkeOfferRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
    ],
    name: "MinPricePerEpochUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
    ],
    name: "PeerCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "freeUnits",
            type: "uint256",
          },
        ],
        internalType: "struct Market.RegisterComputePeer[]",
        name: "peers",
        type: "tuple[]",
      },
    ],
    name: "addComputePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "freeUnits",
        type: "uint256",
      },
    ],
    name: "addComputeUnits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "newEffectors",
        type: "tuple[]",
      },
    ],
    name: "addEffector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newMinPricePerWorkerEpoch",
        type: "uint256",
      },
    ],
    name: "changeMinPricePerWorkerEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "changePaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralPerUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fltPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fluenceToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "getComputeUnit",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "deal",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
        ],
        internalType: "struct Market.ComputeUnit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
    ],
    name: "getOffer",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minPricePerWorkerEpoch",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
        ],
        internalType: "struct Market.OfferInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
    ],
    name: "getPeer",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "offerId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "commitmentId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "unitCount",
            type: "uint256",
          },
        ],
        internalType: "struct Market.ComputePeerInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCCProofs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCapacityRewardPerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFailedRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCapacityCommitmentDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCapacityRewardPerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDepositedEpoches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRematchingEpoches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minRequierdCCProofs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "minPricePerWorkerEpoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "peerId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "freeUnits",
            type: "uint256",
          },
        ],
        internalType: "struct Market.RegisterComputePeer[]",
        name: "peers",
        type: "tuple[]",
      },
    ],
    name: "registerMarketOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "lastUnitId",
        type: "bytes32",
      },
    ],
    name: "removeComputeUnit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offerId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
    ],
    name: "removeEffector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "returnComputeUnitFromDeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IGlobalConst.Constant",
        name: "constantType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "setConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slashingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetRevenuePerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawCCEpochesAfterFailed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657612fa1908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600090813560e01c806306c64ef914612427578063087b97ba1461232e57806313baa069146122d257806314afcd5214611eb15780631514617e14611e5557806321b4093e14611a7157806334205efd146118c65780633a49cf481461186a57806342e14eb21461180e5780634ca26bd81461176b5780634ff0876a1461170f5780635a5b8107146116b35780635ff244911461165757806369e9f4bb146115fb578063715018a61461153c5780637358c57a146114e0578063745e920b1461142457806376671808146113035780638da5cb5b14611291578063a376fb9114611235578063a963e5f414611175578063aaf5eb681461113a578063ac027f97146110c8578063b017191a14610f15578063b3f2597514610bbe578063bbae14b514610b62578063d597b8c814610aa4578063d6f563d81461063c578063db46d205146105e0578063df23872114610584578063e989ce8a14610528578063f26c329b146104cc578063f2fde38b146103bc578063f44e553e146103605763f5c4c9dd146101a157600080fd5b3461035c5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c57803560243590604435928185527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975915602052858520908386527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591660205261025173ffffffffffffffffffffffffffffffffffffffff8888209354163314612b19565b84156102d9578282540361027c5750610279949550600161027491015415612b7e565b61297a565b80f35b60649060208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601260248201527f5065657220646f65736e277420657869737400000000000000000000000000006044820152fd5b60849060208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602360248201527f4672656520756e6974732073686f756c6420626520677265617465722074686160448201527f6e203000000000000000000000000000000000000000000000000000000000006064820152fd5b5080fd5b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150324549051908152f35b5082346104c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104c85781359173ffffffffffffffffffffffffffffffffffffffff918284168094036104c357610418612efb565b83156104945750507fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b600080fd5b8280fd5b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031f549051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031b549051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031a549051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031e549051908152f35b50913461035c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c578235600e8110156104c857602435610682612efb565b6000918061071057817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150319555b8351926106e4577f2e1ab86f1064ccfa48a8bdbdac5c07e8da91d61e58f10bdba0e53257c0d7294394955082526020820152a180f35b6024856021887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6001810361074057817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031a556106ae565b600092506002810361077457817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031b556106ae565b600381036107a457817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031c556106ae565b600092508581036107d757817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031d556106ae565b6005810361080757817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031e556106ae565b600092506006810361083b57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031f556106ae565b6007810361086b57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150320556106ae565b6000925060088103610929577f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015032180546108a6578290556106ae565b60848760208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f476c6f62616c436f6e73743a2076657374696e67206475726174696f6e20616c60448201527f72656164792073657400000000000000000000000000000000000000000000006064820152fd5b6009810361095957817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150322556106ae565b60009250600a810361098d57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150326556106ae565b600b81036109bd57817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150323556106ae565b60009250600c81036109f157817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150324556106ae565b600d8103610a2157817f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150325556106ae565b60848660208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f476c6f62616c436f6e73743a20756e6b6e6f776e20636f6e7374616e7420747960448201527f70650000000000000000000000000000000000000000000000000000000000006064820152fd5b508290346104c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104c8576060928291610ae3612617565b503581527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591560205220908051610b18816125ba565b73ffffffffffffffffffffffffffffffffffffffff908184541693848252838360026001840154936020860194855201541692019182528351948552516020850152511690820152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031c549051908152f35b508290346104c85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104c85780359060243560443573ffffffffffffffffffffffffffffffffffffffff938482168092036104c35767ffffffffffffffff91606435838111610f1157610c3a90369087016124b0565b94909689608435958611610f0e57610c568a9636908a016124b0565b98909286835260027f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759159c8d9460209e8f5220015416610eb25750610c9f83989796981515612636565b610caa8415156126c1565b848b528952868a209583888051610cc0816125ba565b338152858d82015201527fffffffffffffffffffffffff0000000000000000000000000000000000000000963388825416178155600197848983015585600283019182541617905560038c9101905b8c8c8c8a8410610dd85750509150505b818110610dae57505050908291610d368594612c0e565b86519860a08a01938a5233908a015286890152606088015260a060808801525260c085019392865b828110610d8f57877f5790c68be7bb2c9c0ff7282cdc71ddd95814442d6320faf97617e2011bb3eaff88880389a180f35b909192828087610da1889985996127e5565b0196019493929101610d5e565b80610dca610dc4610dcf9385879d9b9c9d612779565b8861281e565b61274c565b97969597610d1f565b918482848d9e9f9d610e758f96610e0b8a84610e05610e0083610ea99f9e98610e4999612779565b6127b8565b96612779565b01358751928391868301958690917fffffffff0000000000000000000000000000000000000000000000000000000060249316825260048201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352826125d6565b519020835252208b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905561274c565b98979698610d0f565b6064908b8851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601460248201527f4f6666657220616c7265616479206578697374730000000000000000000000006044820152fd5b80fd5b8880fd5b508290346104c857610f26366124e1565b8286949294526020907f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975915825285872090610f7873ffffffffffffffffffffffffffffffffffffffff8354163314612b19565b6003889201915b818110610f8a578880f35b610f95818389612779565b610f9e816127b8565b89517fffffffff0000000000000000000000000000000000000000000000000000000090911686820190815282870135600482015290610fe18160248401610e49565b519020808b5284865260ff8a8c20541661106c57606061106793927f3c96a39027441c49cc91433cc2f6a915b4aa9be8119e89e1ee6700fe60eb2531928d528688528b8d2060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790556110618c51918b8352898301906127e5565ba161274c565b610f7f565b606487878c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4566666563746f7220616c7265616479206578697374730000000000000000006044820152fd5b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c5760209073ffffffffffffffffffffffffffffffffffffffff7f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031854169051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c57602090516127108152f35b5082346104c857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104c8577fdd848dc9639c1bd25e20cfc64807b34179257bd6236df1e88b957e369d70bdeb91356024358185527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591560205280600184872061121a73ffffffffffffffffffffffffffffffffffffffff8254163314612b19565b611225831515612636565b015582519182526020820152a180f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150326549051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c5760209073ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc54169051908152f35b50913461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c577f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd3575442034281116113f6577f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd358549081156113ca5704600101918260011161139e576020838351908152f35b806011857f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b6024846012877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6011847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b508290346104c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104c8576060928291611463612617565b503581527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591760205220908051611498816125ba565b82549283825273ffffffffffffffffffffffffffffffffffffffff90836002836001840154169260208601938452015493019283528351948552511660208401525190820152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd357549051908152f35b8234610f0e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610f0e57611573612efb565b600073ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc8054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150325549051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e015031d549051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150323549051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f7d4f8ec43464738265ced6b7ed5f90007e9b7c34318bdd82d9249328b50bd358549051908152f35b508290346104c85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104c85760609282916117aa612617565b503581527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975916602052209080516117df816125ba565b825492838252826002600183015492602085019384520154920191825282519384525160208401525190820152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150319549051908152f35b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150320549051908152f35b508290346104c8576118d7366124e1565b8286949294526020907f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591582528587209061192973ffffffffffffffffffffffffffffffffffffffff8354163314612b19565b6003889201915b81811061193b578880f35b611946818389612779565b61194f816127b8565b89517fffffffff00000000000000000000000000000000000000000000000000000000909116868201908152828701356004820152906119928160248401610e49565b519020808b5284865260ff8a8c20541615611a15576060611a1093927f5151d310b0333d894aac0234a4665be715d061a6fbf0f84ce313f315a8272dce928d528688528b8d207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690556110618c51918b8352898301906127e5565b611930565b606487878c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f4566666563746f722020646f65736e27742065786973740000000000000000006044820152fd5b50913461035c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c5782358083527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591793602094808652838520602435865284862091600282015487527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759168852858720805488527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975915895273ffffffffffffffffffffffffffffffffffffffff9485888a2054163303611dd357600194611b608684015415612b7e565b600283019081549080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830190838211611da75703611d255786549055611ba790612be3565b905560038201906006830191888b52828c52898b2090878b5192611bca8461256f565b805484520154908d8301918252611be28b8483612eb8565b15611cc957978b8d9e959d7f0949a6ca0219ff7334382963d882dbfcb7c4a5253671a89e4227f965bdae8caf9e60059686600096611c9d9f9e879e9d9c995180158a14611cb55750815190555b5180158814611ca3575051908701555b8d8252875220828155015501611c558154612be3565b9055868a525260006002878a208281558a85820155015501541692519283928390929173ffffffffffffffffffffffffffffffffffffffff6020916040840195845216910152565b0390a180f35b91505190835281895283832055611c3f565b8251908752858d5287872089015550611c2f565b6064848f8e51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601260248201527f4b657920646f6573206e6f7420657869737400000000000000000000000000006044820152fd5b6084848e8d51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f4c61737420756e6974206964206973206e6f74206c61737420756e697420696e60448201527f20706565720000000000000000000000000000000000000000000000000000006064820152fd5b60248e6011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6084908a8951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f4f6e6c79206f776e65722063616e2072656d6f766520636f6d7075746520756e60448201527f69740000000000000000000000000000000000000000000000000000000000006064820152fd5b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150321549051908152f35b503461035c57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104c8578035908184527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591783528484209260016002850154940180549073ffffffffffffffffffffffffffffffffffffffff9182811696801561227657871561221a5788527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975916845288882093845489527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759158152898920938a517f8da5cb5b000000000000000000000000000000000000000000000000000000008152828189818d5afa908115612210578b916121d6575b50811633149081156121c9575b501561214757507fffffffffffffffffffffffff00000000000000000000000000000000000000001690556120158460038401612e34565b82600583015415612133575b505050823b1561212f5784517f3591187c0000000000000000000000000000000000000000000000000000000081528282820152848160248183885af18015612125576120b8575b5050925192835273ffffffffffffffffffffffffffffffffffffffff166020830152907f0949a6ca0219ff7334382963d882dbfcb7c4a5253671a89e4227f965bdae8caf908060408101611c9d565b67ffffffffffffffff8196959296116120f9578452929350611c9d7f0949a6ca0219ff7334382963d882dbfcb7c4a5253671a89e4227f965bdae8caf612069565b6024826041887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b86513d87823e3d90fd5b8380fd5b61213f92549101612e34565b388082612021565b856084918b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603a60248201527f4f6e6c79206465616c206f72206f66666572206f776e65722063616e2072656d60448201527f6f766520636f6d7075746520756e69742066726f6d206465616c0000000000006064820152fd5b8554163314905038611fdd565b90508281813d8311612209575b6121ed81836125d6565b81010312612205575181811681036122055738611fd0565b8a80fd5b503d6121e3565b8c513d8d823e3d90fd5b606486868c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f436f6d7075746520756e697420616c72656164792066726565000000000000006044820152fd5b606486868c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f436f6d7075746520756e697420646f65736e27742065786973740000000000006044820152fd5b82843461035c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035c576020907f60ac4d56f7e69877e4b95a6e91f4b3612278b580a93ea7637885a480e0150322549051908152f35b508290346104c857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104c85735906024359173ffffffffffffffffffffffffffffffffffffffff928381168091036124235760027f69320c1eb39a752844ba207d2f98bd240d07dabf1449b4c1bd432daea12b744a948387527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759156020526123e1858820918254163314612b19565b6123ec8315156126c1565b01817fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905582519182526020820152a180f35b8480fd5b82843461035c5773ffffffffffffffffffffffffffffffffffffffff61248661244f366124e1565b92919390948487527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975915602052862054163314612b19565b835b818110612493578480f35b80610dca6124a56124ab938588612779565b8561281e565b612488565b9181601f840112156104c35782359167ffffffffffffffff83116104c3576020808501948460061b0101116104c357565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126104c357600435916024359067ffffffffffffffff82116104c35761252f916004016124b0565b9091565b9190820180921161254057565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6040810190811067ffffffffffffffff82111761258b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761258b57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761258b57604052565b60405190612624826125ba565b60006040838281528260208201520152565b1561263d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4d696e207072696365207065722065706f63682073686f756c6420626520677260448201527f6561746572207468616e203000000000000000000000000000000000000000006064820152fd5b156126c857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5061796d656e7420746f6b656e2073686f756c64206265206e6f74207a65726f60448201527f20616464726573730000000000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146125405760010190565b91908110156127895760061b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b357fffffffff00000000000000000000000000000000000000000000000000000000811681036104c35790565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168091036104c3578252602090810135910152565b91906000928084526020917f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759158352604092838620958235928382527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591683528582209081546128f8577fd12c3db3da1a8e27404014e648f19ead8efee50804d9378b1c8df1c2d718f82d97986128e78785600289966128ed988a8e8160049a013596879687938351926128cf846125ba565b835282015201528c825560018201550155848961297a565b01612e34565b8351928352820152a1565b6084848851907f08c379a000000000000000000000000000000000000000000000000000000000825260048201526024808201527f5065657220616c72656164792065786973747320696e20616e6f74686572206f60448201527f66666572000000000000000000000000000000000000000000000000000000006064820152fd5b90929160009380855260207f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d897591681526002604094818689200195865494895b8781106129d5575050505050506129d192939450612533565b9055565b82518681014381528585830152606091848382015260808481830152815260a0810181811067ffffffffffffffff821117612aec578652519020612ae792917fdd6ab8e783a793065697ec55221b3dfd83373950281b5415121481a54bc074ea918e898b612a43878f612533565b928a5193612a50856125ba565b84528a828501918083527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975917828701948d865288835252209351845573ffffffffffffffffffffffffffffffffffffffff600185019151167fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905551910155865190888252868b83015287820152a161274c565b6129b8565b60248f7f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b15612b2057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c79206f776e65722063616e206368616e6765206f6666657200000000006044820152fd5b15612b8557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f506565722068617320636f6d6d69746d656e74000000000000000000000000006044820152fd5b8015612540577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b8015612dd65760008181527f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759149081602052602060408220604051612c518161256f565b6001825492838352015492839101521590811591612dcc575b508015612da2575b8015612d78575b612d1a577f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975912918254907f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975913612ccd815461274c565b9055848215612cf2579060409392916001955585835260205280838320558152200155565b7f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d89759115550505055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b657920616c72656164792065786973747300000000000000000000000000006044820152fd5b507f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975912548314612c79565b507f4c2ec547b8cab1e5b31c9ded49e6c65bbd489b644cf1bee820e43e93d8975911548314612c72565b9050151538612c6a565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4b65792063616e6e6f74206265205a45524f00000000000000000000000000006044820152fd5b8115612dd657600381019060009083825282602052612e718460408420600160405191612e608361256f565b805483520154602082015283612eb8565b612d1a5760018101928484549260028101612e8c815461274c565b90558315612eb157509060409392916001955585835260205280838320558152200155565b5550505055565b8151158015939290612eed575b508215612ee2575b8215612ed857505090565b6001015414919050565b805482149250612ecd565b602001511515925038612ec5565b73ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc54163303612f3b57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea2646970667358221220679af6bc8716da791f8cf43c7521bcd039708d30e3a1d775a4989402f9f51b8d64736f6c63430008130033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Market & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Market__factory {
    return super.connect(runner) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new Interface(_abi) as MarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Market {
    return new Contract(address, _abi, runner) as unknown as Market;
  }
}
