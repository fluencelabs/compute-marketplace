/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Config, ConfigInterface } from "../../../contracts/deal/Config";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "newAppCID",
        type: "tuple",
      },
    ],
    name: "AppCIDChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "accessType",
    outputs: [
      {
        internalType: "enum IConfig.AccessType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "appCID",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IConfig.AccessType",
        name: "accessType_",
        type: "uint8",
      },
    ],
    name: "changeAccessType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "effectors",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccessList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isInAccessList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWorkersPerProvider",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerWorkerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "removeFromAccessList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "appCID_",
        type: "tuple",
      },
    ],
    name: "setAppCID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611129908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600060e0918135831c908163055236f414610df157816314d3b76714610bb15781631763451414610b55578163176474cf14610a4a5781632943dcab146109ee5781632db31193146109925781633013ce29146109205781636cd13448146108c4578163715018a6146108065781637878e81b146107735781638a0c725b146107175781638d5ddbb31461055f5781638da5cb5b146104ed5781639bc66868146103fc578163b55ec18a14610363578163f2fde38b14610254575063fc1e5e2a146100de57600080fd5b3461025157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102515782907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0e90815461014361013e82610f4c565b610f08565b9080825260209586830190819585527f41d22fcf61f8b32ca910e56247176ffedb9dcd2ae76207e235d37179490c642c9085925b8484106101f9575050505050835194859481860192828752518093528086019493905b8382106101a75786860387f35b9184965082866101e96001949698849851602080917fffffffff0000000000000000000000000000000000000000000000000000000081511684520151910152565b019601920186959492939161019a565b60028a60019261020d9c99989a9b9c610eb9565b7fffffffff000000000000000000000000000000000000000000000000000000008754871b1681528487015483820152815201930193019291989796949598610177565b80fd5b9050833461035f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035f5781359173ffffffffffffffffffffffffffffffffffffffff9182841680940361035b576102b1611083565b831561032c5750507fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8280fd5b8285346103f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f85760ff7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0f541690519160038210156103cc57602083838152f35b806021857f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b5080fd5b50503461025157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610251576020610436610eb9565b82815201527fffffffff00000000000000000000000000000000000000000000000000000000610464610eb9565b917f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0654901b1681527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d075460208201526104eb82518092602080917fffffffff0000000000000000000000000000000000000000000000000000000081511684520151910152565bf35b8285346103f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f85760209073ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc54169051908152f35b84833461025157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610251577f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d12546105bd61013e82610f4c565b928184527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0806105ec84610f4c565b019260209336858801377f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d105485905b8282106106d05750505084519261064061063761013e86610f4c565b94808652610f4c565b8482019201368337845b865181101561067a57806106616106759289610fc0565b5160601c61066f8288610fc0565b52610f64565b61064a565b509190848483519485948186019282875251809352850193925b8281106106a357505050500390f35b835173ffffffffffffffffffffffffffffffffffffffff1685528695509381019392810192600101610694565b806106db838a610fc0565b5286527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d1385526107116001858820015491610f64565b9061061b565b8285346103f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f8576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0c549051908152f35b9050346103f85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f8573560038110156103f8576107b6611083565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0f9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905580f35b823461025157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102515761083d611083565b8073ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc8054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8285346103f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f8576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0d549051908152f35b8285346103f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f85760209073ffffffffffffffffffffffffffffffffffffffff7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0854169051908152f35b8285346103f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f8576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0a549051908152f35b8285346103f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f8576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0b549051908152f35b8385849234610b5157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610b5157610a84611083565b35917fffffffff0000000000000000000000000000000000000000000000000000000083169081840361035b577fc820a66d3bdd50a45cf12cda6dc8ec9e94fb5123edd7da736eea18316f8523a0937f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d06911c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000825416179055602435807f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d075582519182526020820152a180f35b8380fd5b8285346103f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103f8576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d05549051908152f35b9050833461035f576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610b5157823573ffffffffffffffffffffffffffffffffffffffff8116810361035b577fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090610c2d611083565b60601b16908185527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d13918282528386206001610c67610eb9565b91805483520154838201908152610c7e8383611003565b15610d955791816001959389979593518015600014610d82575080517f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d10555b5180610d715750517f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d11555b855252822082815501557f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d12908154908115610d4557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905580f35b8360116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b905190875283835284872055610ce8565b815190895285855287878a200155610cbd565b606487858851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601260248201527f4b657920646f6573206e6f7420657869737400000000000000000000000000006044820152fd5b8491503461035f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035f573573ffffffffffffffffffffffffffffffffffffffff8116810361035f57602092827fffffffffffffffffffffffffffffffffffffffff000000000000000000000000610eb09360601b16918281527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d138652206001610ea0610eb9565b9180548352015485820152611003565b90519015158152f35b604051906040820182811067ffffffffffffffff821117610ed957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff821117610ed957604052565b67ffffffffffffffff8111610ed95760051b60200190565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f915760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8051821015610fd45760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9081511591821592611075575b50811561104a575b8115611022575090565b90507f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d11541490565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d105481149150611018565b602001511515915038611010565b73ffffffffffffffffffffffffffffffffffffffff7fb13d3e7783d509d8d65d3e1e62ec0b103a07e0cbfa1ee74ae19127f297dddfcc541633036110c357565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea2646970667358221220cf539e22f7682c3187f82e2aa1fcc1dd508b76f221e3b67a18802c47e715416f64736f6c63430008130033";

type ConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Config__factory extends ContractFactory {
  constructor(...args: ConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Config & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Config__factory {
    return super.connect(runner) as Config__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigInterface {
    return new Interface(_abi) as ConfigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Config {
    return new Contract(address, _abi, runner) as unknown as Config;
  }
}
