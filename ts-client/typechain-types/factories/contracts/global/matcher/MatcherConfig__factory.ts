/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MatcherConfig,
  MatcherConfigInterface,
} from "../../../../contracts/global/matcher/MatcherConfig";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGlobalCore",
        name: "globalCore_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "computeProvider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minPricePerEpoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "paymentToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
    ],
    name: "ComputeProviderRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "computeProvider",
        type: "address",
      },
    ],
    name: "ComputeProviderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "computeProvider",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "EffectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "computeProvider",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "EffectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "computeProvider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxCollateral",
        type: "uint256",
      },
    ],
    name: "MaxCollateralChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "computeProvider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMinPricePerEpoch",
        type: "uint256",
      },
    ],
    name: "MinPricePerEpochChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "computeProvider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newWorkerSlots",
        type: "uint256",
      },
    ],
    name: "WorkersSlotsChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "_globalCore",
    outputs: [
      {
        internalType: "contract IGlobalCore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "addEffector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "workerSlots",
        type: "uint256",
      },
    ],
    name: "addWorkersSlots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxCollateral",
        type: "uint256",
      },
    ],
    name: "changeMaxCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinPricePerEpoch",
        type: "uint256",
      },
    ],
    name: "changeMinPricePerEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "newPaymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newMaxCollateral",
        type: "uint256",
      },
    ],
    name: "changePaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
    ],
    name: "getComputePeerInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "freeWorkerSlots",
            type: "uint256",
          },
        ],
        internalType: "struct IMatcherConfig.ComputePeer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "getComputeProviderInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minPricePerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCollateral",
            type: "uint256",
          },
          {
            internalType: "contract IERC20",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalFreeWorkerSlots",
            type: "uint256",
          },
        ],
        internalType: "struct IMatcherConfig.ComputeProvider",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "getPeersByComputeProvider",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "peerIds",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "freeWorkerSlots",
            type: "uint256",
          },
        ],
        internalType: "struct IMatcherConfig.ComputePeer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minPricePerEpoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxCollateral",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "paymentToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "effectors",
        type: "tuple[]",
      },
    ],
    name: "registerComputeProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeComputeProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "effector",
        type: "tuple",
      },
    ],
    name: "removeEffector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "workerSlots",
        type: "uint256",
      },
    ],
    name: "subWorkersSlots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461006a57601f611f5438819003918201601f19168301916001600160401b0383118484101761006f5780849260209460405283398101031261006a57516001600160a01b038116810361006a57608052604051611ece908161008682396080518161129c0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c90816301b40500146112705750806309f98c701461106057806355eb409a14610ce95780635714584814610c0257806359a6bf5f14610a605780635c768997146107c05780635eabe346146106ed5780636868bda3146106cd57806373e8f7e9146105835780637f1784501461051c578063b63af4b1146103a6578063c27701ba1461033f5763f6ee7139146100b457600080fd5b3461033b576100c2366112c0565b938184527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369a906020908282526100fb878688205461139f565b92848752825282858720553386527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f36989081835260038688200161013f89825461139f565b905583156101ba575b506101ae906101857f1eaffb28f02e49aa8dce586ac73116a047f91a8116d887ed4e72496a2f10283f9798338a528285526001888b200154611602565b9033895283523373ffffffffffffffffffffffffffffffffffffffff6002888b20015416611920565b8351928352820152a180f35b963387527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369983528587206003810186895280855287892060018951916101ff83611342565b805483520154868201908152610216898386611e55565b156102f9579060029392918b82518c811592836102f0575b84519384156102e5575b156102d1575b505050505190816102bf575b5050878a52855288600189822082815501550180548015610293577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905596506101ae610148565b60248960118c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b51908b52818752898b2055388061024a565b6001928152868c5220015538808c8e61023e565b8360018a0155610238565b8451885561022e565b60648c888c519162461bcd60e51b8352820152601260248201527f4b657920646f6573206e6f7420657869737400000000000000000000000000006044820152fd5b5080fd5b5082346103a25760206003193601126103a2578282916020948351610363816112db565b523581527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369a84522090805191610398836112db565b5480925251908152f35b8280fd5b503461033b578060031936011261033b576103bf6115c6565b81517fffffffff0000000000000000000000000000000000000000000000000000000090911660208083019182526024803590840152949161042c81604481015b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528261135e565b519020903384527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369b90818652838520838652865260ff84862054166104da5750937f745c8d0f0a46a84d996b0f143854bf38e5c21b3a180895fca9d6c17654c35389939433865281528285209185525280832060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905551806104d43382611b74565b0390a180f35b6064908685519162461bcd60e51b8352820152601760248201527f4566666563746f7220616c7265616479206578697374730000000000000000006044820152fd5b5082346103a25760206003193601126103a2577fa55f70960fade7ac9823693b7234ce8261649fa77567ca96b5a0bc76eea00c3c916104d4913590610562821515611463565b8161056c336119d2565b555133815260208101919091529081906040820190565b503461033b578060031936011261033b5761059c6115c6565b81517fffffffff000000000000000000000000000000000000000000000000000000009091166020808301918252602480359084015294916105e18160448101610400565b519020903384527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369b908186528385208386528652600160ff858720541615150361068b5750937f6e9663aceecefa351da298ff43f1b4ee80da411530c55352ba1d5c787118bd2193943386528152828520918552528083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905551806104d43382611b74565b6064908685519162461bcd60e51b8352820152601660248201527f4566666563746f7220646f65736e2774206578697374000000000000000000006044820152fd5b82843461033b57602060031936011261033b576106ea9035611a2a565b80f35b5082346103a25760206003193601126103a2573573ffffffffffffffffffffffffffffffffffffffff908181168091036107bc578383916080956060845161073481611326565b8281528260208201528286820152015281527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3698602052209180519161077883611326565b835493848452600181015460208501908152606060038460028501541693868801948552015495019485528351958652516020860152511690830152516060820152f35b8380fd5b503461033b578160031936011261033b576108506107dd336119d2565b6002810184815473ffffffffffffffffffffffffffffffffffffffff811692610807841515611987565b7fffffffffffffffffffffffff00000000000000000000000000000000000000006001860192848454948161084260038b0197885490611602565b995555169055553390611920565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b16908183527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369760209281845282852060018451916108b283611342565b8054835201548582019081526108c88383611dd5565b15610a1e578151801590816109f5575b82519182156109cd575b156109ba575b50505190816109a8575b50508452825282600182822082815501557f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f36968054801561097c577f1a9d4a5597d6ea11c9f37af1e8c69914b216e3b22aa6ca6e6387f24d7657647d9495507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905551338152a180f35b6024856011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b519086528285528386205538806108f2565b88528487526001868920015538806108e8565b817f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3695556108e2565b82517f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3694556108d8565b6064888787519162461bcd60e51b8352820152601260248201527f4b657920646f6573206e6f7420657869737400000000000000000000000000006044820152fd5b503461033b57610a6f366112c0565b938415610b9957508293817f1eaffb28f02e49aa8dce586ac73116a047f91a8116d887ed4e72496a2f10283f94527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369a906101ae602091838352610adb81878a20548015610b62576115f5565b9385895283528386892055338852610b367f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3698918285526003888b2001610b228282546115f5565b9055338a528285526001888b200154611602565b90338952835273ffffffffffffffffffffffffffffffffffffffff6002878a2001541630903390611615565b338b527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f36998652610b94888a8d20611d51565b6115f5565b608490602084519162461bcd60e51b8352820152602560248201527f576f726b657220736c6f74732073686f756c642062652067726561746572207460448201527f68616e20300000000000000000000000000000000000000000000000000000006064820152fd5b5082346103a257816003193601126103a257359073ffffffffffffffffffffffffffffffffffffffff80831690818403610ce5577f2bd8c5354233e1142193df7977bd89f7ad57b724087278bad86db1e15fc3033b93610ccc610cd692610c6a851515611545565b610cc3610c76336119d2565b9160028301805490887fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055610cba60036001860154950194855490611602565b91339116611920565b54602435611602565b9030903390611615565b8151903382526020820152a180f35b8480fd5b5082346103a25760806003193601126103a257803590602435926044359073ffffffffffffffffffffffffffffffffffffffff9283831680930361105c576064359467ffffffffffffffff9384871161105857366023880112156110585786830135948511611058576024870196602436918760061b01011161105857610d71821515611463565b610d7c8815156114d4565b610d87811515611545565b3389527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3698602093818552876002878d200154166110165750600385949796955191610dd183611326565b8483528b8984018c8152878086019287845260608701948186523382528d52209451855551986001998a860155600285019151167fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905551910155610e5e7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b16611bd0565b885b848110610f18575090839183519860a08a0192338b52888b0152848a0152606089015260a060808901525260c08601949387905b838210610ec557887f658bee377ff55ceae5c8883fc1d0ec604e9179fba1a50f0f094091cefa2eef048989038aa180f35b9091929394958635907fffffffff000000000000000000000000000000000000000000000000000000008216809203610f14579081528682013582820152830195830194939291840190610e94565b8980fd5b610f2881868a99969798996115b6565b35907fffffffff00000000000000000000000000000000000000000000000000000000821682036110125761100891610400610fa787610f69858c8f6115b6565b013589519283918a8301958690917fffffffff0000000000000000000000000000000000000000000000000000000060249316825260048201520190565b519020338c527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369b8652868c20908c528552858b20887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055611436565b9594939295610e60565b8a80fd5b6064908587519162461bcd60e51b8352820152601f60248201527f436f6d707574652070726f766964657220616c726561647920657869737473006044820152fd5b8880fd5b8680fd5b5082346103a257602090816003193601126107bc573573ffffffffffffffffffffffffffffffffffffffff81168091036107bc5783527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3699815281832060028101549293906110cd846113db565b926110da8651948561135e565b8484527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09182611109876113db565b01845b818110611247575050600390611139611124886113db565b976111318a51998a61135e565b8089526113db565b8784019401368537805491019084815b6111c357505050855195869581870191875251809152606086019290845b8181106111ac57505050848203818601528080855193848152019401925b82811061119457505050500390f35b83515185528695509381019392810192600101611185565b825185528897509383019391830191600101611167565b61122c9082879698999a9597527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f369a8752848620855190611202826112db565b54815261120f828b6113f3565b5261121a818a6113f3565b5082611226828c6113f3565b52611436565b90845281855260018385200154908198979694959398611149565b9288938196959798995161125a816112db565b86815282828b010152019796959394929761110c565b83903461033b578160031936011261033b5760209073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60031960409101126112d6576004359060243590565b600080fd5b6020810190811067ffffffffffffffff8211176112f757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176112f757604052565b6040810190811067ffffffffffffffff8211176112f757604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176112f757604052565b919082039182116113ac57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b67ffffffffffffffff81116112f75760051b60200190565b80518210156114075760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113ac5760010190565b1561146a57565b608460405162461bcd60e51b815260206004820152602c60248201527f4d696e207072696365207065722065706f63682073686f756c6420626520677260448201527f6561746572207468616e203000000000000000000000000000000000000000006064820152fd5b156114db57565b608460405162461bcd60e51b815260206004820152602760248201527f4d617820636f6c6c61746572616c2073686f756c64206265206772656174657260448201527f207468616e2030000000000000000000000000000000000000000000000000006064820152fd5b1561154c57565b608460405162461bcd60e51b815260206004820152602860248201527f5061796d656e7420746f6b656e2073686f756c64206265206e6f74207a65726f60448201527f20616464726573730000000000000000000000000000000000000000000000006064820152fd5b91908110156114075760061b0190565b6004357fffffffff00000000000000000000000000000000000000000000000000000000811681036112d65790565b919082018092116113ac57565b818102929181159184041417156113ac57565b9290604051927f23b872dd00000000000000000000000000000000000000000000000000000000602085015273ffffffffffffffffffffffffffffffffffffffff809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff8411176112f75761169192604052611693565b565b73ffffffffffffffffffffffffffffffffffffffff16906040516116b681611342565b6020928382527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564848301526000808486829651910182855af13d15611828573d9167ffffffffffffffff83116117fb579061174f93929160405192611742887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116018561135e565b83523d868885013e611832565b8051918215918483156117d4575b50505090501561176a5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b91938180945001031261033b578201519081151582036117f857508038808461175d565b80fd5b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b9061174f92916060915b919290156118935750815115611846575090565b3b1561184f5790565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156118a65750805190602001fd5b6040519062461bcd60e51b825281602080600483015282519283602484015260005b848110611909575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b8181018301518682016044015285935082016118c8565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff9290921660248301526044808301939093529181526116919161198260648361135e565b611693565b1561198e57565b606460405162461bcd60e51b815260206004820152601e60248201527f436f6d707574652070726f766964657220646f65736e277420657869737400006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff8091166000527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3698602052611a276040600020916002830154161515611987565b90565b611a358115156114d4565b611a3e336119d2565b906001820190815491818314611b3057819055600383018054938415611b295782847fa8c62389b31fc6dfc3c0ec83e30a55441144e480af1c0721cf27c7c88f2995259682611ae39711600014611ae8575092611aa1611aa992611acb9561139f565b905490611602565b9073ffffffffffffffffffffffffffffffffffffffff60023392015416611920565b60408051338152602081019290925290918291820190565b0390a1565b611b249450611b1790611b1260029373ffffffffffffffffffffffffffffffffffffffff9561139f565b611602565b9201541630903390611615565b611acb565b5050505050565b606460405162461bcd60e51b815260206004820152601a60248201527f4d617820636f6c6c61746572616c206973207468652073616d650000000000006044820152fd5b91909173ffffffffffffffffffffffffffffffffffffffff60608201931681526004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036112d65760208201526040602435910152565b8015611d0d5760008181527f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f36979081602052611c288360408320600160405191611c1883611342565b8054835201546020820152611dd5565b611cc9577f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3695918254907f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3696611c7c8154611436565b9055848215611ca1579060409392916001955585835260205280838320558152200155565b7f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f36945550505055565b606460405162461bcd60e51b815260206004820152601260248201527f4b657920616c72656164792065786973747300000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601260248201527f4b65792063616e6e6f74206265205a45524f00000000000000000000000000006044820152fd5b8115611d0d57600381019060009083825282602052611d8e8460408420600160405191611d7d83611342565b805483520154602082015283611e55565b611cc95760018101928484549260028101611da98154611436565b90558315611dce57509060409392916001955585835260205280838320558152200155565b5550505055565b9081511591821592611e47575b508115611e1c575b8115611df4575090565b90507f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f3695541490565b7f7440c3b83c734284c6dbaabc56e2aab447401ce649d182f2600464c1292f36945481149150611dea565b602001511515915038611de2565b8151158015939290611e8a575b508215611e7f575b8215611e7557505090565b6001015414919050565b805482149250611e6a565b602001511515925038611e6256fea2646970667358221220e6d2b58ad8a60a22119122c46b90805f27cc7d74689ae8a778d3a3d9daacd40f64736f6c63430008130033";

type MatcherConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MatcherConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MatcherConfig__factory extends ContractFactory {
  constructor(...args: MatcherConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    globalCore_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(globalCore_, overrides || {});
  }
  override deploy(
    globalCore_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(globalCore_, overrides || {}) as Promise<
      MatcherConfig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MatcherConfig__factory {
    return super.connect(runner) as MatcherConfig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MatcherConfigInterface {
    return new Interface(_abi) as MatcherConfigInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MatcherConfig {
    return new Contract(address, _abi, runner) as unknown as MatcherConfig;
  }
}
