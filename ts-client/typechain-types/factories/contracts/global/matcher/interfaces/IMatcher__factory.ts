/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMatcher,
  IMatcherInterface,
} from "../../../../../contracts/global/matcher/interfaces/IMatcher";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "peerId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "computeUnitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dealCreationBlock",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "appCID",
        type: "tuple",
      },
    ],
    name: "ComputePeerMatched",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
    ],
    name: "findComputePeers",
    outputs: [
      {
        internalType: "address[]",
        name: "computeProviders",
        type: "address[]",
      },
      {
        internalType: "bytes32[][]",
        name: "computePeers",
        type: "bytes32[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDeal",
        name: "deal",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "providers",
        type: "address[]",
      },
      {
        internalType: "bytes32[][]",
        name: "peers",
        type: "bytes32[][]",
      },
    ],
    name: "matchDeal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMatcher__factory {
  static readonly abi = _abi;
  static createInterface(): IMatcherInterface {
    return new Interface(_abi) as IMatcherInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IMatcher {
    return new Contract(address, _abi, runner) as unknown as IMatcher;
  }
}
