/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { WorkerManager, WorkerManagerInterface } from "../WorkerManager";

const _abi = [
  {
    type: "function",
    name: "accessType",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum IConfig.AccessType",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "appCID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "changeAccessType",
    inputs: [
      {
        name: "accessType_",
        type: "uint8",
        internalType: "enum IConfig.AccessType",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "creationBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "effectors",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct CIDV1[]",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAccessList",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getComputeUnit",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IWorkerManager.ComputeUnit",
        components: [
          {
            name: "id",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "workerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "joinedEpoch",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getComputeUnitCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getComputeUnits",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IWorkerManager.ComputeUnit[]",
        components: [
          {
            name: "id",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "workerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "joinedEpoch",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWorkerCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isInAccessList",
    inputs: [
      {
        name: "addr",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxWorkersPerProvider",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minWorkers",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paymentToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pricePerWorkerEpoch",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeFromAccessList",
    inputs: [
      {
        name: "addr",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAppCID",
    inputs: [
      {
        name: "appCID_",
        type: "tuple",
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetWorkers",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AppCIDChanged",
    inputs: [
      {
        name: "newAppCID",
        type: "tuple",
        indexed: false,
        internalType: "struct CIDV1",
        components: [
          {
            name: "prefixes",
            type: "bytes4",
            internalType: "bytes4",
          },
          {
            name: "hash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ComputeUnitJoined",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ComputeUnitRemoved",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WorkerIdUpdated",
    inputs: [
      {
        name: "computeUnitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "workerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611552908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600060e0918135831c908163055236f4146111d6578163108d2f521461117a57816314d3b76714610f3a5781631763451414610ede578163176474cf14610dd35781632943dcab14610d775781632db3119314610d1b5781633013ce2914610ca95781634b66a30914610a8f5781634d7599f114610a335781636cd13448146109d7578163715018a614610919578163745e920b146108325781637878e81b1461079f5781638a0c725b146107435781638d5ddbb31461058b5781638da5cb5b146105195781639bc6686814610428578163b55ec18a1461038f578163f2fde38b14610280575063fc1e5e2a1461010a57600080fd5b3461027d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027d5782907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0e90815461016f61016a82611351565b61130d565b9080825260209586830190819585527f41d22fcf61f8b32ca910e56247176ffedb9dcd2ae76207e235d37179490c642c9085925b848410610225575050505050835194859481860192828752518093528086019493905b8382106101d35786860387f35b9184965082866102156001949698849851602080917fffffffff0000000000000000000000000000000000000000000000000000000081511684520151910152565b01960192018695949293916101c6565b60028a6001926102399c99989a9b9c61129e565b7fffffffff000000000000000000000000000000000000000000000000000000008754871b16815284870154838201528152019301930192919897969495986101a3565b80fd5b9050833461038b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261038b5781359173ffffffffffffffffffffffffffffffffffffffff91828416809403610387576102dd6114ac565b83156103585750507fc43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb80805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8480fd5b8280fd5b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104245760ff7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0f541690519160038210156103f857602083838152f35b806021857f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b5080fd5b50503461027d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027d57602061046261129e565b82815201527fffffffff0000000000000000000000000000000000000000000000000000000061049061129e565b917f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0654901b1681527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0754602082015261051782518092602080917fffffffff0000000000000000000000000000000000000000000000000000000081511684520151910152565bf35b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104245760209073ffffffffffffffffffffffffffffffffffffffff7fc43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb8054169051908152f35b84833461027d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027d577f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d12546105e961016a82611351565b928184527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08061061884611351565b019260209336858801377f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d105485905b8282106106fc5750505084519261066c61066361016a86611351565b94808652611351565b8482019201368337845b86518110156106a6578061068d6106a192896113c5565b5160601c61069b82886113c5565b52611369565b610676565b509190848483519485948186019282875251809352850193925b8281106106cf57505050500390f35b835173ffffffffffffffffffffffffffffffffffffffff16855286955093810193928101926001016106c0565b80610707838a6113c5565b5286527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d13855261073d6001858820015491611369565b90610647565b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610424576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0c549051908152f35b9050346104245760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261042457356003811015610424576107e26114ac565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0f9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905580f35b8491503461038b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261038b578160809361051792610874611408565b503581527fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d23602052209160036108a86112ed565b93805485526001810154602086015273ffffffffffffffffffffffffffffffffffffffff600282015416838601520154606084015251809260608091805184526020810151602085015273ffffffffffffffffffffffffffffffffffffffff60408201511660408501520151910152565b823461027d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261027d576109506114ac565b8073ffffffffffffffffffffffffffffffffffffffff7fc43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb808054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610424576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0d549051908152f35b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610424576020907fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d21549051908152f35b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610424577fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d20547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610b1a610b1161016a84611351565b92808452611351565b01835b818110610c8c5750507fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d245483815b610bcd57505081519160208080850192818652845180945285019301945b828110610b765784840385f35b90919282608082610bbe6001948a5160608091805184526020810151602085015273ffffffffffffffffffffffffffffffffffffffff60408201511660408501520151910152565b01960191019492919094610b69565b81859395527fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d2760207fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d238152610c7986862093610c276112ed565b855481526003600196878101548684015273ffffffffffffffffffffffffffffffffffffffff6002820154168b84015201546060820152610c68828b6113c5565b52610c73818a6113c5565b50611369565b9385525283832001549193919081610b4b565b602090610c9a959395611408565b82828801015201939193610b1d565b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104245760209073ffffffffffffffffffffffffffffffffffffffff7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0854169051908152f35b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610424576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0a549051908152f35b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610424576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0b549051908152f35b8385849234610eda57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610eda57610e0d6114ac565b35917fffffffff00000000000000000000000000000000000000000000000000000000831690818403610387577fc820a66d3bdd50a45cf12cda6dc8ec9e94fb5123edd7da736eea18316f8523a0937f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d06911c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000825416179055602435807f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d075582519182526020820152a180f35b8380fd5b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610424576020907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d05549051908152f35b9050833461038b576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610eda57823573ffffffffffffffffffffffffffffffffffffffff81168103610387577fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090610fb66114ac565b60601b16908185527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d13918282528386206001610ff061129e565b91805483520154838201908152611007838361142c565b1561111e579181600195938997959351801560001461110b575080517f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d10555b51806110fa5750517f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d11555b855252822082815501557f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d129081549081156110ce57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905580f35b8360116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b905190875283835284872055611071565b815190895285855287878a200155611046565b606487858851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601260248201527f4b657920646f6573206e6f7420657869737400000000000000000000000000006044820152fd5b82853461042457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610424576020907fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d20549051908152f35b8491503461038b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261038b573573ffffffffffffffffffffffffffffffffffffffff8116810361038b57602092827fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006112959360601b16918281527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d13865220600161128561129e565b918054835201548582015261142c565b90519015158152f35b604051906040820182811067ffffffffffffffff8211176112be57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051906080820182811067ffffffffffffffff8211176112be57604052565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff8211176112be57604052565b67ffffffffffffffff81116112be5760051b60200190565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113965760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156113d95760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6114106112ed565b9060008252600060208301526000604083015260006060830152565b908151159182159261149e575b508115611473575b811561144b575090565b90507f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d11541490565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d105481149150611441565b602001511515915038611439565b73ffffffffffffffffffffffffffffffffffffffff7fc43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb80541633036114ec57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fdfea264697066735822122034856d78e5fee30fa10357bf32c75bb751ddf03e29ff305934219f3f9b74f12564736f6c63430008130033";

type WorkerManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkerManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorkerManager__factory extends ContractFactory {
  constructor(...args: WorkerManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WorkerManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WorkerManager__factory {
    return super.connect(runner) as WorkerManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkerManagerInterface {
    return new Interface(_abi) as WorkerManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WorkerManager {
    return new Contract(address, _abi, runner) as unknown as WorkerManager;
  }
}
