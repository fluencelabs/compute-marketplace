/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IWorkerManager,
  IWorkerManagerInterface,
} from "../IWorkerManager";

const _abi = [
  {
    type: "function",
    name: "getComputeUnit",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IWorkerManager.ComputeUnit",
        components: [
          {
            name: "id",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "workerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "peerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "provider",
            type: "address",
            internalType: "address",
          },
          {
            name: "joinedEpoch",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getComputeUnitCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getComputeUnits",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IWorkerManager.ComputeUnit[]",
        components: [
          {
            name: "id",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "workerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "peerId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "provider",
            type: "address",
            internalType: "address",
          },
          {
            name: "joinedEpoch",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWorkerCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ComputeUnitJoined",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ComputeUnitRemoved",
    inputs: [
      {
        name: "unitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WorkerIdUpdated",
    inputs: [
      {
        name: "computeUnitId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "workerId",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
] as const;

export class IWorkerManager__factory {
  static readonly abi = _abi;
  static createInterface(): IWorkerManagerInterface {
    return new Interface(_abi) as IWorkerManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IWorkerManager {
    return new Contract(address, _abi, runner) as unknown as IWorkerManager;
  }
}
