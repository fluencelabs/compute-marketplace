/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Deal, DealInterface } from "../Deal";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct CIDV1",
        name: "newAppCID",
        type: "tuple",
      },
    ],
    name: "AppCIDChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "ComputeUnitExited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "unitId",
        type: "bytes32",
      },
    ],
    name: "ComputeUnitJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "endedEpoch",
        type: "uint256",
      },
    ],
    name: "DealEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "maxPaidEpoch",
        type: "uint256",
      },
    ],
    name: "MaxPaidEpochUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "computeUnitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "computeUnitId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "workerId",
        type: "bytes32",
      },
    ],
    name: "WorkerIdUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "accessType",
    outputs: [
      {
        internalType: "enum IConfig.AccessType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "computeProvider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "computeUnitId",
        type: "bytes32",
      },
    ],
    name: "addComputeUnit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "appCID",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IConfig.AccessType",
        name: "accessType_",
        type: "uint8",
      },
    ],
    name: "changeAccessType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "effectors",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccessList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getComputeUnit",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "workerId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "joinedEpoch",
            type: "uint256",
          },
        ],
        internalType: "struct IWorkerManager.ComputeUnit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getComputeUnitCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getComputeUnits",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "workerId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "joinedEpoch",
            type: "uint256",
          },
        ],
        internalType: "struct IWorkerManager.ComputeUnit[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFreeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxPaidEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "computeUnitId",
        type: "bytes32",
      },
    ],
    name: "getRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatus",
    outputs: [
      {
        internalType: "enum IDeal.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWorkerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICore",
        name: "globalCore_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "appCID_",
        type: "tuple",
      },
      {
        internalType: "contract IERC20",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minWorkers_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetWorkers_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxWorkersPerProvider_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerWorkerEpoch_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1[]",
        name: "effectors_",
        type: "tuple[]",
      },
      {
        internalType: "enum IConfig.AccessType",
        name: "accessType_",
        type: "uint8",
      },
      {
        internalType: "address[]",
        name: "accessList_",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isInAccessList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWorkersPerProvider",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerWorkerEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "computeUnitId",
        type: "bytes32",
      },
    ],
    name: "removeComputeUnit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "removeFromAccessList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "prefixes",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct CIDV1",
        name: "appCID_",
        type: "tuple",
      },
    ],
    name: "setAppCID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "computeUnitId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "workerId",
        type: "bytes32",
      },
    ],
    name: "setWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetWorkers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "computeUnitId",
        type: "bytes32",
      },
    ],
    name: "withdrawRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a08060405234620000e157306080526000549060ff8260081c166200008f575060ff8082160362000053575b604051613af39081620000e78239608051818181611593015281816116c10152611b3f0152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386200002c565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163055236f4146129d25750806307da68f514612828578063108d2f52146127fd57806314d3b767146126ad5780631763451414612670578063176474cf146125b85780631af57b96146124845780632943dcab146124595780632db311931461242e5780632e1a7d4d146120845780633013ce291461204e5780633591187c14611cee5780633659cfe614611b1b578063378b22e414611af05780634b66a309146119555780634d7599f11461192a5780634e69d560146119025780634f1ef2861461164457806352d1902d146115805780636cd1344814611555578063715018a6146114eb578063745e920b146114495780637878e81b1461141b5780637dfb6626146112405780638a0c725b146112035780638d5ddbb31461109b5780638da5cb5b146110655780639bc6686814610fc5578063b55ec18a14610f7c578063b6b55f2514610de2578063c7d90c3e146108ca578063d5053ab01461069d578063e93c4f15146105b5578063f2fde38b1461058a578063f5971050146102b55763fc1e5e2a146101ab57600080fd5b346102b05760003660031901126102b05760008051602061395e83398151915280546101d681612ded565b6101e36040519182612b36565b81815260209182820180946000527f41d22fcf61f8b32ca910e56247176ffedb9dcd2ae76207e235d37179490c642c6000915b8383106102785760408051878152865181890181905289928201908960005b8281106102425784840385f35b909192826040826102696001948a516020809163ffffffff60e01b81511684520151910152565b01960191019492919094610235565b60028660019260405161028a81612ac6565b63ffffffff60e01b865460e01b1681528486015483820152815201920192019190610216565b600080fd5b346102b05760403660031901126102b0576102ce612a90565b60243560018060a01b036000805160206138be833981519152906102f6818354163314613367565b6000805160206139fe833981519152918254906000805160206139de8339815191525482101561054e5784600052600080516020613a9e83398151915293602096858852846002604060002001541661051757841692836000527fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d228089526040600020547f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0c548110156104c357926103cc8796959293600498946103ba8d97612e05565b90886000528752604060002055612e05565b9055541660405194858092630ecce30160e31b82525afa9182156104b757600092610487575b600393506040519461040386612ae2565b86865287860190600082526040870193845260608701948552876000528852604060002095518655516001860155600285019151166001600160601b0360a01b8254161790555191015561045681613709565b7f228530629735760f3e888bfcb8a22cb957dd75207ddb45556d8ba3ae27aca59782604051838152a1604051908152f35b91508583813d83116104b0575b61049e8183612b36565b810103126102b05760039251916103f2565b503d610494565b6040513d6000823e3d90fd5b60405162461bcd60e51b8152600481018b9052602660248201527f4d617820756e6974732070657220636f6d707574652070726f76696465722072604482015265195858da195960d21b6064820152608490fd5b60405162461bcd60e51b815260048101899052600f60248201526e125908185b1c9958591e481d5cd959608a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527315185c99d95d081d5b9a5d1cc81c995858da195960621b6044820152606490fd5b346102b05760203660031901126102b0576105b36105a6612a90565b6105ae613864565b6137f0565b005b346102b05760003660031901126102b0576105ce6133b3565b6000805160206138be83398151915254604051630ecce30160e31b815290602090829060049082906001600160a01b03165afa9081156104b75760009161066b575b602060608461066185600080516020613a3e8339815191525460008051602061393e8339815191525460008051602061397e8339815191525491600080516020613a5e833981519152549386612f71565b0151604051908152f35b90506020813d8211610695575b8161068560209383612b36565b810103126102b057516020610610565b3d9150610678565b346102b05760403660031901126102b05760043560243560008051602061397e833981519152805492806000526020600080516020613a9e8339815191528152604060002092841561088557600186940190815415610843575b50604085600495967fcf79e0e27c8c35d39bd9b727f35e6f79573597f660c88baf483fc1511c49203c935581519085825284820152a16000805160206138be83398151915254604051630ecce30160e31b815293829185919082906001600160a01b03165afa9283156104b75760009361080c575b5091610803600194927fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f360a095600080516020613a5e833981519152549260005252604060002096600080516020613a3e83398151915254946107eb83836107d26133b3565b9860008051602061393e8339815191525490898b612f71565b600080516020613a1e83398151915254918587613184565b84550151910155005b939192508084813d831161083c575b6108258183612b36565b810103126102b0579251909290919061080361076c565b503d61081b565b9460049450806040917fcf79e0e27c8c35d39bd9b727f35e6f79573597f660c88baf483fc1511c49203c936108778a612e05565b8099559350509594506106f7565b60405162461bcd60e51b815260048101839052601760248201527f576f726b657249642063616e277420626520656d7074790000000000000000006044820152606490fd5b346102b0576101603660031901126102b0576004356001600160a01b03811681036102b05760403660231901126102b0576064356001600160a01b03811681036102b05767ffffffffffffffff8061010435116102b057366023610104350112156102b057806101043560040135116102b057366024610104356004013560061b610104350101116102b05760036101243510156102b0578061014435116102b057366023610144350112156102b0576101443560040135116102b057366024610144356004013560051b610144350101116102b0576000549160ff8360081c161592838094610dd5575b8015610dbe575b15610d625760ff19811660011760005583610d50575b506109ff60ff60005460081c166109e881613476565b6109f181613476565b6109fa81613476565b613476565b610a08336137f0565b610a1960ff60005460081c16613476565b437f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d05556000805160206138be83398151915280546001600160a01b039283166001600160a01b0319918216179091556000805160206139be8339815191528054939092169216919091179055608435600080516020613a1e8339815191525560a4356000805160206139de8339815191525560c4357f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0c5560e435600080516020613a5e8339815191525560005b61010435600401358110610c465750610b0161012435612e28565b60005b61014435600401358110610bfe57506024356001600160e01b03198116908181036102b0577fc820a66d3bdd50a45cf12cda6dc8ec9e94fb5123edd7da736eea18316f8523a0916040917f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d069060e01c63ffffffff19825416179055604435807f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d075582519182526020820152a160005490610bc360ff8360081c16613476565b610bc957005b61ff0019166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b61014435600582901b0160240135906001600160a01b03821682036102b057610c4191610c3c9060601b6bffffffffffffffffffffffff19166135d2565b612e05565b610b04565b60008051602061395e8339815191525468010000000000000000811015610d3a57600181018060008051602061395e83398151915255811015610d245760008051602061395e83398151915260005261010435600683901b01919060011b7f41d22fcf61f8b32ca910e56247176ffedb9dcd2ae76207e235d37179490c642c810160248401356001600160e01b0319811681036102b057610d1f947f41d22fcf61f8b32ca910e56247176ffedb9dcd2ae76207e235d37179490c642d9260449260e01c63ffffffff198254161790550135910155612e05565b610ae6565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61ffff191661010117600055836109d2565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156109bc5750600160ff8216146109bc565b50600160ff8216106109b5565b346102b0576020806003193601126102b05760043590610e00613864565b6000805160206138be83398151915254604051630ecce30160e31b81526001600160a01b039183908290600490829086165afa80156104b757600090610f4d575b610ec7915060008051602061397e8339815191525490600080516020613a5e833981519152549180600080516020613a3e8339815191525492610ea08583610e876133b3565b9660008051602061393e83398151915254908589612f71565b60608401610eaf8a8251612f64565b9052600080516020613a1e8339815191525493613184565b6000805160206139be8339815191525416916040516323b872dd60e01b838201523360248201523060448201528160648201526064815260a081019080821067ffffffffffffffff831117610d3a577f2a89b2e3d580398d6dc2db5e0f336b52602bbaa51afa9bb5cdf59239cf0d2bea94610f4492604052613091565b604051908152a1005b508281813d8311610f75575b610f638183612b36565b810103126102b057610ec79051610e41565b503d610f59565b346102b05760003660031901126102b057602060ff7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0f541660405190610fc181612aa6565b8152f35b346102b05760003660031901126102b05760006020604051610fe681612ac6565b828152015260408051610ff881612ac6565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d065460e01b6001600160e01b0319168082527f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0754602092830190815283519182525191810191909152f35bf35b346102b05760003660031901126102b0576000805160206138fe833981519152546040516001600160a01b039091168152602090f35b346102b05760003660031901126102b0577f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d12546110d781612ded565b906110e56040519283612b36565b808252601f1990816110f682612ded565b01906020913683860137600080516020613a7e833981519152546000905b8282106111cb5750505082519061114361112d83612ded565b9261113b6040519485612b36565b808452612ded565b828201930136843760005b845181101561117e57806111656111799287612e14565b5160601c6111738286612e14565b52612e05565b61114e565b50925090604051928392818401908285525180915260408401929160005b8281106111ab57505050500390f35b83516001600160a01b03168552869550938101939281019260010161119c565b806111d68388612e14565b5260005260008051602061389e83398151915283526111fd60016040600020015491612e05565b90611114565b346102b05760003660031901126102b05760207f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0c54604051908152f35b346102b0576020806003193601126102b057600435806000527fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f38252604060002060018060a01b03600484826000805160206138be833981519152541660405192838092630ecce30160e31b82525afa9081156104b7576000916113ee575b5060008051602061397e8339815191525490600080516020613a5e83398151915254916112ea6133b3565b916113188483600080516020613a3e8339815191525460008051602061393e83398151915254908588612f71565b60a0830151611328875483612dca565b61134a8661134560018b019361133f855487612dca565b90612dca565b612f51565b9788156113bc5789968996868d97877f9b5336625f529f36cb0543297bdf5075b7f6b830bb892ff97c09fbfeae6255d59d9760409d976113b19a61139998555560808401610eaf898251612dca565b6000805160206139be83398151915254163390613329565b8351928352820152a1005b60405162461bcd60e51b8152600481018c9052600a6024820152694e6f207265776172647360b01b6044820152606490fd5b90508481813d8311611414575b6114058183612b36565b810103126102b05751856112bf565b503d6113fb565b346102b05760203660031901126102b05760043560038110156102b0576105b390611444613864565b612e28565b346102b05760203660031901126102b0576114626134e3565b50600435600052600080516020613a9e8339815191526020526080604060002060036040519161149183612ae2565b805483526001810154602084015260018060a01b03600282015416604084015201546060820152611063604051809260608091805184526020810151602085015260018060a01b0360408201511660408501520151910152565b346102b05760003660031901126102b057611504613864565b6000805160206138fe83398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102b05760003660031901126102b0576020600080516020613a5e83398151915254604051908152f35b346102b05760003660031901126102b0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036115d957602060405160008051602061399e8339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b60403660031901126102b057611658612a90565b6024359067ffffffffffffffff82116102b057366023830112156102b057816004013561168481612b58565b926116926040519485612b36565b8184526020918285019136602483830101116102b0578160009260248693018537860101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906116ef30831415612b74565b61170c60008051602061399e833981519152928284541614612bd5565b611714613864565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561174c57505050506105b39150612c36565b84939416906040516352d1902d60e01b81528581600481865afa600091816118d3575b506117d05760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b0361187c576117de83612c36565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2835115801590611874575b61181457005b600080916105b3957f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6040519661184a88612b1a565b60278852870152660819985a5b195960ca1b60408701525190845af461186e612cc6565b91612cf6565b50600161180e565b60405162461bcd60e51b815260048101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d83116118fb575b6118eb8183612b36565b810103126102b05751908861176f565b503d6118e1565b346102b05760003660031901126102b057602061191d612e61565b60405190610fc181612aa6565b346102b05760003660031901126102b057602060008051602061397e83398151915254604051908152f35b346102b05760003660031901126102b0576000805160206139fe8339815191525461197f81612ded565b9061198d6040519283612b36565b80825261199c601f1991612ded565b0160005b818110611ad9578260006000805160206138de8339815191525490815b611a325760408051602080825285518183018190528187019383019160005b8281106119e95784840385f35b90919282608082611a236001948a5160608091805184526020810151602085015260018060a01b0360408201511660408501520151910152565b019601910194929190946119dc565b816000527fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d276020600080516020613a9e8339815191528152611ac6604060002093604051611a7f81612ae2565b855481526001808701548583015260028701546001600160a01b031660408301526003909601546060820152611ab58289612e14565b52611ac08188612e14565b50612e05565b93600052526040600020015490816119bd565b602090611ae46134e3565b828286010152016119a0565b346102b05760003660031901126102b0576020600080516020613a3e83398151915254604051908152f35b346102b0576020806003193601126102b057611b35612a90565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169290611b6e30851415612b74565b611b8b60008051602061399e833981519152948286541614612bd5565b611b93613864565b604051938285019185831067ffffffffffffffff841117610d3a57826040526000865260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014611bf057505050506105b39150612c36565b84939416906040516352d1902d60e01b81528581600481865afa60009181611cbf575b50611c745760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b0361187c57611c8283612c36565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2835115801590611cb75761181457005b50600061180e565b9091508681813d8311611ce7575b611cd78183612b36565b810103126102b057519088611c13565b503d611ccd565b346102b0576020806003193601126102b0576000805160206138be833981519152546001600160a01b039060049081359084908416611d2e338214613367565b604051630ecce30160e31b815293849182905afa9182156104b75760009261201f575b5060008051602061397e8339815191529081549381600052600080516020613a9e83398151915290818752600260406000200154168015611fe257611dde6000805160206139fe833981519152918254906000527fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d2289526040600020611dd781546134d6565b90556134d6565b905582549282600052818752600160406000200154611fcf575b50816000528552600060036040822082815582600182015582600282015501557fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d278086526040600020600160405191611e5083612ac6565b805483520154878201908152611e668483613564565b15611f955791816105b398937fa0cc20d0cbdfbedf5bca4df09ed0e34426e79147d16b74a7fc7b600841abc4e09593518015600014611f7e575080516000805160206138de833981519152555b5180611f6a5750517fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d25555b816000528252600060016040822082815501557fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d26611f1c81546134d6565b9055604051908152a1600080516020613a5e8339815191525492600080516020613a3e8339815191525492611f548583610e876133b3565b600080516020613a1e8339815191525493613184565b905190600052818452604060002055611ede565b815190600052838652600160406000200155611eb3565b60405162461bcd60e51b815260048101899052601260248201527112d95e48191bd95cc81b9bdd08195e1a5cdd60721b6044820152606490fd5b92611fd9906134d6565b80935586611df8565b60405162461bcd60e51b815260048101889052601560248201527410dbdb5c1d5d19555b9a5d081b9bdd08199bdd5b99605a1b6044820152606490fd5b9091508381813d8311612047575b6120378183612b36565b810103126102b057519084611d51565b503d61202d565b346102b05760003660031901126102b0576000805160206139be833981519152546040516001600160a01b039091168152602090f35b346102b0576020806003193601126102b057600435906120a2613864565b6000805160206138be8339815191528054604051630ecce30160e31b81526001600160a01b039492918516918482600481865afa9182156104b7576000926123ff575b5060008051602061397e8339815191525492600080516020613a5e833981519152549360ff7fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f4541660001461228c575050600491925084867fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f55492541660405193848092632170a75960e11b82525afa9081156104b75760009161225b575b61218e9250612f64565b101561220057610f44817f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b56947fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4ee6121e6838254612dca565b90556000805160206139be83398151915254163390613329565b60405162461bcd60e51b815260048101839052602d60248201527f43616e2774207769746864726177206265666f726520322065706f636873206160448201526c199d195c881919585b08195b99609a1b6064820152608490fd5b90508482813d8311612285575b6122728183612b36565b810103126102b05761218e915190612184565b503d612268565b9150916122976133b3565b926122c58584600080516020613a3e8339815191525460008051602061393e83398151915254908689612f71565b60048760608601926122d8898551612dca565b8452604051632170a75960e11b815292839182905afa80156104b75786916000916123cc575b506123229161230c91612f51565b6000805160206139de8339815191525490612f51565b90511061237257610f44938593837f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b56999461236d94600080516020613a1e8339815191525493613184565b611399565b60405162461bcd60e51b815260048101879052602c60248201527f467265652062616c616e6365206e6565647320746f20636f766572206d696e6960448201526b6d756d20322065706f63687360a01b6064820152608490fd5b809250898092503d83116123f8575b6123e58183612b36565b810103126102b0575185906123226122fe565b503d6123db565b9091508481813d8311612427575b6124178183612b36565b810103126102b0575190866120e5565b503d61240d565b346102b05760003660031901126102b0576020600080516020613a1e83398151915254604051908152f35b346102b05760003660031901126102b05760206000805160206139de83398151915254604051908152f35b346102b0576020806003193601126102b0576004356000527fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f38152600460406000208260018060a01b036000805160206138be833981519152541660405193848092630ecce30160e31b82525afa9182156104b757600092612587575b509061134561257f9261133f60008051602061397e8339815191525491600160a0612573600080516020613a5e833981519152549761256b896125426133b3565b98600080516020613a3e8339815191525460008051602061393e8339815191525490858c612f71565b845490612dca565b94015191015490612dca565b604051908152f35b91508282813d83116125b1575b61259e8183612b36565b810103126102b057905190611345612501565b503d612594565b346102b05760403660031901126102b0576125d1613864565b6004356001600160e01b03198116908181036102b0577fc820a66d3bdd50a45cf12cda6dc8ec9e94fb5123edd7da736eea18316f8523a0916040917f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d069060e01c63ffffffff19825416179055602435807f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d075582519182526020820152a1005b346102b05760003660031901126102b05760207f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0554604051908152f35b346102b0576020806003193601126102b0576126c7612a90565b6126cf613864565b6001600160601b03199060601b16908160005260008051602061389e83398151915291828252604060002060016040519161270983612ac6565b80548352015483820190815261271f8383613508565b156127c3578151806127ac57508051600080516020613a7e833981519152555b518061279857505160008051602061391e833981519152555b60005252600060016040822082815501557f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d1261279481546134d6565b9055005b905190600052838352604060002055612758565b81519060005285855260016040600020015561273f565b60405162461bcd60e51b815260048101859052601260248201527112d95e48191bd95cc81b9bdd08195e1a5cdd60721b6044820152606490fd5b346102b05760003660031901126102b05760206000805160206139fe83398151915254604051908152f35b346102b05760003660031901126102b057612841613864565b6128496133b3565b6000805160206138be83398151915254604051630ecce30160e31b8152916020918290849060049082906001600160a01b03165afa9283156104b7576000936129a2575b509160007f3ad16bb58712aa329948d76146b096a4f4b85e024d99473dc50bcd358811b86c93612920600080516020613a3e8339815191529182549060008051602061397e8339815191525461290860008051602061393e833981519152549382600080516020613a5e833981519152549586928b87612f71565b8087600080516020613a1e8339815191525493613184565b557fcecd349d986645e1758ec135f91f1ad20564a8bcc6c2b5a5eaca9b09841495c582604051838152a17fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f4600160ff19825416179055807fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f555604051908152a1005b92508183813d83116129cb575b6129b98183612b36565b810103126102b057915191600061288d565b503d6129af565b346102b05760203660031901126102b057602080916001600160601b03196129f8612a90565b60601b16908160005260008051602061389e8339815191528352604060002090612a2181612ac6565b6001825492838352015493849101521591821592612a86575b508115612a6d575b8115612a54575b506040519015158152f35b905060008051602061391e833981519152541482612a49565b600080516020613a7e8339815191525481149150612a42565b1515915083612a3a565b600435906001600160a01b03821682036102b057565b60031115612ab057565b634e487b7160e01b600052602160045260246000fd5b6040810190811067ffffffffffffffff821117610d3a57604052565b6080810190811067ffffffffffffffff821117610d3a57604052565b60c0810190811067ffffffffffffffff821117610d3a57604052565b6060810190811067ffffffffffffffff821117610d3a57604052565b90601f8019910116810190811067ffffffffffffffff821117610d3a57604052565b67ffffffffffffffff8111610d3a57601f01601f191660200190565b15612b7b57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15612bdc57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15612c6b5760008051602061399e83398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b3d15612cf1573d90612cd782612b58565b91612ce56040519384612b36565b82523d6000602084013e565b606090565b91929015612d585750815115612d0a575090565b3b15612d135790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015612d6b5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510612db1575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350612d8e565b91908203918211612dd757565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff8111610d3a5760051b60200190565b6000198114612dd75760010190565b8051821015610d245760209160051b010190565b612e3181612aa6565b7f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0f9060ff80198354169116179055565b60ff7fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f45416612f4c5760008051602061397e83398151915254600080516020613a1e833981519152541115612eb557600090565b6000805160206138be83398151915254604051630ecce30160e31b815290602090829060049082906001600160a01b03165afa9081156104b757600091612f18575b50600080516020613a3e833981519152541015612f1357600090565b600190565b906020823d8211612f44575b81612f3160209383612b36565b81010312612f4157505138612ef7565b80fd5b3d9150612f24565b600290565b81810292918115918404141715612dd757565b91908201809211612dd757565b91939092948415801590818092613088575b8061307f575b15612fe357505091612fac60a092611345612fd895611345899a612fde9a612dca565b60608201612fbb828251612dca565b9052612fcc60808301918251612f64565b90520193845192612dca565b90612f64565b90525b565b908092949796919061306b575b1561300d5750505050612fd860a0612fde93940193845192612dca565b92939281613060575b50613023575b5050505050565b6113456080936113456130549661303995612dca565b9260608101613049858251612dca565b905201918251612f64565b9052388080808061301c565b905082111538613016565b508085118015612ff0575080861015612ff0565b50878711612f89565b50868611612f83565b60018060a01b0316906130ea6040516130a981612ac6565b6020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af161186e612cc6565b80519182159184831561315c575b5050509050156131055750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b91938180945001031261318057820151908115158203612f415750803880846130f8565b5080fd5b938091959392101580613320575b15613298575050506000600080516020613a3e833981519152557fcecd349d986645e1758ec135f91f1ad20564a8bcc6c2b5a5eaca9b09841495c5602060405160008152a15b80516060820151809103613270575b5060208101516080820151809103613248575b5060a06040820151910151809103613220575b5060008051602061393e83398151915255565b7fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f0553861320d565b7fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4ef55386131fa565b7fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4ee55386131e7565b8110156132a7575b50506131d8565b6132b690606084015192612f51565b801561330a576132eb6020917fcecd349d986645e1758ec135f91f1ad20564a8bcc6c2b5a5eaca9b09841495c5930485612f64565b80600080516020613a3e83398151915255604051908152a138806132a0565b634e487b7160e01b600052601260045260246000fd5b50808210613192565b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152612fe19161336282612ae2565b613091565b1561336e57565b60405162461bcd60e51b815260206004820152601e60248201527f436f6e6669673a2063616c6c6572206973206e6f742074686520436f726500006044820152606490fd5b6040516133bf81612afe565b60a060009182815282602082015282604082015282606082015282608082015201527fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4ee547fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4ef547fc576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f054906040519261345584612afe565b8084528160208501528260408501526060840152608083015260a082015290565b1561347d57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b8015612dd7576000190190565b604051906134f082612ae2565b60006060838281528260208201528260408201520152565b9081511591821592613556575b50811561353d575b8115613527575090565b905060008051602061391e833981519152541490565b600080516020613a7e833981519152548114915061351d565b602001511515915038613515565b90815115918215926135c4575b5081156135ab575b8115613583575090565b90507fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d25541490565b6000805160206138de8339815191525481149150613579565b602001511515915038613571565b80156136cf57600081815260008051602061389e8339815191529081602052613618836040832060016040519161360883612ac6565b8054835201546020820152613508565b6136955760008051602061391e833981519152918254907f8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d1261365a8154612e05565b905584821561367f579060409392916001955585835260205280838320558152200155565b600080516020613a7e8339815191525550505055565b60405162461bcd60e51b81526020600482015260126024820152714b657920616c72656164792065786973747360701b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714b65792063616e6e6f74206265205a45524f60701b6044820152606490fd5b80156136cf5760008181527fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d279081602052613761836040832060016040519161375183612ac6565b8054835201546020820152613564565b613695577fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d25918254907fec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d266137b58154612e05565b90558482156137da579060409392916001955585835260205280838320558152200155565b6000805160206138de8339815191525550505055565b6001600160a01b0390811690811561384b576000805160206138fe83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b604051631e4fbdf760e01b815260006004820152602490fd5b6000805160206138fe833981519152546001600160a01b0316330361388557565b60405163118cdaa760e01b8152336004820152602490fdfe8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d138953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d04ec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d24c43ef91433cf7d0ab2ca98c18785d28d6a5685461d30e867805d7a83cc8deb808953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d11c576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f28953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0eec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d21360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d088953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0bec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d208953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0ac576653ddc86d50a6e4d0122949ce4f03ce67b12fb750e4fa8bed8f88ff5f4f18953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d0d8953f5482bc1a621075e75537625fa3bd2025e7df7baf6ba1dbfbf2212912d10ec986952a0671e4b2e5ec4461085fb880bc7a7b88668240f8d55173039155d23a2646970667358221220d575e46baa3a6fcc53238fb20ebdebdd35387747ac5720e336ed85cb73165cad64736f6c63430008130033";

type DealConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DealConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Deal__factory extends ContractFactory {
  constructor(...args: DealConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Deal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Deal__factory {
    return super.connect(runner) as Deal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DealInterface {
    return new Interface(_abi) as DealInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Deal {
    return new Contract(address, _abi, runner) as unknown as Deal;
  }
}
