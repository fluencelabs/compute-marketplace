/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { StdError, StdErrorInterface } from "../../StdError.sol/StdError";

const _abi = [
  {
    inputs: [],
    name: "arithmeticError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assertionError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "divisionError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "encodeStorageError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enumConversionError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "indexOOBError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "memOverflowError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "popError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zeroVarError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576105449081610020823930815050f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816305ee8612146103ee5750806310332977146103835780631de45560146103185780638995290f146102ad578063986c5f6814610242578063b22dc54d146101d7578063b67689da1461016c578063d160e4de146101015763fa784a441461008557600080fd5b817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fd57806100f99151907f4e487b7100000000000000000000000000000000000000000000000000000000602083015260126024830152602482526100ef8261045d565b51918291826104a8565b0390f35b5080fd5b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fd57806100f99151907f4e487b7100000000000000000000000000000000000000000000000000000000602083015260226024830152602482526100ef8261045d565b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fd57806100f99151907f4e487b7100000000000000000000000000000000000000000000000000000000602083015260516024830152602482526100ef8261045d565b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fd57806100f99151907f4e487b7100000000000000000000000000000000000000000000000000000000602083015260316024830152602482526100ef8261045d565b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fd57806100f99151907f4e487b7100000000000000000000000000000000000000000000000000000000602083015260416024830152602482526100ef8261045d565b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fd57806100f99151907f4e487b7100000000000000000000000000000000000000000000000000000000602083015260116024830152602482526100ef8261045d565b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fd57806100f99151907f4e487b7100000000000000000000000000000000000000000000000000000000602083015260216024830152602482526100ef8261045d565b50817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fd57806100f99151907f4e487b7100000000000000000000000000000000000000000000000000000000602083015260016024830152602482526100ef8261045d565b919050827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610459576100f992507f4e487b7100000000000000000000000000000000000000000000000000000000602083015260326024830152602482526100ef8261045d565b8280fd5b6060810190811067ffffffffffffffff82111761047957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60208082528251818301819052939260005b8581106104fa575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016104ba56fea2646970667358221220667f15c8bc1498017c8a61589c8d527bc3dd55835b8739e6800be8d18af16c4564736f6c63430008130033";

type StdErrorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StdErrorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StdError__factory extends ContractFactory {
  constructor(...args: StdErrorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StdError & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StdError__factory {
    return super.connect(runner) as StdError__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StdErrorInterface {
    return new Interface(_abi) as StdErrorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StdError {
    return new Contract(address, _abi, runner) as unknown as StdError;
  }
}
