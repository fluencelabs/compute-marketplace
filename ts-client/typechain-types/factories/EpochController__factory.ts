/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  EpochController,
  EpochControllerInterface,
} from "../EpochController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761018f908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081634ff0876a1461011a575080637358c57a146100dd5763766718081461004257600080fd5b346100da57806003193601126100da577f121cc1dc602a3fb184234459f7659f6eed686da5dd7f26f01d0c4c514c9c57825442034281116100c6577f121cc1dc602a3fb184234459f7659f6eed686da5dd7f26f01d0c4c514c9c57835480156100b2576020925060405191048152f35b634e487b7160e01b83526012600452602483fd5b634e487b7160e01b82526011600452602482fd5b80fd5b50346100da57806003193601126100da5760207f121cc1dc602a3fb184234459f7659f6eed686da5dd7f26f01d0c4c514c9c578254604051908152f35b9050346101555781600319360112610155576020907f121cc1dc602a3fb184234459f7659f6eed686da5dd7f26f01d0c4c514c9c5783548152f35b5080fdfea2646970667358221220bd2e7c84394d7edbfc626c694329670b34604a2b6579ab76f8c0164dd7a88d6a64736f6c63430008130033";

type EpochControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EpochControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EpochController__factory extends ContractFactory {
  constructor(...args: EpochControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EpochController & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EpochController__factory {
    return super.connect(runner) as EpochController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EpochControllerInterface {
    return new Interface(_abi) as EpochControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EpochController {
    return new Contract(address, _abi, runner) as unknown as EpochController;
  }
}
