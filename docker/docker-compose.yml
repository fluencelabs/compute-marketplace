# This docker-compose is used for DEV purposes.
# It consists of deploy-script container with volume mounting to the host:
#  - thus, your deployments/<>.json might be changed after contract redeployed;
#  - also, out/ with contract artifacts is mounted to the host as well.
#
# To use from ../: `docker compose -f ./docker/docker-compose.yml up`.
# Note, if you changed contracts and what to use docker-compose instead of local make command to deploy
#  - you should rebuild with --build flag.
# Note, deploy may take some time, check logs.
services:
  # Anvil node with deployed contracts
  anvil-node:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.anvil
    ports:
      - "8545:8545"

  deploy-script:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.deploy
    depends_on:
      - anvil-node
    volumes:
      - ../deployments/:/app/deployments/
      - ../out/:/app/out/

  # Blockscout services
  blockscout:
    depends_on:
      - anvil-node
    image: offchainlabs/blockscout:v1.0.0-c8db5b1
    restart: always
    links:
      - postgres:database
    command:
      - /bin/sh
      - -c
      - |
        bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()"
        node init/install.js postgres 5432
        bin/blockscout start
    environment:
      ETHEREUM_JSONRPC_VARIANT: "geth"
      ETHEREUM_JSONRPC_HTTP_URL: http://anvil-node:8545/
      ETHEREUM_JSONRPC_TRACE_URL: http://anvil-node:8545/
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: "true"
      DATABASE_URL: postgresql://postgres:@postgres:5432/blockscout
      ECTO_USE_SSL: "false"
      NETWORK: ""
      SUBNETWORK: "Fluence Local Network"
      BLOCKSCOUT_VERSION: "Fluence Local Network 0.0.1"
      PORT: 4000
    ports:
      - "127.0.0.1:4000:4000"

  postgres:
    image: postgres:13.6
    restart: always
    environment:
      POSTGRES_PASSWORD: ""
      POSTGRES_USER: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "trust"
